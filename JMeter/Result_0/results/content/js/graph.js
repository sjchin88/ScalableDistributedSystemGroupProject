/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 9.0, "minX": 0.0, "maxY": 21606.0, "series": [{"data": [[0.0, 10.0], [0.1, 12.0], [0.2, 12.0], [0.3, 12.0], [0.4, 13.0], [0.5, 13.0], [0.6, 13.0], [0.7, 13.0], [0.8, 13.0], [0.9, 14.0], [1.0, 14.0], [1.1, 14.0], [1.2, 14.0], [1.3, 14.0], [1.4, 14.0], [1.5, 15.0], [1.6, 15.0], [1.7, 15.0], [1.8, 15.0], [1.9, 15.0], [2.0, 15.0], [2.1, 16.0], [2.2, 16.0], [2.3, 16.0], [2.4, 16.0], [2.5, 16.0], [2.6, 16.0], [2.7, 16.0], [2.8, 16.0], [2.9, 17.0], [3.0, 17.0], [3.1, 17.0], [3.2, 17.0], [3.3, 17.0], [3.4, 17.0], [3.5, 17.0], [3.6, 17.0], [3.7, 18.0], [3.8, 18.0], [3.9, 18.0], [4.0, 18.0], [4.1, 18.0], [4.2, 18.0], [4.3, 18.0], [4.4, 18.0], [4.5, 19.0], [4.6, 19.0], [4.7, 19.0], [4.8, 19.0], [4.9, 19.0], [5.0, 19.0], [5.1, 19.0], [5.2, 19.0], [5.3, 19.0], [5.4, 20.0], [5.5, 20.0], [5.6, 20.0], [5.7, 20.0], [5.8, 20.0], [5.9, 20.0], [6.0, 20.0], [6.1, 20.0], [6.2, 20.0], [6.3, 21.0], [6.4, 21.0], [6.5, 21.0], [6.6, 21.0], [6.7, 21.0], [6.8, 21.0], [6.9, 21.0], [7.0, 21.0], [7.1, 21.0], [7.2, 22.0], [7.3, 22.0], [7.4, 22.0], [7.5, 22.0], [7.6, 22.0], [7.7, 22.0], [7.8, 22.0], [7.9, 22.0], [8.0, 22.0], [8.1, 23.0], [8.2, 23.0], [8.3, 23.0], [8.4, 23.0], [8.5, 23.0], [8.6, 23.0], [8.7, 23.0], [8.8, 23.0], [8.9, 23.0], [9.0, 23.0], [9.1, 23.0], [9.2, 24.0], [9.3, 24.0], [9.4, 24.0], [9.5, 24.0], [9.6, 24.0], [9.7, 24.0], [9.8, 24.0], [9.9, 24.0], [10.0, 24.0], [10.1, 24.0], [10.2, 24.0], [10.3, 24.0], [10.4, 24.0], [10.5, 24.0], [10.6, 25.0], [10.7, 25.0], [10.8, 25.0], [10.9, 25.0], [11.0, 25.0], [11.1, 25.0], [11.2, 25.0], [11.3, 25.0], [11.4, 25.0], [11.5, 25.0], [11.6, 25.0], [11.7, 25.0], [11.8, 25.0], [11.9, 25.0], [12.0, 25.0], [12.1, 26.0], [12.2, 26.0], [12.3, 26.0], [12.4, 26.0], [12.5, 26.0], [12.6, 26.0], [12.7, 26.0], [12.8, 26.0], [12.9, 26.0], [13.0, 26.0], [13.1, 26.0], [13.2, 26.0], [13.3, 26.0], [13.4, 26.0], [13.5, 26.0], [13.6, 26.0], [13.7, 27.0], [13.8, 27.0], [13.9, 27.0], [14.0, 27.0], [14.1, 27.0], [14.2, 27.0], [14.3, 27.0], [14.4, 27.0], [14.5, 27.0], [14.6, 27.0], [14.7, 27.0], [14.8, 27.0], [14.9, 27.0], [15.0, 27.0], [15.1, 27.0], [15.2, 27.0], [15.3, 27.0], [15.4, 27.0], [15.5, 27.0], [15.6, 27.0], [15.7, 28.0], [15.8, 28.0], [15.9, 28.0], [16.0, 28.0], [16.1, 28.0], [16.2, 28.0], [16.3, 28.0], [16.4, 28.0], [16.5, 28.0], [16.6, 28.0], [16.7, 28.0], [16.8, 28.0], [16.9, 28.0], [17.0, 28.0], [17.1, 28.0], [17.2, 28.0], [17.3, 28.0], [17.4, 28.0], [17.5, 28.0], [17.6, 29.0], [17.7, 29.0], [17.8, 29.0], [17.9, 29.0], [18.0, 29.0], [18.1, 29.0], [18.2, 29.0], [18.3, 29.0], [18.4, 29.0], [18.5, 29.0], [18.6, 29.0], [18.7, 29.0], [18.8, 29.0], [18.9, 29.0], [19.0, 29.0], [19.1, 29.0], [19.2, 29.0], [19.3, 29.0], [19.4, 29.0], [19.5, 29.0], [19.6, 30.0], [19.7, 30.0], [19.8, 30.0], [19.9, 30.0], [20.0, 30.0], [20.1, 30.0], [20.2, 30.0], [20.3, 30.0], [20.4, 30.0], [20.5, 30.0], [20.6, 30.0], [20.7, 30.0], [20.8, 30.0], [20.9, 30.0], [21.0, 30.0], [21.1, 30.0], [21.2, 30.0], [21.3, 30.0], [21.4, 30.0], [21.5, 30.0], [21.6, 30.0], [21.7, 31.0], [21.8, 31.0], [21.9, 31.0], [22.0, 31.0], [22.1, 31.0], [22.2, 31.0], [22.3, 31.0], [22.4, 31.0], [22.5, 31.0], [22.6, 31.0], [22.7, 31.0], [22.8, 31.0], [22.9, 31.0], [23.0, 31.0], [23.1, 31.0], [23.2, 31.0], [23.3, 31.0], [23.4, 31.0], [23.5, 31.0], [23.6, 31.0], [23.7, 31.0], [23.8, 31.0], [23.9, 31.0], [24.0, 32.0], [24.1, 32.0], [24.2, 32.0], [24.3, 32.0], [24.4, 32.0], [24.5, 32.0], [24.6, 32.0], [24.7, 32.0], [24.8, 32.0], [24.9, 32.0], [25.0, 32.0], [25.1, 32.0], [25.2, 32.0], [25.3, 32.0], [25.4, 32.0], [25.5, 32.0], [25.6, 32.0], [25.7, 32.0], [25.8, 32.0], [25.9, 32.0], [26.0, 32.0], [26.1, 33.0], [26.2, 33.0], [26.3, 33.0], [26.4, 33.0], [26.5, 33.0], [26.6, 33.0], [26.7, 33.0], [26.8, 33.0], [26.9, 33.0], [27.0, 33.0], [27.1, 33.0], [27.2, 33.0], [27.3, 33.0], [27.4, 33.0], [27.5, 33.0], [27.6, 33.0], [27.7, 33.0], [27.8, 33.0], [27.9, 33.0], [28.0, 33.0], [28.1, 33.0], [28.2, 33.0], [28.3, 33.0], [28.4, 34.0], [28.5, 34.0], [28.6, 34.0], [28.7, 34.0], [28.8, 34.0], [28.9, 34.0], [29.0, 34.0], [29.1, 34.0], [29.2, 34.0], [29.3, 34.0], [29.4, 34.0], [29.5, 34.0], [29.6, 34.0], [29.7, 34.0], [29.8, 34.0], [29.9, 34.0], [30.0, 34.0], [30.1, 34.0], [30.2, 34.0], [30.3, 34.0], [30.4, 34.0], [30.5, 34.0], [30.6, 34.0], [30.7, 35.0], [30.8, 35.0], [30.9, 35.0], [31.0, 35.0], [31.1, 35.0], [31.2, 35.0], [31.3, 35.0], [31.4, 35.0], [31.5, 35.0], [31.6, 35.0], [31.7, 35.0], [31.8, 35.0], [31.9, 35.0], [32.0, 35.0], [32.1, 35.0], [32.2, 35.0], [32.3, 35.0], [32.4, 35.0], [32.5, 35.0], [32.6, 35.0], [32.7, 35.0], [32.8, 35.0], [32.9, 35.0], [33.0, 35.0], [33.1, 35.0], [33.2, 36.0], [33.3, 36.0], [33.4, 36.0], [33.5, 36.0], [33.6, 36.0], [33.7, 36.0], [33.8, 36.0], [33.9, 36.0], [34.0, 36.0], [34.1, 36.0], [34.2, 36.0], [34.3, 36.0], [34.4, 36.0], [34.5, 36.0], [34.6, 36.0], [34.7, 36.0], [34.8, 36.0], [34.9, 36.0], [35.0, 36.0], [35.1, 36.0], [35.2, 36.0], [35.3, 36.0], [35.4, 36.0], [35.5, 36.0], [35.6, 36.0], [35.7, 37.0], [35.8, 37.0], [35.9, 37.0], [36.0, 37.0], [36.1, 37.0], [36.2, 37.0], [36.3, 37.0], [36.4, 37.0], [36.5, 37.0], [36.6, 37.0], [36.7, 37.0], [36.8, 37.0], [36.9, 37.0], [37.0, 37.0], [37.1, 37.0], [37.2, 37.0], [37.3, 37.0], [37.4, 37.0], [37.5, 37.0], [37.6, 37.0], [37.7, 37.0], [37.8, 37.0], [37.9, 37.0], [38.0, 37.0], [38.1, 37.0], [38.2, 38.0], [38.3, 38.0], [38.4, 38.0], [38.5, 38.0], [38.6, 38.0], [38.7, 38.0], [38.8, 38.0], [38.9, 38.0], [39.0, 38.0], [39.1, 38.0], [39.2, 38.0], [39.3, 38.0], [39.4, 38.0], [39.5, 38.0], [39.6, 38.0], [39.7, 38.0], [39.8, 38.0], [39.9, 38.0], [40.0, 38.0], [40.1, 38.0], [40.2, 38.0], [40.3, 38.0], [40.4, 39.0], [40.5, 39.0], [40.6, 39.0], [40.7, 39.0], [40.8, 39.0], [40.9, 39.0], [41.0, 39.0], [41.1, 39.0], [41.2, 39.0], [41.3, 39.0], [41.4, 39.0], [41.5, 39.0], [41.6, 39.0], [41.7, 39.0], [41.8, 39.0], [41.9, 39.0], [42.0, 39.0], [42.1, 39.0], [42.2, 39.0], [42.3, 39.0], [42.4, 39.0], [42.5, 39.0], [42.6, 39.0], [42.7, 40.0], [42.8, 40.0], [42.9, 40.0], [43.0, 40.0], [43.1, 40.0], [43.2, 40.0], [43.3, 40.0], [43.4, 40.0], [43.5, 40.0], [43.6, 40.0], [43.7, 40.0], [43.8, 40.0], [43.9, 40.0], [44.0, 40.0], [44.1, 40.0], [44.2, 40.0], [44.3, 40.0], [44.4, 40.0], [44.5, 40.0], [44.6, 40.0], [44.7, 40.0], [44.8, 40.0], [44.9, 40.0], [45.0, 40.0], [45.1, 41.0], [45.2, 41.0], [45.3, 41.0], [45.4, 41.0], [45.5, 41.0], [45.6, 41.0], [45.7, 41.0], [45.8, 41.0], [45.9, 41.0], [46.0, 41.0], [46.1, 41.0], [46.2, 41.0], [46.3, 41.0], [46.4, 41.0], [46.5, 41.0], [46.6, 41.0], [46.7, 41.0], [46.8, 41.0], [46.9, 41.0], [47.0, 41.0], [47.1, 41.0], [47.2, 41.0], [47.3, 41.0], [47.4, 41.0], [47.5, 42.0], [47.6, 42.0], [47.7, 42.0], [47.8, 42.0], [47.9, 42.0], [48.0, 42.0], [48.1, 42.0], [48.2, 42.0], [48.3, 42.0], [48.4, 42.0], [48.5, 42.0], [48.6, 42.0], [48.7, 42.0], [48.8, 42.0], [48.9, 42.0], [49.0, 42.0], [49.1, 42.0], [49.2, 42.0], [49.3, 42.0], [49.4, 42.0], [49.5, 42.0], [49.6, 42.0], [49.7, 42.0], [49.8, 43.0], [49.9, 43.0], [50.0, 43.0], [50.1, 43.0], [50.2, 43.0], [50.3, 43.0], [50.4, 43.0], [50.5, 43.0], [50.6, 43.0], [50.7, 43.0], [50.8, 43.0], [50.9, 43.0], [51.0, 43.0], [51.1, 43.0], [51.2, 43.0], [51.3, 43.0], [51.4, 43.0], [51.5, 43.0], [51.6, 43.0], [51.7, 43.0], [51.8, 43.0], [51.9, 43.0], [52.0, 43.0], [52.1, 44.0], [52.2, 44.0], [52.3, 44.0], [52.4, 44.0], [52.5, 44.0], [52.6, 44.0], [52.7, 44.0], [52.8, 44.0], [52.9, 44.0], [53.0, 44.0], [53.1, 44.0], [53.2, 44.0], [53.3, 44.0], [53.4, 44.0], [53.5, 44.0], [53.6, 44.0], [53.7, 44.0], [53.8, 44.0], [53.9, 44.0], [54.0, 44.0], [54.1, 44.0], [54.2, 44.0], [54.3, 44.0], [54.4, 44.0], [54.5, 45.0], [54.6, 45.0], [54.7, 45.0], [54.8, 45.0], [54.9, 45.0], [55.0, 45.0], [55.1, 45.0], [55.2, 45.0], [55.3, 45.0], [55.4, 45.0], [55.5, 45.0], [55.6, 45.0], [55.7, 45.0], [55.8, 45.0], [55.9, 45.0], [56.0, 45.0], [56.1, 45.0], [56.2, 45.0], [56.3, 45.0], [56.4, 45.0], [56.5, 45.0], [56.6, 45.0], [56.7, 45.0], [56.8, 45.0], [56.9, 46.0], [57.0, 46.0], [57.1, 46.0], [57.2, 46.0], [57.3, 46.0], [57.4, 46.0], [57.5, 46.0], [57.6, 46.0], [57.7, 46.0], [57.8, 46.0], [57.9, 46.0], [58.0, 46.0], [58.1, 46.0], [58.2, 46.0], [58.3, 46.0], [58.4, 46.0], [58.5, 46.0], [58.6, 46.0], [58.7, 46.0], [58.8, 46.0], [58.9, 46.0], [59.0, 46.0], [59.1, 46.0], [59.2, 46.0], [59.3, 47.0], [59.4, 47.0], [59.5, 47.0], [59.6, 47.0], [59.7, 47.0], [59.8, 47.0], [59.9, 47.0], [60.0, 47.0], [60.1, 47.0], [60.2, 47.0], [60.3, 47.0], [60.4, 47.0], [60.5, 47.0], [60.6, 47.0], [60.7, 47.0], [60.8, 47.0], [60.9, 47.0], [61.0, 47.0], [61.1, 47.0], [61.2, 47.0], [61.3, 47.0], [61.4, 48.0], [61.5, 48.0], [61.6, 48.0], [61.7, 48.0], [61.8, 48.0], [61.9, 48.0], [62.0, 48.0], [62.1, 48.0], [62.2, 48.0], [62.3, 48.0], [62.4, 48.0], [62.5, 48.0], [62.6, 48.0], [62.7, 48.0], [62.8, 48.0], [62.9, 48.0], [63.0, 48.0], [63.1, 48.0], [63.2, 48.0], [63.3, 48.0], [63.4, 48.0], [63.5, 48.0], [63.6, 49.0], [63.7, 49.0], [63.8, 49.0], [63.9, 49.0], [64.0, 49.0], [64.1, 49.0], [64.2, 49.0], [64.3, 49.0], [64.4, 49.0], [64.5, 49.0], [64.6, 49.0], [64.7, 49.0], [64.8, 49.0], [64.9, 49.0], [65.0, 49.0], [65.1, 49.0], [65.2, 49.0], [65.3, 49.0], [65.4, 49.0], [65.5, 49.0], [65.6, 49.0], [65.7, 49.0], [65.8, 50.0], [65.9, 50.0], [66.0, 50.0], [66.1, 50.0], [66.2, 50.0], [66.3, 50.0], [66.4, 50.0], [66.5, 50.0], [66.6, 50.0], [66.7, 50.0], [66.8, 50.0], [66.9, 50.0], [67.0, 50.0], [67.1, 50.0], [67.2, 50.0], [67.3, 50.0], [67.4, 50.0], [67.5, 50.0], [67.6, 50.0], [67.7, 50.0], [67.8, 50.0], [67.9, 50.0], [68.0, 51.0], [68.1, 51.0], [68.2, 51.0], [68.3, 51.0], [68.4, 51.0], [68.5, 51.0], [68.6, 51.0], [68.7, 51.0], [68.8, 51.0], [68.9, 51.0], [69.0, 51.0], [69.1, 51.0], [69.2, 51.0], [69.3, 51.0], [69.4, 51.0], [69.5, 51.0], [69.6, 51.0], [69.7, 51.0], [69.8, 51.0], [69.9, 51.0], [70.0, 51.0], [70.1, 51.0], [70.2, 51.0], [70.3, 52.0], [70.4, 52.0], [70.5, 52.0], [70.6, 52.0], [70.7, 52.0], [70.8, 52.0], [70.9, 52.0], [71.0, 52.0], [71.1, 52.0], [71.2, 52.0], [71.3, 52.0], [71.4, 52.0], [71.5, 52.0], [71.6, 52.0], [71.7, 52.0], [71.8, 52.0], [71.9, 52.0], [72.0, 52.0], [72.1, 52.0], [72.2, 52.0], [72.3, 52.0], [72.4, 53.0], [72.5, 53.0], [72.6, 53.0], [72.7, 53.0], [72.8, 53.0], [72.9, 53.0], [73.0, 53.0], [73.1, 53.0], [73.2, 53.0], [73.3, 53.0], [73.4, 53.0], [73.5, 53.0], [73.6, 53.0], [73.7, 53.0], [73.8, 53.0], [73.9, 53.0], [74.0, 53.0], [74.1, 53.0], [74.2, 53.0], [74.3, 54.0], [74.4, 54.0], [74.5, 54.0], [74.6, 54.0], [74.7, 54.0], [74.8, 54.0], [74.9, 54.0], [75.0, 54.0], [75.1, 54.0], [75.2, 54.0], [75.3, 54.0], [75.4, 54.0], [75.5, 54.0], [75.6, 54.0], [75.7, 54.0], [75.8, 54.0], [75.9, 54.0], [76.0, 54.0], [76.1, 54.0], [76.2, 54.0], [76.3, 55.0], [76.4, 55.0], [76.5, 55.0], [76.6, 55.0], [76.7, 55.0], [76.8, 55.0], [76.9, 55.0], [77.0, 55.0], [77.1, 55.0], [77.2, 55.0], [77.3, 55.0], [77.4, 55.0], [77.5, 55.0], [77.6, 55.0], [77.7, 55.0], [77.8, 55.0], [77.9, 56.0], [78.0, 56.0], [78.1, 56.0], [78.2, 56.0], [78.3, 56.0], [78.4, 56.0], [78.5, 56.0], [78.6, 56.0], [78.7, 56.0], [78.8, 56.0], [78.9, 56.0], [79.0, 56.0], [79.1, 56.0], [79.2, 56.0], [79.3, 57.0], [79.4, 57.0], [79.5, 57.0], [79.6, 57.0], [79.7, 57.0], [79.8, 57.0], [79.9, 57.0], [80.0, 57.0], [80.1, 57.0], [80.2, 57.0], [80.3, 57.0], [80.4, 57.0], [80.5, 57.0], [80.6, 57.0], [80.7, 58.0], [80.8, 58.0], [80.9, 58.0], [81.0, 58.0], [81.1, 58.0], [81.2, 58.0], [81.3, 58.0], [81.4, 58.0], [81.5, 58.0], [81.6, 58.0], [81.7, 58.0], [81.8, 58.0], [81.9, 58.0], [82.0, 59.0], [82.1, 59.0], [82.2, 59.0], [82.3, 59.0], [82.4, 59.0], [82.5, 59.0], [82.6, 59.0], [82.7, 59.0], [82.8, 59.0], [82.9, 59.0], [83.0, 59.0], [83.1, 59.0], [83.2, 59.0], [83.3, 60.0], [83.4, 60.0], [83.5, 60.0], [83.6, 60.0], [83.7, 60.0], [83.8, 60.0], [83.9, 60.0], [84.0, 60.0], [84.1, 60.0], [84.2, 61.0], [84.3, 61.0], [84.4, 61.0], [84.5, 61.0], [84.6, 61.0], [84.7, 61.0], [84.8, 61.0], [84.9, 61.0], [85.0, 61.0], [85.1, 61.0], [85.2, 62.0], [85.3, 62.0], [85.4, 62.0], [85.5, 62.0], [85.6, 62.0], [85.7, 62.0], [85.8, 62.0], [85.9, 62.0], [86.0, 63.0], [86.1, 63.0], [86.2, 63.0], [86.3, 63.0], [86.4, 63.0], [86.5, 63.0], [86.6, 63.0], [86.7, 63.0], [86.8, 64.0], [86.9, 64.0], [87.0, 64.0], [87.1, 64.0], [87.2, 64.0], [87.3, 64.0], [87.4, 64.0], [87.5, 65.0], [87.6, 65.0], [87.7, 65.0], [87.8, 65.0], [87.9, 65.0], [88.0, 65.0], [88.1, 65.0], [88.2, 66.0], [88.3, 66.0], [88.4, 66.0], [88.5, 66.0], [88.6, 66.0], [88.7, 67.0], [88.8, 67.0], [88.9, 67.0], [89.0, 67.0], [89.1, 67.0], [89.2, 68.0], [89.3, 68.0], [89.4, 68.0], [89.5, 68.0], [89.6, 69.0], [89.7, 69.0], [89.8, 69.0], [89.9, 69.0], [90.0, 70.0], [90.1, 70.0], [90.2, 70.0], [90.3, 70.0], [90.4, 71.0], [90.5, 71.0], [90.6, 71.0], [90.7, 71.0], [90.8, 72.0], [90.9, 72.0], [91.0, 72.0], [91.1, 73.0], [91.2, 73.0], [91.3, 73.0], [91.4, 74.0], [91.5, 74.0], [91.6, 74.0], [91.7, 74.0], [91.8, 75.0], [91.9, 75.0], [92.0, 75.0], [92.1, 76.0], [92.2, 76.0], [92.3, 76.0], [92.4, 77.0], [92.5, 77.0], [92.6, 78.0], [92.7, 78.0], [92.8, 79.0], [92.9, 80.0], [93.0, 80.0], [93.1, 81.0], [93.2, 81.0], [93.3, 82.0], [93.4, 82.0], [93.5, 83.0], [93.6, 84.0], [93.7, 84.0], [93.8, 85.0], [93.9, 85.0], [94.0, 86.0], [94.1, 87.0], [94.2, 88.0], [94.3, 89.0], [94.4, 90.0], [94.5, 91.0], [94.6, 93.0], [94.7, 94.0], [94.8, 96.0], [94.9, 98.0], [95.0, 100.0], [95.1, 102.0], [95.2, 103.0], [95.3, 105.0], [95.4, 107.0], [95.5, 109.0], [95.6, 111.0], [95.7, 112.0], [95.8, 114.0], [95.9, 115.0], [96.0, 117.0], [96.1, 119.0], [96.2, 121.0], [96.3, 124.0], [96.4, 127.0], [96.5, 130.0], [96.6, 132.0], [96.7, 135.0], [96.8, 137.0], [96.9, 138.0], [97.0, 141.0], [97.1, 143.0], [97.2, 146.0], [97.3, 148.0], [97.4, 150.0], [97.5, 153.0], [97.6, 156.0], [97.7, 158.0], [97.8, 162.0], [97.9, 164.0], [98.0, 166.0], [98.1, 168.0], [98.2, 171.0], [98.3, 173.0], [98.4, 175.0], [98.5, 178.0], [98.6, 184.0], [98.7, 189.0], [98.8, 195.0], [98.9, 202.0], [99.0, 277.0], [99.1, 299.0], [99.2, 314.0], [99.3, 328.0], [99.4, 339.0], [99.5, 351.0], [99.6, 366.0], [99.7, 379.0], [99.8, 415.0], [99.9, 750.0], [100.0, 21606.0]], "isOverall": false, "label": "GetMatches", "isController": true}, {"data": [[0.0, 9.0], [0.1, 10.0], [0.2, 10.0], [0.3, 10.0], [0.4, 10.0], [0.5, 11.0], [0.6, 11.0], [0.7, 11.0], [0.8, 11.0], [0.9, 11.0], [1.0, 11.0], [1.1, 11.0], [1.2, 11.0], [1.3, 11.0], [1.4, 11.0], [1.5, 11.0], [1.6, 11.0], [1.7, 11.0], [1.8, 12.0], [1.9, 12.0], [2.0, 12.0], [2.1, 12.0], [2.2, 12.0], [2.3, 12.0], [2.4, 12.0], [2.5, 12.0], [2.6, 12.0], [2.7, 12.0], [2.8, 12.0], [2.9, 12.0], [3.0, 12.0], [3.1, 12.0], [3.2, 12.0], [3.3, 12.0], [3.4, 12.0], [3.5, 12.0], [3.6, 12.0], [3.7, 12.0], [3.8, 12.0], [3.9, 12.0], [4.0, 13.0], [4.1, 13.0], [4.2, 13.0], [4.3, 13.0], [4.4, 13.0], [4.5, 13.0], [4.6, 13.0], [4.7, 13.0], [4.8, 13.0], [4.9, 13.0], [5.0, 13.0], [5.1, 13.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 13.0], [5.6, 13.0], [5.7, 13.0], [5.8, 13.0], [5.9, 13.0], [6.0, 13.0], [6.1, 13.0], [6.2, 13.0], [6.3, 13.0], [6.4, 13.0], [6.5, 13.0], [6.6, 13.0], [6.7, 14.0], [6.8, 14.0], [6.9, 14.0], [7.0, 14.0], [7.1, 14.0], [7.2, 14.0], [7.3, 14.0], [7.4, 14.0], [7.5, 14.0], [7.6, 14.0], [7.7, 14.0], [7.8, 14.0], [7.9, 14.0], [8.0, 14.0], [8.1, 14.0], [8.2, 14.0], [8.3, 14.0], [8.4, 14.0], [8.5, 14.0], [8.6, 14.0], [8.7, 14.0], [8.8, 14.0], [8.9, 14.0], [9.0, 14.0], [9.1, 14.0], [9.2, 14.0], [9.3, 14.0], [9.4, 14.0], [9.5, 14.0], [9.6, 14.0], [9.7, 14.0], [9.8, 14.0], [9.9, 14.0], [10.0, 14.0], [10.1, 15.0], [10.2, 15.0], [10.3, 15.0], [10.4, 15.0], [10.5, 15.0], [10.6, 15.0], [10.7, 15.0], [10.8, 15.0], [10.9, 15.0], [11.0, 15.0], [11.1, 15.0], [11.2, 15.0], [11.3, 15.0], [11.4, 15.0], [11.5, 15.0], [11.6, 15.0], [11.7, 15.0], [11.8, 15.0], [11.9, 15.0], [12.0, 15.0], [12.1, 15.0], [12.2, 15.0], [12.3, 15.0], [12.4, 15.0], [12.5, 15.0], [12.6, 15.0], [12.7, 15.0], [12.8, 15.0], [12.9, 15.0], [13.0, 15.0], [13.1, 15.0], [13.2, 15.0], [13.3, 15.0], [13.4, 16.0], [13.5, 16.0], [13.6, 16.0], [13.7, 16.0], [13.8, 16.0], [13.9, 16.0], [14.0, 16.0], [14.1, 16.0], [14.2, 16.0], [14.3, 16.0], [14.4, 16.0], [14.5, 16.0], [14.6, 16.0], [14.7, 16.0], [14.8, 16.0], [14.9, 16.0], [15.0, 16.0], [15.1, 16.0], [15.2, 16.0], [15.3, 16.0], [15.4, 16.0], [15.5, 16.0], [15.6, 16.0], [15.7, 16.0], [15.8, 16.0], [15.9, 16.0], [16.0, 16.0], [16.1, 16.0], [16.2, 16.0], [16.3, 16.0], [16.4, 17.0], [16.5, 17.0], [16.6, 17.0], [16.7, 17.0], [16.8, 17.0], [16.9, 17.0], [17.0, 17.0], [17.1, 17.0], [17.2, 17.0], [17.3, 17.0], [17.4, 17.0], [17.5, 17.0], [17.6, 17.0], [17.7, 17.0], [17.8, 17.0], [17.9, 17.0], [18.0, 17.0], [18.1, 17.0], [18.2, 17.0], [18.3, 17.0], [18.4, 17.0], [18.5, 17.0], [18.6, 17.0], [18.7, 17.0], [18.8, 17.0], [18.9, 17.0], [19.0, 17.0], [19.1, 17.0], [19.2, 17.0], [19.3, 17.0], [19.4, 17.0], [19.5, 17.0], [19.6, 17.0], [19.7, 17.0], [19.8, 17.0], [19.9, 17.0], [20.0, 18.0], [20.1, 18.0], [20.2, 18.0], [20.3, 18.0], [20.4, 18.0], [20.5, 18.0], [20.6, 18.0], [20.7, 18.0], [20.8, 18.0], [20.9, 18.0], [21.0, 18.0], [21.1, 18.0], [21.2, 18.0], [21.3, 18.0], [21.4, 18.0], [21.5, 18.0], [21.6, 18.0], [21.7, 18.0], [21.8, 18.0], [21.9, 18.0], [22.0, 18.0], [22.1, 18.0], [22.2, 18.0], [22.3, 18.0], [22.4, 18.0], [22.5, 18.0], [22.6, 19.0], [22.7, 19.0], [22.8, 19.0], [22.9, 19.0], [23.0, 19.0], [23.1, 19.0], [23.2, 19.0], [23.3, 19.0], [23.4, 19.0], [23.5, 19.0], [23.6, 19.0], [23.7, 19.0], [23.8, 19.0], [23.9, 19.0], [24.0, 19.0], [24.1, 19.0], [24.2, 19.0], [24.3, 19.0], [24.4, 19.0], [24.5, 19.0], [24.6, 19.0], [24.7, 19.0], [24.8, 19.0], [24.9, 19.0], [25.0, 19.0], [25.1, 19.0], [25.2, 19.0], [25.3, 19.0], [25.4, 19.0], [25.5, 20.0], [25.6, 20.0], [25.7, 20.0], [25.8, 20.0], [25.9, 20.0], [26.0, 20.0], [26.1, 20.0], [26.2, 20.0], [26.3, 20.0], [26.4, 20.0], [26.5, 20.0], [26.6, 20.0], [26.7, 20.0], [26.8, 20.0], [26.9, 20.0], [27.0, 20.0], [27.1, 20.0], [27.2, 20.0], [27.3, 20.0], [27.4, 20.0], [27.5, 20.0], [27.6, 20.0], [27.7, 20.0], [27.8, 20.0], [27.9, 20.0], [28.0, 20.0], [28.1, 21.0], [28.2, 21.0], [28.3, 21.0], [28.4, 21.0], [28.5, 21.0], [28.6, 21.0], [28.7, 21.0], [28.8, 21.0], [28.9, 21.0], [29.0, 21.0], [29.1, 21.0], [29.2, 21.0], [29.3, 21.0], [29.4, 21.0], [29.5, 21.0], [29.6, 21.0], [29.7, 21.0], [29.8, 21.0], [29.9, 21.0], [30.0, 21.0], [30.1, 21.0], [30.2, 21.0], [30.3, 21.0], [30.4, 21.0], [30.5, 21.0], [30.6, 21.0], [30.7, 22.0], [30.8, 22.0], [30.9, 22.0], [31.0, 22.0], [31.1, 22.0], [31.2, 22.0], [31.3, 22.0], [31.4, 22.0], [31.5, 22.0], [31.6, 22.0], [31.7, 22.0], [31.8, 22.0], [31.9, 22.0], [32.0, 22.0], [32.1, 22.0], [32.2, 22.0], [32.3, 22.0], [32.4, 22.0], [32.5, 22.0], [32.6, 22.0], [32.7, 22.0], [32.8, 22.0], [32.9, 22.0], [33.0, 22.0], [33.1, 23.0], [33.2, 23.0], [33.3, 23.0], [33.4, 23.0], [33.5, 23.0], [33.6, 23.0], [33.7, 23.0], [33.8, 23.0], [33.9, 23.0], [34.0, 23.0], [34.1, 23.0], [34.2, 23.0], [34.3, 23.0], [34.4, 23.0], [34.5, 23.0], [34.6, 23.0], [34.7, 23.0], [34.8, 23.0], [34.9, 23.0], [35.0, 23.0], [35.1, 23.0], [35.2, 24.0], [35.3, 24.0], [35.4, 24.0], [35.5, 24.0], [35.6, 24.0], [35.7, 24.0], [35.8, 24.0], [35.9, 24.0], [36.0, 24.0], [36.1, 24.0], [36.2, 24.0], [36.3, 24.0], [36.4, 24.0], [36.5, 24.0], [36.6, 24.0], [36.7, 24.0], [36.8, 24.0], [36.9, 24.0], [37.0, 24.0], [37.1, 24.0], [37.2, 24.0], [37.3, 24.0], [37.4, 24.0], [37.5, 24.0], [37.6, 25.0], [37.7, 25.0], [37.8, 25.0], [37.9, 25.0], [38.0, 25.0], [38.1, 25.0], [38.2, 25.0], [38.3, 25.0], [38.4, 25.0], [38.5, 25.0], [38.6, 25.0], [38.7, 25.0], [38.8, 25.0], [38.9, 25.0], [39.0, 25.0], [39.1, 25.0], [39.2, 25.0], [39.3, 25.0], [39.4, 25.0], [39.5, 25.0], [39.6, 25.0], [39.7, 25.0], [39.8, 26.0], [39.9, 26.0], [40.0, 26.0], [40.1, 26.0], [40.2, 26.0], [40.3, 26.0], [40.4, 26.0], [40.5, 26.0], [40.6, 26.0], [40.7, 26.0], [40.8, 26.0], [40.9, 26.0], [41.0, 26.0], [41.1, 26.0], [41.2, 26.0], [41.3, 26.0], [41.4, 26.0], [41.5, 26.0], [41.6, 26.0], [41.7, 26.0], [41.8, 26.0], [41.9, 26.0], [42.0, 27.0], [42.1, 27.0], [42.2, 27.0], [42.3, 27.0], [42.4, 27.0], [42.5, 27.0], [42.6, 27.0], [42.7, 27.0], [42.8, 27.0], [42.9, 27.0], [43.0, 27.0], [43.1, 27.0], [43.2, 27.0], [43.3, 27.0], [43.4, 27.0], [43.5, 27.0], [43.6, 27.0], [43.7, 27.0], [43.8, 28.0], [43.9, 28.0], [44.0, 28.0], [44.1, 28.0], [44.2, 28.0], [44.3, 28.0], [44.4, 28.0], [44.5, 28.0], [44.6, 28.0], [44.7, 28.0], [44.8, 28.0], [44.9, 28.0], [45.0, 28.0], [45.1, 28.0], [45.2, 28.0], [45.3, 28.0], [45.4, 28.0], [45.5, 29.0], [45.6, 29.0], [45.7, 29.0], [45.8, 29.0], [45.9, 29.0], [46.0, 29.0], [46.1, 29.0], [46.2, 29.0], [46.3, 29.0], [46.4, 29.0], [46.5, 29.0], [46.6, 29.0], [46.7, 29.0], [46.8, 29.0], [46.9, 29.0], [47.0, 29.0], [47.1, 29.0], [47.2, 30.0], [47.3, 30.0], [47.4, 30.0], [47.5, 30.0], [47.6, 30.0], [47.7, 30.0], [47.8, 30.0], [47.9, 30.0], [48.0, 30.0], [48.1, 30.0], [48.2, 30.0], [48.3, 30.0], [48.4, 30.0], [48.5, 30.0], [48.6, 30.0], [48.7, 30.0], [48.8, 30.0], [48.9, 30.0], [49.0, 31.0], [49.1, 31.0], [49.2, 31.0], [49.3, 31.0], [49.4, 31.0], [49.5, 31.0], [49.6, 31.0], [49.7, 31.0], [49.8, 31.0], [49.9, 31.0], [50.0, 31.0], [50.1, 31.0], [50.2, 31.0], [50.3, 31.0], [50.4, 31.0], [50.5, 31.0], [50.6, 31.0], [50.7, 31.0], [50.8, 31.0], [50.9, 31.0], [51.0, 31.0], [51.1, 31.0], [51.2, 31.0], [51.3, 31.0], [51.4, 32.0], [51.5, 32.0], [51.6, 32.0], [51.7, 32.0], [51.8, 32.0], [51.9, 32.0], [52.0, 32.0], [52.1, 32.0], [52.2, 32.0], [52.3, 32.0], [52.4, 32.0], [52.5, 32.0], [52.6, 32.0], [52.7, 32.0], [52.8, 32.0], [52.9, 32.0], [53.0, 32.0], [53.1, 32.0], [53.2, 32.0], [53.3, 33.0], [53.4, 33.0], [53.5, 33.0], [53.6, 33.0], [53.7, 33.0], [53.8, 33.0], [53.9, 33.0], [54.0, 33.0], [54.1, 33.0], [54.2, 33.0], [54.3, 33.0], [54.4, 33.0], [54.5, 33.0], [54.6, 33.0], [54.7, 33.0], [54.8, 33.0], [54.9, 33.0], [55.0, 33.0], [55.1, 34.0], [55.2, 34.0], [55.3, 34.0], [55.4, 34.0], [55.5, 34.0], [55.6, 34.0], [55.7, 34.0], [55.8, 34.0], [55.9, 34.0], [56.0, 34.0], [56.1, 34.0], [56.2, 34.0], [56.3, 34.0], [56.4, 34.0], [56.5, 34.0], [56.6, 34.0], [56.7, 34.0], [56.8, 34.0], [56.9, 34.0], [57.0, 35.0], [57.1, 35.0], [57.2, 35.0], [57.3, 35.0], [57.4, 35.0], [57.5, 35.0], [57.6, 35.0], [57.7, 35.0], [57.8, 35.0], [57.9, 35.0], [58.0, 35.0], [58.1, 35.0], [58.2, 35.0], [58.3, 35.0], [58.4, 35.0], [58.5, 35.0], [58.6, 35.0], [58.7, 35.0], [58.8, 35.0], [58.9, 35.0], [59.0, 36.0], [59.1, 36.0], [59.2, 36.0], [59.3, 36.0], [59.4, 36.0], [59.5, 36.0], [59.6, 36.0], [59.7, 36.0], [59.8, 36.0], [59.9, 36.0], [60.0, 36.0], [60.1, 36.0], [60.2, 36.0], [60.3, 36.0], [60.4, 36.0], [60.5, 36.0], [60.6, 36.0], [60.7, 36.0], [60.8, 36.0], [60.9, 37.0], [61.0, 37.0], [61.1, 37.0], [61.2, 37.0], [61.3, 37.0], [61.4, 37.0], [61.5, 37.0], [61.6, 37.0], [61.7, 37.0], [61.8, 37.0], [61.9, 37.0], [62.0, 37.0], [62.1, 37.0], [62.2, 37.0], [62.3, 37.0], [62.4, 37.0], [62.5, 37.0], [62.6, 37.0], [62.7, 37.0], [62.8, 38.0], [62.9, 38.0], [63.0, 38.0], [63.1, 38.0], [63.2, 38.0], [63.3, 38.0], [63.4, 38.0], [63.5, 38.0], [63.6, 38.0], [63.7, 38.0], [63.8, 38.0], [63.9, 38.0], [64.0, 38.0], [64.1, 38.0], [64.2, 38.0], [64.3, 38.0], [64.4, 38.0], [64.5, 38.0], [64.6, 38.0], [64.7, 38.0], [64.8, 39.0], [64.9, 39.0], [65.0, 39.0], [65.1, 39.0], [65.2, 39.0], [65.3, 39.0], [65.4, 39.0], [65.5, 39.0], [65.6, 39.0], [65.7, 39.0], [65.8, 39.0], [65.9, 39.0], [66.0, 39.0], [66.1, 39.0], [66.2, 39.0], [66.3, 39.0], [66.4, 40.0], [66.5, 40.0], [66.6, 40.0], [66.7, 40.0], [66.8, 40.0], [66.9, 40.0], [67.0, 40.0], [67.1, 40.0], [67.2, 40.0], [67.3, 40.0], [67.4, 40.0], [67.5, 40.0], [67.6, 40.0], [67.7, 40.0], [67.8, 40.0], [67.9, 40.0], [68.0, 40.0], [68.1, 41.0], [68.2, 41.0], [68.3, 41.0], [68.4, 41.0], [68.5, 41.0], [68.6, 41.0], [68.7, 41.0], [68.8, 41.0], [68.9, 41.0], [69.0, 41.0], [69.1, 41.0], [69.2, 41.0], [69.3, 41.0], [69.4, 41.0], [69.5, 41.0], [69.6, 41.0], [69.7, 41.0], [69.8, 42.0], [69.9, 42.0], [70.0, 42.0], [70.1, 42.0], [70.2, 42.0], [70.3, 42.0], [70.4, 42.0], [70.5, 42.0], [70.6, 42.0], [70.7, 42.0], [70.8, 42.0], [70.9, 42.0], [71.0, 42.0], [71.1, 42.0], [71.2, 42.0], [71.3, 43.0], [71.4, 43.0], [71.5, 43.0], [71.6, 43.0], [71.7, 43.0], [71.8, 43.0], [71.9, 43.0], [72.0, 43.0], [72.1, 43.0], [72.2, 43.0], [72.3, 43.0], [72.4, 43.0], [72.5, 43.0], [72.6, 43.0], [72.7, 43.0], [72.8, 44.0], [72.9, 44.0], [73.0, 44.0], [73.1, 44.0], [73.2, 44.0], [73.3, 44.0], [73.4, 44.0], [73.5, 44.0], [73.6, 44.0], [73.7, 44.0], [73.8, 44.0], [73.9, 44.0], [74.0, 44.0], [74.1, 44.0], [74.2, 44.0], [74.3, 44.0], [74.4, 44.0], [74.5, 44.0], [74.6, 44.0], [74.7, 45.0], [74.8, 45.0], [74.9, 45.0], [75.0, 45.0], [75.1, 45.0], [75.2, 45.0], [75.3, 45.0], [75.4, 45.0], [75.5, 45.0], [75.6, 45.0], [75.7, 45.0], [75.8, 45.0], [75.9, 45.0], [76.0, 45.0], [76.1, 45.0], [76.2, 45.0], [76.3, 46.0], [76.4, 46.0], [76.5, 46.0], [76.6, 46.0], [76.7, 46.0], [76.8, 46.0], [76.9, 46.0], [77.0, 46.0], [77.1, 46.0], [77.2, 46.0], [77.3, 46.0], [77.4, 46.0], [77.5, 46.0], [77.6, 46.0], [77.7, 47.0], [77.8, 47.0], [77.9, 47.0], [78.0, 47.0], [78.1, 47.0], [78.2, 47.0], [78.3, 47.0], [78.4, 47.0], [78.5, 47.0], [78.6, 47.0], [78.7, 47.0], [78.8, 47.0], [78.9, 47.0], [79.0, 48.0], [79.1, 48.0], [79.2, 48.0], [79.3, 48.0], [79.4, 48.0], [79.5, 48.0], [79.6, 48.0], [79.7, 48.0], [79.8, 48.0], [79.9, 48.0], [80.0, 48.0], [80.1, 49.0], [80.2, 49.0], [80.3, 49.0], [80.4, 49.0], [80.5, 49.0], [80.6, 49.0], [80.7, 49.0], [80.8, 49.0], [80.9, 49.0], [81.0, 49.0], [81.1, 50.0], [81.2, 50.0], [81.3, 50.0], [81.4, 50.0], [81.5, 50.0], [81.6, 50.0], [81.7, 50.0], [81.8, 50.0], [81.9, 50.0], [82.0, 50.0], [82.1, 50.0], [82.2, 50.0], [82.3, 51.0], [82.4, 51.0], [82.5, 51.0], [82.6, 51.0], [82.7, 51.0], [82.8, 51.0], [82.9, 51.0], [83.0, 51.0], [83.1, 51.0], [83.2, 51.0], [83.3, 52.0], [83.4, 52.0], [83.5, 52.0], [83.6, 52.0], [83.7, 52.0], [83.8, 52.0], [83.9, 52.0], [84.0, 52.0], [84.1, 52.0], [84.2, 52.0], [84.3, 52.0], [84.4, 53.0], [84.5, 53.0], [84.6, 53.0], [84.7, 53.0], [84.8, 53.0], [84.9, 53.0], [85.0, 53.0], [85.1, 53.0], [85.2, 53.0], [85.3, 53.0], [85.4, 53.0], [85.5, 54.0], [85.6, 54.0], [85.7, 54.0], [85.8, 54.0], [85.9, 54.0], [86.0, 54.0], [86.1, 54.0], [86.2, 54.0], [86.3, 54.0], [86.4, 54.0], [86.5, 54.0], [86.6, 55.0], [86.7, 55.0], [86.8, 55.0], [86.9, 55.0], [87.0, 55.0], [87.1, 55.0], [87.2, 55.0], [87.3, 55.0], [87.4, 55.0], [87.5, 55.0], [87.6, 55.0], [87.7, 56.0], [87.8, 56.0], [87.9, 56.0], [88.0, 56.0], [88.1, 56.0], [88.2, 56.0], [88.3, 56.0], [88.4, 56.0], [88.5, 56.0], [88.6, 57.0], [88.7, 57.0], [88.8, 57.0], [88.9, 57.0], [89.0, 57.0], [89.1, 57.0], [89.2, 57.0], [89.3, 58.0], [89.4, 58.0], [89.5, 58.0], [89.6, 58.0], [89.7, 58.0], [89.8, 58.0], [89.9, 59.0], [90.0, 59.0], [90.1, 59.0], [90.2, 59.0], [90.3, 59.0], [90.4, 60.0], [90.5, 60.0], [90.6, 60.0], [90.7, 60.0], [90.8, 60.0], [90.9, 60.0], [91.0, 60.0], [91.1, 61.0], [91.2, 61.0], [91.3, 61.0], [91.4, 61.0], [91.5, 62.0], [91.6, 62.0], [91.7, 62.0], [91.8, 62.0], [91.9, 62.0], [92.0, 63.0], [92.1, 63.0], [92.2, 63.0], [92.3, 64.0], [92.4, 64.0], [92.5, 65.0], [92.6, 65.0], [92.7, 66.0], [92.8, 66.0], [92.9, 67.0], [93.0, 67.0], [93.1, 68.0], [93.2, 68.0], [93.3, 69.0], [93.4, 69.0], [93.5, 70.0], [93.6, 71.0], [93.7, 72.0], [93.8, 72.0], [93.9, 73.0], [94.0, 74.0], [94.1, 74.0], [94.2, 75.0], [94.3, 76.0], [94.4, 77.0], [94.5, 77.0], [94.6, 78.0], [94.7, 79.0], [94.8, 81.0], [94.9, 83.0], [95.0, 84.0], [95.1, 85.0], [95.2, 87.0], [95.3, 89.0], [95.4, 90.0], [95.5, 93.0], [95.6, 94.0], [95.7, 97.0], [95.8, 98.0], [95.9, 101.0], [96.0, 102.0], [96.1, 106.0], [96.2, 111.0], [96.3, 113.0], [96.4, 114.0], [96.5, 116.0], [96.6, 117.0], [96.7, 120.0], [96.8, 123.0], [96.9, 125.0], [97.0, 128.0], [97.1, 131.0], [97.2, 132.0], [97.3, 134.0], [97.4, 135.0], [97.5, 136.0], [97.6, 138.0], [97.7, 140.0], [97.8, 142.0], [97.9, 143.0], [98.0, 145.0], [98.1, 146.0], [98.2, 149.0], [98.3, 151.0], [98.4, 155.0], [98.5, 162.0], [98.6, 270.0], [98.7, 279.0], [98.8, 285.0], [98.9, 295.0], [99.0, 304.0], [99.1, 310.0], [99.2, 321.0], [99.3, 330.0], [99.4, 335.0], [99.5, 345.0], [99.6, 363.0], [99.7, 397.0], [99.8, 719.0], [99.9, 768.0]], "isOverall": false, "label": "Post", "isController": true}, {"data": [[0.0, 10.0], [0.1, 11.0], [0.2, 11.0], [0.3, 11.0], [0.4, 12.0], [0.5, 12.0], [0.6, 12.0], [0.7, 12.0], [0.8, 12.0], [0.9, 12.0], [1.0, 12.0], [1.1, 13.0], [1.2, 13.0], [1.3, 13.0], [1.4, 13.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 14.0], [1.9, 14.0], [2.0, 14.0], [2.1, 14.0], [2.2, 14.0], [2.3, 14.0], [2.4, 14.0], [2.5, 14.0], [2.6, 15.0], [2.7, 15.0], [2.8, 15.0], [2.9, 15.0], [3.0, 15.0], [3.1, 15.0], [3.2, 15.0], [3.3, 15.0], [3.4, 15.0], [3.5, 16.0], [3.6, 16.0], [3.7, 16.0], [3.8, 16.0], [3.9, 16.0], [4.0, 16.0], [4.1, 16.0], [4.2, 16.0], [4.3, 16.0], [4.4, 17.0], [4.5, 17.0], [4.6, 17.0], [4.7, 17.0], [4.8, 17.0], [4.9, 17.0], [5.0, 17.0], [5.1, 17.0], [5.2, 17.0], [5.3, 17.0], [5.4, 17.0], [5.5, 18.0], [5.6, 18.0], [5.7, 18.0], [5.8, 18.0], [5.9, 18.0], [6.0, 18.0], [6.1, 18.0], [6.2, 18.0], [6.3, 18.0], [6.4, 18.0], [6.5, 19.0], [6.6, 19.0], [6.7, 19.0], [6.8, 19.0], [6.9, 19.0], [7.0, 19.0], [7.1, 19.0], [7.2, 19.0], [7.3, 19.0], [7.4, 19.0], [7.5, 19.0], [7.6, 20.0], [7.7, 20.0], [7.8, 20.0], [7.9, 20.0], [8.0, 20.0], [8.1, 20.0], [8.2, 20.0], [8.3, 20.0], [8.4, 20.0], [8.5, 20.0], [8.6, 20.0], [8.7, 20.0], [8.8, 21.0], [8.9, 21.0], [9.0, 21.0], [9.1, 21.0], [9.2, 21.0], [9.3, 21.0], [9.4, 21.0], [9.5, 21.0], [9.6, 21.0], [9.7, 21.0], [9.8, 21.0], [9.9, 21.0], [10.0, 22.0], [10.1, 22.0], [10.2, 22.0], [10.3, 22.0], [10.4, 22.0], [10.5, 22.0], [10.6, 22.0], [10.7, 22.0], [10.8, 22.0], [10.9, 22.0], [11.0, 22.0], [11.1, 23.0], [11.2, 23.0], [11.3, 23.0], [11.4, 23.0], [11.5, 23.0], [11.6, 23.0], [11.7, 23.0], [11.8, 23.0], [11.9, 23.0], [12.0, 23.0], [12.1, 23.0], [12.2, 24.0], [12.3, 24.0], [12.4, 24.0], [12.5, 24.0], [12.6, 24.0], [12.7, 24.0], [12.8, 24.0], [12.9, 24.0], [13.0, 24.0], [13.1, 24.0], [13.2, 24.0], [13.3, 25.0], [13.4, 25.0], [13.5, 25.0], [13.6, 25.0], [13.7, 25.0], [13.8, 25.0], [13.9, 25.0], [14.0, 25.0], [14.1, 25.0], [14.2, 25.0], [14.3, 25.0], [14.4, 25.0], [14.5, 25.0], [14.6, 25.0], [14.7, 26.0], [14.8, 26.0], [14.9, 26.0], [15.0, 26.0], [15.1, 26.0], [15.2, 26.0], [15.3, 26.0], [15.4, 26.0], [15.5, 26.0], [15.6, 26.0], [15.7, 26.0], [15.8, 26.0], [15.9, 27.0], [16.0, 27.0], [16.1, 27.0], [16.2, 27.0], [16.3, 27.0], [16.4, 27.0], [16.5, 27.0], [16.6, 27.0], [16.7, 27.0], [16.8, 27.0], [16.9, 27.0], [17.0, 28.0], [17.1, 28.0], [17.2, 28.0], [17.3, 28.0], [17.4, 28.0], [17.5, 28.0], [17.6, 28.0], [17.7, 28.0], [17.8, 28.0], [17.9, 28.0], [18.0, 28.0], [18.1, 28.0], [18.2, 28.0], [18.3, 29.0], [18.4, 29.0], [18.5, 29.0], [18.6, 29.0], [18.7, 29.0], [18.8, 29.0], [18.9, 29.0], [19.0, 29.0], [19.1, 29.0], [19.2, 29.0], [19.3, 29.0], [19.4, 29.0], [19.5, 29.0], [19.6, 29.0], [19.7, 29.0], [19.8, 29.0], [19.9, 30.0], [20.0, 30.0], [20.1, 30.0], [20.2, 30.0], [20.3, 30.0], [20.4, 30.0], [20.5, 30.0], [20.6, 30.0], [20.7, 30.0], [20.8, 30.0], [20.9, 30.0], [21.0, 30.0], [21.1, 30.0], [21.2, 30.0], [21.3, 31.0], [21.4, 31.0], [21.5, 31.0], [21.6, 31.0], [21.7, 31.0], [21.8, 31.0], [21.9, 31.0], [22.0, 31.0], [22.1, 31.0], [22.2, 31.0], [22.3, 31.0], [22.4, 31.0], [22.5, 31.0], [22.6, 32.0], [22.7, 32.0], [22.8, 32.0], [22.9, 32.0], [23.0, 32.0], [23.1, 32.0], [23.2, 32.0], [23.3, 32.0], [23.4, 32.0], [23.5, 32.0], [23.6, 32.0], [23.7, 32.0], [23.8, 32.0], [23.9, 32.0], [24.0, 33.0], [24.1, 33.0], [24.2, 33.0], [24.3, 33.0], [24.4, 33.0], [24.5, 33.0], [24.6, 33.0], [24.7, 33.0], [24.8, 33.0], [24.9, 33.0], [25.0, 33.0], [25.1, 33.0], [25.2, 33.0], [25.3, 34.0], [25.4, 34.0], [25.5, 34.0], [25.6, 34.0], [25.7, 34.0], [25.8, 34.0], [25.9, 34.0], [26.0, 34.0], [26.1, 34.0], [26.2, 34.0], [26.3, 34.0], [26.4, 34.0], [26.5, 34.0], [26.6, 34.0], [26.7, 34.0], [26.8, 35.0], [26.9, 35.0], [27.0, 35.0], [27.1, 35.0], [27.2, 35.0], [27.3, 35.0], [27.4, 35.0], [27.5, 35.0], [27.6, 35.0], [27.7, 35.0], [27.8, 35.0], [27.9, 35.0], [28.0, 35.0], [28.1, 35.0], [28.2, 35.0], [28.3, 35.0], [28.4, 36.0], [28.5, 36.0], [28.6, 36.0], [28.7, 36.0], [28.8, 36.0], [28.9, 36.0], [29.0, 36.0], [29.1, 36.0], [29.2, 36.0], [29.3, 36.0], [29.4, 36.0], [29.5, 36.0], [29.6, 36.0], [29.7, 36.0], [29.8, 36.0], [29.9, 36.0], [30.0, 36.0], [30.1, 37.0], [30.2, 37.0], [30.3, 37.0], [30.4, 37.0], [30.5, 37.0], [30.6, 37.0], [30.7, 37.0], [30.8, 37.0], [30.9, 37.0], [31.0, 37.0], [31.1, 37.0], [31.2, 37.0], [31.3, 37.0], [31.4, 37.0], [31.5, 37.0], [31.6, 37.0], [31.7, 38.0], [31.8, 38.0], [31.9, 38.0], [32.0, 38.0], [32.1, 38.0], [32.2, 38.0], [32.3, 38.0], [32.4, 38.0], [32.5, 38.0], [32.6, 38.0], [32.7, 38.0], [32.8, 38.0], [32.9, 38.0], [33.0, 38.0], [33.1, 38.0], [33.2, 38.0], [33.3, 39.0], [33.4, 39.0], [33.5, 39.0], [33.6, 39.0], [33.7, 39.0], [33.8, 39.0], [33.9, 39.0], [34.0, 39.0], [34.1, 39.0], [34.2, 39.0], [34.3, 39.0], [34.4, 39.0], [34.5, 39.0], [34.6, 39.0], [34.7, 39.0], [34.8, 39.0], [34.9, 39.0], [35.0, 40.0], [35.1, 40.0], [35.2, 40.0], [35.3, 40.0], [35.4, 40.0], [35.5, 40.0], [35.6, 40.0], [35.7, 40.0], [35.8, 40.0], [35.9, 40.0], [36.0, 40.0], [36.1, 40.0], [36.2, 40.0], [36.3, 40.0], [36.4, 40.0], [36.5, 40.0], [36.6, 40.0], [36.7, 40.0], [36.8, 41.0], [36.9, 41.0], [37.0, 41.0], [37.1, 41.0], [37.2, 41.0], [37.3, 41.0], [37.4, 41.0], [37.5, 41.0], [37.6, 41.0], [37.7, 41.0], [37.8, 41.0], [37.9, 41.0], [38.0, 41.0], [38.1, 41.0], [38.2, 41.0], [38.3, 41.0], [38.4, 42.0], [38.5, 42.0], [38.6, 42.0], [38.7, 42.0], [38.8, 42.0], [38.9, 42.0], [39.0, 42.0], [39.1, 42.0], [39.2, 42.0], [39.3, 42.0], [39.4, 42.0], [39.5, 42.0], [39.6, 42.0], [39.7, 42.0], [39.8, 42.0], [39.9, 42.0], [40.0, 42.0], [40.1, 42.0], [40.2, 43.0], [40.3, 43.0], [40.4, 43.0], [40.5, 43.0], [40.6, 43.0], [40.7, 43.0], [40.8, 43.0], [40.9, 43.0], [41.0, 43.0], [41.1, 43.0], [41.2, 43.0], [41.3, 43.0], [41.4, 43.0], [41.5, 43.0], [41.6, 43.0], [41.7, 43.0], [41.8, 43.0], [41.9, 44.0], [42.0, 44.0], [42.1, 44.0], [42.2, 44.0], [42.3, 44.0], [42.4, 44.0], [42.5, 44.0], [42.6, 44.0], [42.7, 44.0], [42.8, 44.0], [42.9, 44.0], [43.0, 44.0], [43.1, 44.0], [43.2, 44.0], [43.3, 44.0], [43.4, 44.0], [43.5, 44.0], [43.6, 44.0], [43.7, 45.0], [43.8, 45.0], [43.9, 45.0], [44.0, 45.0], [44.1, 45.0], [44.2, 45.0], [44.3, 45.0], [44.4, 45.0], [44.5, 45.0], [44.6, 45.0], [44.7, 45.0], [44.8, 45.0], [44.9, 45.0], [45.0, 45.0], [45.1, 45.0], [45.2, 45.0], [45.3, 45.0], [45.4, 45.0], [45.5, 46.0], [45.6, 46.0], [45.7, 46.0], [45.8, 46.0], [45.9, 46.0], [46.0, 46.0], [46.1, 46.0], [46.2, 46.0], [46.3, 46.0], [46.4, 46.0], [46.5, 46.0], [46.6, 46.0], [46.7, 46.0], [46.8, 46.0], [46.9, 46.0], [47.0, 46.0], [47.1, 46.0], [47.2, 46.0], [47.3, 47.0], [47.4, 47.0], [47.5, 47.0], [47.6, 47.0], [47.7, 47.0], [47.8, 47.0], [47.9, 47.0], [48.0, 47.0], [48.1, 47.0], [48.2, 47.0], [48.3, 47.0], [48.4, 47.0], [48.5, 47.0], [48.6, 47.0], [48.7, 47.0], [48.8, 47.0], [48.9, 47.0], [49.0, 47.0], [49.1, 48.0], [49.2, 48.0], [49.3, 48.0], [49.4, 48.0], [49.5, 48.0], [49.6, 48.0], [49.7, 48.0], [49.8, 48.0], [49.9, 48.0], [50.0, 48.0], [50.1, 48.0], [50.2, 48.0], [50.3, 48.0], [50.4, 48.0], [50.5, 48.0], [50.6, 48.0], [50.7, 48.0], [50.8, 49.0], [50.9, 49.0], [51.0, 49.0], [51.1, 49.0], [51.2, 49.0], [51.3, 49.0], [51.4, 49.0], [51.5, 49.0], [51.6, 49.0], [51.7, 49.0], [51.8, 49.0], [51.9, 49.0], [52.0, 49.0], [52.1, 49.0], [52.2, 49.0], [52.3, 49.0], [52.4, 49.0], [52.5, 50.0], [52.6, 50.0], [52.7, 50.0], [52.8, 50.0], [52.9, 50.0], [53.0, 50.0], [53.1, 50.0], [53.2, 50.0], [53.3, 50.0], [53.4, 50.0], [53.5, 50.0], [53.6, 50.0], [53.7, 50.0], [53.8, 50.0], [53.9, 50.0], [54.0, 50.0], [54.1, 50.0], [54.2, 50.0], [54.3, 51.0], [54.4, 51.0], [54.5, 51.0], [54.6, 51.0], [54.7, 51.0], [54.8, 51.0], [54.9, 51.0], [55.0, 51.0], [55.1, 51.0], [55.2, 51.0], [55.3, 51.0], [55.4, 51.0], [55.5, 51.0], [55.6, 51.0], [55.7, 51.0], [55.8, 51.0], [55.9, 51.0], [56.0, 51.0], [56.1, 52.0], [56.2, 52.0], [56.3, 52.0], [56.4, 52.0], [56.5, 52.0], [56.6, 52.0], [56.7, 52.0], [56.8, 52.0], [56.9, 52.0], [57.0, 52.0], [57.1, 52.0], [57.2, 52.0], [57.3, 52.0], [57.4, 52.0], [57.5, 52.0], [57.6, 52.0], [57.7, 52.0], [57.8, 53.0], [57.9, 53.0], [58.0, 53.0], [58.1, 53.0], [58.2, 53.0], [58.3, 53.0], [58.4, 53.0], [58.5, 53.0], [58.6, 53.0], [58.7, 53.0], [58.8, 53.0], [58.9, 53.0], [59.0, 53.0], [59.1, 53.0], [59.2, 53.0], [59.3, 53.0], [59.4, 53.0], [59.5, 53.0], [59.6, 53.0], [59.7, 54.0], [59.8, 54.0], [59.9, 54.0], [60.0, 54.0], [60.1, 54.0], [60.2, 54.0], [60.3, 54.0], [60.4, 54.0], [60.5, 54.0], [60.6, 54.0], [60.7, 54.0], [60.8, 54.0], [60.9, 54.0], [61.0, 54.0], [61.1, 54.0], [61.2, 54.0], [61.3, 54.0], [61.4, 54.0], [61.5, 55.0], [61.6, 55.0], [61.7, 55.0], [61.8, 55.0], [61.9, 55.0], [62.0, 55.0], [62.1, 55.0], [62.2, 55.0], [62.3, 55.0], [62.4, 55.0], [62.5, 55.0], [62.6, 55.0], [62.7, 55.0], [62.8, 55.0], [62.9, 55.0], [63.0, 55.0], [63.1, 55.0], [63.2, 55.0], [63.3, 56.0], [63.4, 56.0], [63.5, 56.0], [63.6, 56.0], [63.7, 56.0], [63.8, 56.0], [63.9, 56.0], [64.0, 56.0], [64.1, 56.0], [64.2, 56.0], [64.3, 56.0], [64.4, 56.0], [64.5, 56.0], [64.6, 56.0], [64.7, 56.0], [64.8, 56.0], [64.9, 56.0], [65.0, 56.0], [65.1, 57.0], [65.2, 57.0], [65.3, 57.0], [65.4, 57.0], [65.5, 57.0], [65.6, 57.0], [65.7, 57.0], [65.8, 57.0], [65.9, 57.0], [66.0, 57.0], [66.1, 57.0], [66.2, 57.0], [66.3, 57.0], [66.4, 57.0], [66.5, 57.0], [66.6, 57.0], [66.7, 57.0], [66.8, 58.0], [66.9, 58.0], [67.0, 58.0], [67.1, 58.0], [67.2, 58.0], [67.3, 58.0], [67.4, 58.0], [67.5, 58.0], [67.6, 58.0], [67.7, 58.0], [67.8, 58.0], [67.9, 58.0], [68.0, 58.0], [68.1, 58.0], [68.2, 58.0], [68.3, 58.0], [68.4, 58.0], [68.5, 59.0], [68.6, 59.0], [68.7, 59.0], [68.8, 59.0], [68.9, 59.0], [69.0, 59.0], [69.1, 59.0], [69.2, 59.0], [69.3, 59.0], [69.4, 59.0], [69.5, 59.0], [69.6, 59.0], [69.7, 59.0], [69.8, 59.0], [69.9, 59.0], [70.0, 59.0], [70.1, 59.0], [70.2, 59.0], [70.3, 60.0], [70.4, 60.0], [70.5, 60.0], [70.6, 60.0], [70.7, 60.0], [70.8, 60.0], [70.9, 60.0], [71.0, 60.0], [71.1, 60.0], [71.2, 60.0], [71.3, 60.0], [71.4, 60.0], [71.5, 60.0], [71.6, 60.0], [71.7, 60.0], [71.8, 61.0], [71.9, 61.0], [72.0, 61.0], [72.1, 61.0], [72.2, 61.0], [72.3, 61.0], [72.4, 61.0], [72.5, 61.0], [72.6, 61.0], [72.7, 61.0], [72.8, 61.0], [72.9, 61.0], [73.0, 61.0], [73.1, 61.0], [73.2, 61.0], [73.3, 62.0], [73.4, 62.0], [73.5, 62.0], [73.6, 62.0], [73.7, 62.0], [73.8, 62.0], [73.9, 62.0], [74.0, 62.0], [74.1, 62.0], [74.2, 62.0], [74.3, 62.0], [74.4, 62.0], [74.5, 62.0], [74.6, 62.0], [74.7, 63.0], [74.8, 63.0], [74.9, 63.0], [75.0, 63.0], [75.1, 63.0], [75.2, 63.0], [75.3, 63.0], [75.4, 63.0], [75.5, 63.0], [75.6, 63.0], [75.7, 63.0], [75.8, 63.0], [75.9, 63.0], [76.0, 64.0], [76.1, 64.0], [76.2, 64.0], [76.3, 64.0], [76.4, 64.0], [76.5, 64.0], [76.6, 64.0], [76.7, 64.0], [76.8, 64.0], [76.9, 64.0], [77.0, 64.0], [77.1, 65.0], [77.2, 65.0], [77.3, 65.0], [77.4, 65.0], [77.5, 65.0], [77.6, 65.0], [77.7, 65.0], [77.8, 65.0], [77.9, 65.0], [78.0, 65.0], [78.1, 65.0], [78.2, 65.0], [78.3, 66.0], [78.4, 66.0], [78.5, 66.0], [78.6, 66.0], [78.7, 66.0], [78.8, 66.0], [78.9, 66.0], [79.0, 66.0], [79.1, 66.0], [79.2, 66.0], [79.3, 66.0], [79.4, 66.0], [79.5, 67.0], [79.6, 67.0], [79.7, 67.0], [79.8, 67.0], [79.9, 67.0], [80.0, 67.0], [80.1, 67.0], [80.2, 67.0], [80.3, 67.0], [80.4, 67.0], [80.5, 67.0], [80.6, 68.0], [80.7, 68.0], [80.8, 68.0], [80.9, 68.0], [81.0, 68.0], [81.1, 68.0], [81.2, 68.0], [81.3, 68.0], [81.4, 68.0], [81.5, 68.0], [81.6, 68.0], [81.7, 69.0], [81.8, 69.0], [81.9, 69.0], [82.0, 69.0], [82.1, 69.0], [82.2, 69.0], [82.3, 69.0], [82.4, 69.0], [82.5, 69.0], [82.6, 69.0], [82.7, 70.0], [82.8, 70.0], [82.9, 70.0], [83.0, 70.0], [83.1, 70.0], [83.2, 70.0], [83.3, 70.0], [83.4, 70.0], [83.5, 71.0], [83.6, 71.0], [83.7, 71.0], [83.8, 71.0], [83.9, 71.0], [84.0, 71.0], [84.1, 71.0], [84.2, 71.0], [84.3, 71.0], [84.4, 72.0], [84.5, 72.0], [84.6, 72.0], [84.7, 72.0], [84.8, 72.0], [84.9, 72.0], [85.0, 72.0], [85.1, 72.0], [85.2, 73.0], [85.3, 73.0], [85.4, 73.0], [85.5, 73.0], [85.6, 73.0], [85.7, 73.0], [85.8, 74.0], [85.9, 74.0], [86.0, 74.0], [86.1, 74.0], [86.2, 74.0], [86.3, 74.0], [86.4, 74.0], [86.5, 75.0], [86.6, 75.0], [86.7, 75.0], [86.8, 75.0], [86.9, 75.0], [87.0, 75.0], [87.1, 75.0], [87.2, 76.0], [87.3, 76.0], [87.4, 76.0], [87.5, 76.0], [87.6, 76.0], [87.7, 76.0], [87.8, 77.0], [87.9, 77.0], [88.0, 77.0], [88.1, 77.0], [88.2, 77.0], [88.3, 78.0], [88.4, 78.0], [88.5, 78.0], [88.6, 78.0], [88.7, 78.0], [88.8, 79.0], [88.9, 79.0], [89.0, 79.0], [89.1, 79.0], [89.2, 79.0], [89.3, 80.0], [89.4, 80.0], [89.5, 80.0], [89.6, 80.0], [89.7, 81.0], [89.8, 81.0], [89.9, 81.0], [90.0, 81.0], [90.1, 82.0], [90.2, 82.0], [90.3, 82.0], [90.4, 82.0], [90.5, 83.0], [90.6, 83.0], [90.7, 83.0], [90.8, 83.0], [90.9, 84.0], [91.0, 84.0], [91.1, 84.0], [91.2, 85.0], [91.3, 85.0], [91.4, 85.0], [91.5, 86.0], [91.6, 86.0], [91.7, 87.0], [91.8, 87.0], [91.9, 87.0], [92.0, 87.0], [92.1, 88.0], [92.2, 88.0], [92.3, 89.0], [92.4, 89.0], [92.5, 89.0], [92.6, 90.0], [92.7, 90.0], [92.8, 91.0], [92.9, 91.0], [93.0, 92.0], [93.1, 92.0], [93.2, 92.0], [93.3, 93.0], [93.4, 93.0], [93.5, 93.0], [93.6, 94.0], [93.7, 95.0], [93.8, 95.0], [93.9, 96.0], [94.0, 96.0], [94.1, 97.0], [94.2, 98.0], [94.3, 98.0], [94.4, 99.0], [94.5, 99.0], [94.6, 100.0], [94.7, 101.0], [94.8, 101.0], [94.9, 102.0], [95.0, 104.0], [95.1, 106.0], [95.2, 110.0], [95.3, 112.0], [95.4, 114.0], [95.5, 116.0], [95.6, 117.0], [95.7, 119.0], [95.8, 121.0], [95.9, 123.0], [96.0, 125.0], [96.1, 127.0], [96.2, 130.0], [96.3, 132.0], [96.4, 133.0], [96.5, 135.0], [96.6, 138.0], [96.7, 141.0], [96.8, 143.0], [96.9, 147.0], [97.0, 150.0], [97.1, 153.0], [97.2, 156.0], [97.3, 158.0], [97.4, 161.0], [97.5, 164.0], [97.6, 167.0], [97.7, 169.0], [97.8, 171.0], [97.9, 173.0], [98.0, 175.0], [98.1, 177.0], [98.2, 181.0], [98.3, 186.0], [98.4, 191.0], [98.5, 197.0], [98.6, 202.0], [98.7, 209.0], [98.8, 219.0], [98.9, 227.0], [99.0, 282.0], [99.1, 301.0], [99.2, 314.0], [99.3, 332.0], [99.4, 346.0], [99.5, 355.0], [99.6, 370.0], [99.7, 388.0], [99.8, 422.0], [99.9, 750.0], [100.0, 19256.0]], "isOverall": false, "label": "GetStats", "isController": true}, {"data": [[0.0, 9.0], [0.1, 11.0], [0.2, 11.0], [0.3, 11.0], [0.4, 11.0], [0.5, 12.0], [0.6, 12.0], [0.7, 12.0], [0.8, 12.0], [0.9, 12.0], [1.0, 12.0], [1.1, 13.0], [1.2, 13.0], [1.3, 13.0], [1.4, 13.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 13.0], [1.9, 13.0], [2.0, 14.0], [2.1, 14.0], [2.2, 14.0], [2.3, 14.0], [2.4, 14.0], [2.5, 14.0], [2.6, 14.0], [2.7, 14.0], [2.8, 14.0], [2.9, 15.0], [3.0, 15.0], [3.1, 15.0], [3.2, 15.0], [3.3, 15.0], [3.4, 15.0], [3.5, 15.0], [3.6, 15.0], [3.7, 15.0], [3.8, 15.0], [3.9, 15.0], [4.0, 16.0], [4.1, 16.0], [4.2, 16.0], [4.3, 16.0], [4.4, 16.0], [4.5, 16.0], [4.6, 16.0], [4.7, 16.0], [4.8, 16.0], [4.9, 16.0], [5.0, 16.0], [5.1, 17.0], [5.2, 17.0], [5.3, 17.0], [5.4, 17.0], [5.5, 17.0], [5.6, 17.0], [5.7, 17.0], [5.8, 17.0], [5.9, 17.0], [6.0, 17.0], [6.1, 17.0], [6.2, 17.0], [6.3, 18.0], [6.4, 18.0], [6.5, 18.0], [6.6, 18.0], [6.7, 18.0], [6.8, 18.0], [6.9, 18.0], [7.0, 18.0], [7.1, 18.0], [7.2, 18.0], [7.3, 18.0], [7.4, 19.0], [7.5, 19.0], [7.6, 19.0], [7.7, 19.0], [7.8, 19.0], [7.9, 19.0], [8.0, 19.0], [8.1, 19.0], [8.2, 19.0], [8.3, 19.0], [8.4, 19.0], [8.5, 19.0], [8.6, 20.0], [8.7, 20.0], [8.8, 20.0], [8.9, 20.0], [9.0, 20.0], [9.1, 20.0], [9.2, 20.0], [9.3, 20.0], [9.4, 20.0], [9.5, 20.0], [9.6, 20.0], [9.7, 20.0], [9.8, 20.0], [9.9, 21.0], [10.0, 21.0], [10.1, 21.0], [10.2, 21.0], [10.3, 21.0], [10.4, 21.0], [10.5, 21.0], [10.6, 21.0], [10.7, 21.0], [10.8, 21.0], [10.9, 21.0], [11.0, 22.0], [11.1, 22.0], [11.2, 22.0], [11.3, 22.0], [11.4, 22.0], [11.5, 22.0], [11.6, 22.0], [11.7, 22.0], [11.8, 22.0], [11.9, 22.0], [12.0, 22.0], [12.1, 22.0], [12.2, 23.0], [12.3, 23.0], [12.4, 23.0], [12.5, 23.0], [12.6, 23.0], [12.7, 23.0], [12.8, 23.0], [12.9, 23.0], [13.0, 23.0], [13.1, 23.0], [13.2, 23.0], [13.3, 23.0], [13.4, 24.0], [13.5, 24.0], [13.6, 24.0], [13.7, 24.0], [13.8, 24.0], [13.9, 24.0], [14.0, 24.0], [14.1, 24.0], [14.2, 24.0], [14.3, 24.0], [14.4, 24.0], [14.5, 24.0], [14.6, 24.0], [14.7, 24.0], [14.8, 25.0], [14.9, 25.0], [15.0, 25.0], [15.1, 25.0], [15.2, 25.0], [15.3, 25.0], [15.4, 25.0], [15.5, 25.0], [15.6, 25.0], [15.7, 25.0], [15.8, 25.0], [15.9, 25.0], [16.0, 25.0], [16.1, 25.0], [16.2, 25.0], [16.3, 26.0], [16.4, 26.0], [16.5, 26.0], [16.6, 26.0], [16.7, 26.0], [16.8, 26.0], [16.9, 26.0], [17.0, 26.0], [17.1, 26.0], [17.2, 26.0], [17.3, 26.0], [17.4, 26.0], [17.5, 26.0], [17.6, 26.0], [17.7, 26.0], [17.8, 27.0], [17.9, 27.0], [18.0, 27.0], [18.1, 27.0], [18.2, 27.0], [18.3, 27.0], [18.4, 27.0], [18.5, 27.0], [18.6, 27.0], [18.7, 27.0], [18.8, 27.0], [18.9, 27.0], [19.0, 27.0], [19.1, 27.0], [19.2, 27.0], [19.3, 27.0], [19.4, 28.0], [19.5, 28.0], [19.6, 28.0], [19.7, 28.0], [19.8, 28.0], [19.9, 28.0], [20.0, 28.0], [20.1, 28.0], [20.2, 28.0], [20.3, 28.0], [20.4, 28.0], [20.5, 28.0], [20.6, 28.0], [20.7, 28.0], [20.8, 28.0], [20.9, 28.0], [21.0, 29.0], [21.1, 29.0], [21.2, 29.0], [21.3, 29.0], [21.4, 29.0], [21.5, 29.0], [21.6, 29.0], [21.7, 29.0], [21.8, 29.0], [21.9, 29.0], [22.0, 29.0], [22.1, 29.0], [22.2, 29.0], [22.3, 29.0], [22.4, 29.0], [22.5, 29.0], [22.6, 29.0], [22.7, 29.0], [22.8, 30.0], [22.9, 30.0], [23.0, 30.0], [23.1, 30.0], [23.2, 30.0], [23.3, 30.0], [23.4, 30.0], [23.5, 30.0], [23.6, 30.0], [23.7, 30.0], [23.8, 30.0], [23.9, 30.0], [24.0, 30.0], [24.1, 30.0], [24.2, 30.0], [24.3, 30.0], [24.4, 30.0], [24.5, 30.0], [24.6, 31.0], [24.7, 31.0], [24.8, 31.0], [24.9, 31.0], [25.0, 31.0], [25.1, 31.0], [25.2, 31.0], [25.3, 31.0], [25.4, 31.0], [25.5, 31.0], [25.6, 31.0], [25.7, 31.0], [25.8, 31.0], [25.9, 31.0], [26.0, 31.0], [26.1, 31.0], [26.2, 31.0], [26.3, 31.0], [26.4, 32.0], [26.5, 32.0], [26.6, 32.0], [26.7, 32.0], [26.8, 32.0], [26.9, 32.0], [27.0, 32.0], [27.1, 32.0], [27.2, 32.0], [27.3, 32.0], [27.4, 32.0], [27.5, 32.0], [27.6, 32.0], [27.7, 32.0], [27.8, 32.0], [27.9, 32.0], [28.0, 32.0], [28.1, 32.0], [28.2, 33.0], [28.3, 33.0], [28.4, 33.0], [28.5, 33.0], [28.6, 33.0], [28.7, 33.0], [28.8, 33.0], [28.9, 33.0], [29.0, 33.0], [29.1, 33.0], [29.2, 33.0], [29.3, 33.0], [29.4, 33.0], [29.5, 33.0], [29.6, 33.0], [29.7, 33.0], [29.8, 33.0], [29.9, 33.0], [30.0, 34.0], [30.1, 34.0], [30.2, 34.0], [30.3, 34.0], [30.4, 34.0], [30.5, 34.0], [30.6, 34.0], [30.7, 34.0], [30.8, 34.0], [30.9, 34.0], [31.0, 34.0], [31.1, 34.0], [31.2, 34.0], [31.3, 34.0], [31.4, 34.0], [31.5, 34.0], [31.6, 34.0], [31.7, 34.0], [31.8, 34.0], [31.9, 35.0], [32.0, 35.0], [32.1, 35.0], [32.2, 35.0], [32.3, 35.0], [32.4, 35.0], [32.5, 35.0], [32.6, 35.0], [32.7, 35.0], [32.8, 35.0], [32.9, 35.0], [33.0, 35.0], [33.1, 35.0], [33.2, 35.0], [33.3, 35.0], [33.4, 35.0], [33.5, 35.0], [33.6, 35.0], [33.7, 35.0], [33.8, 35.0], [33.9, 36.0], [34.0, 36.0], [34.1, 36.0], [34.2, 36.0], [34.3, 36.0], [34.4, 36.0], [34.5, 36.0], [34.6, 36.0], [34.7, 36.0], [34.8, 36.0], [34.9, 36.0], [35.0, 36.0], [35.1, 36.0], [35.2, 36.0], [35.3, 36.0], [35.4, 36.0], [35.5, 36.0], [35.6, 36.0], [35.7, 36.0], [35.8, 36.0], [35.9, 36.0], [36.0, 37.0], [36.1, 37.0], [36.2, 37.0], [36.3, 37.0], [36.4, 37.0], [36.5, 37.0], [36.6, 37.0], [36.7, 37.0], [36.8, 37.0], [36.9, 37.0], [37.0, 37.0], [37.1, 37.0], [37.2, 37.0], [37.3, 37.0], [37.4, 37.0], [37.5, 37.0], [37.6, 37.0], [37.7, 37.0], [37.8, 37.0], [37.9, 37.0], [38.0, 38.0], [38.1, 38.0], [38.2, 38.0], [38.3, 38.0], [38.4, 38.0], [38.5, 38.0], [38.6, 38.0], [38.7, 38.0], [38.8, 38.0], [38.9, 38.0], [39.0, 38.0], [39.1, 38.0], [39.2, 38.0], [39.3, 38.0], [39.4, 38.0], [39.5, 38.0], [39.6, 38.0], [39.7, 38.0], [39.8, 38.0], [39.9, 39.0], [40.0, 39.0], [40.1, 39.0], [40.2, 39.0], [40.3, 39.0], [40.4, 39.0], [40.5, 39.0], [40.6, 39.0], [40.7, 39.0], [40.8, 39.0], [40.9, 39.0], [41.0, 39.0], [41.1, 39.0], [41.2, 39.0], [41.3, 39.0], [41.4, 39.0], [41.5, 39.0], [41.6, 39.0], [41.7, 39.0], [41.8, 39.0], [41.9, 40.0], [42.0, 40.0], [42.1, 40.0], [42.2, 40.0], [42.3, 40.0], [42.4, 40.0], [42.5, 40.0], [42.6, 40.0], [42.7, 40.0], [42.8, 40.0], [42.9, 40.0], [43.0, 40.0], [43.1, 40.0], [43.2, 40.0], [43.3, 40.0], [43.4, 40.0], [43.5, 40.0], [43.6, 40.0], [43.7, 40.0], [43.8, 40.0], [43.9, 40.0], [44.0, 41.0], [44.1, 41.0], [44.2, 41.0], [44.3, 41.0], [44.4, 41.0], [44.5, 41.0], [44.6, 41.0], [44.7, 41.0], [44.8, 41.0], [44.9, 41.0], [45.0, 41.0], [45.1, 41.0], [45.2, 41.0], [45.3, 41.0], [45.4, 41.0], [45.5, 41.0], [45.6, 41.0], [45.7, 41.0], [45.8, 41.0], [45.9, 42.0], [46.0, 42.0], [46.1, 42.0], [46.2, 42.0], [46.3, 42.0], [46.4, 42.0], [46.5, 42.0], [46.6, 42.0], [46.7, 42.0], [46.8, 42.0], [46.9, 42.0], [47.0, 42.0], [47.1, 42.0], [47.2, 42.0], [47.3, 42.0], [47.4, 42.0], [47.5, 42.0], [47.6, 42.0], [47.7, 42.0], [47.8, 42.0], [47.9, 43.0], [48.0, 43.0], [48.1, 43.0], [48.2, 43.0], [48.3, 43.0], [48.4, 43.0], [48.5, 43.0], [48.6, 43.0], [48.7, 43.0], [48.8, 43.0], [48.9, 43.0], [49.0, 43.0], [49.1, 43.0], [49.2, 43.0], [49.3, 43.0], [49.4, 43.0], [49.5, 43.0], [49.6, 43.0], [49.7, 43.0], [49.8, 43.0], [49.9, 44.0], [50.0, 44.0], [50.1, 44.0], [50.2, 44.0], [50.3, 44.0], [50.4, 44.0], [50.5, 44.0], [50.6, 44.0], [50.7, 44.0], [50.8, 44.0], [50.9, 44.0], [51.0, 44.0], [51.1, 44.0], [51.2, 44.0], [51.3, 44.0], [51.4, 44.0], [51.5, 44.0], [51.6, 44.0], [51.7, 44.0], [51.8, 44.0], [51.9, 45.0], [52.0, 45.0], [52.1, 45.0], [52.2, 45.0], [52.3, 45.0], [52.4, 45.0], [52.5, 45.0], [52.6, 45.0], [52.7, 45.0], [52.8, 45.0], [52.9, 45.0], [53.0, 45.0], [53.1, 45.0], [53.2, 45.0], [53.3, 45.0], [53.4, 45.0], [53.5, 45.0], [53.6, 45.0], [53.7, 45.0], [53.8, 45.0], [53.9, 45.0], [54.0, 46.0], [54.1, 46.0], [54.2, 46.0], [54.3, 46.0], [54.4, 46.0], [54.5, 46.0], [54.6, 46.0], [54.7, 46.0], [54.8, 46.0], [54.9, 46.0], [55.0, 46.0], [55.1, 46.0], [55.2, 46.0], [55.3, 46.0], [55.4, 46.0], [55.5, 46.0], [55.6, 46.0], [55.7, 46.0], [55.8, 46.0], [55.9, 46.0], [56.0, 47.0], [56.1, 47.0], [56.2, 47.0], [56.3, 47.0], [56.4, 47.0], [56.5, 47.0], [56.6, 47.0], [56.7, 47.0], [56.8, 47.0], [56.9, 47.0], [57.0, 47.0], [57.1, 47.0], [57.2, 47.0], [57.3, 47.0], [57.4, 47.0], [57.5, 47.0], [57.6, 47.0], [57.7, 47.0], [57.8, 47.0], [57.9, 48.0], [58.0, 48.0], [58.1, 48.0], [58.2, 48.0], [58.3, 48.0], [58.4, 48.0], [58.5, 48.0], [58.6, 48.0], [58.7, 48.0], [58.8, 48.0], [58.9, 48.0], [59.0, 48.0], [59.1, 48.0], [59.2, 48.0], [59.3, 48.0], [59.4, 48.0], [59.5, 48.0], [59.6, 48.0], [59.7, 48.0], [59.8, 49.0], [59.9, 49.0], [60.0, 49.0], [60.1, 49.0], [60.2, 49.0], [60.3, 49.0], [60.4, 49.0], [60.5, 49.0], [60.6, 49.0], [60.7, 49.0], [60.8, 49.0], [60.9, 49.0], [61.0, 49.0], [61.1, 49.0], [61.2, 49.0], [61.3, 49.0], [61.4, 49.0], [61.5, 49.0], [61.6, 50.0], [61.7, 50.0], [61.8, 50.0], [61.9, 50.0], [62.0, 50.0], [62.1, 50.0], [62.2, 50.0], [62.3, 50.0], [62.4, 50.0], [62.5, 50.0], [62.6, 50.0], [62.7, 50.0], [62.8, 50.0], [62.9, 50.0], [63.0, 50.0], [63.1, 50.0], [63.2, 50.0], [63.3, 50.0], [63.4, 50.0], [63.5, 51.0], [63.6, 51.0], [63.7, 51.0], [63.8, 51.0], [63.9, 51.0], [64.0, 51.0], [64.1, 51.0], [64.2, 51.0], [64.3, 51.0], [64.4, 51.0], [64.5, 51.0], [64.6, 51.0], [64.7, 51.0], [64.8, 51.0], [64.9, 51.0], [65.0, 51.0], [65.1, 51.0], [65.2, 51.0], [65.3, 51.0], [65.4, 52.0], [65.5, 52.0], [65.6, 52.0], [65.7, 52.0], [65.8, 52.0], [65.9, 52.0], [66.0, 52.0], [66.1, 52.0], [66.2, 52.0], [66.3, 52.0], [66.4, 52.0], [66.5, 52.0], [66.6, 52.0], [66.7, 52.0], [66.8, 52.0], [66.9, 52.0], [67.0, 52.0], [67.1, 52.0], [67.2, 53.0], [67.3, 53.0], [67.4, 53.0], [67.5, 53.0], [67.6, 53.0], [67.7, 53.0], [67.8, 53.0], [67.9, 53.0], [68.0, 53.0], [68.1, 53.0], [68.2, 53.0], [68.3, 53.0], [68.4, 53.0], [68.5, 53.0], [68.6, 53.0], [68.7, 53.0], [68.8, 53.0], [68.9, 53.0], [69.0, 53.0], [69.1, 54.0], [69.2, 54.0], [69.3, 54.0], [69.4, 54.0], [69.5, 54.0], [69.6, 54.0], [69.7, 54.0], [69.8, 54.0], [69.9, 54.0], [70.0, 54.0], [70.1, 54.0], [70.2, 54.0], [70.3, 54.0], [70.4, 54.0], [70.5, 54.0], [70.6, 54.0], [70.7, 54.0], [70.8, 54.0], [70.9, 55.0], [71.0, 55.0], [71.1, 55.0], [71.2, 55.0], [71.3, 55.0], [71.4, 55.0], [71.5, 55.0], [71.6, 55.0], [71.7, 55.0], [71.8, 55.0], [71.9, 55.0], [72.0, 55.0], [72.1, 55.0], [72.2, 55.0], [72.3, 55.0], [72.4, 55.0], [72.5, 56.0], [72.6, 56.0], [72.7, 56.0], [72.8, 56.0], [72.9, 56.0], [73.0, 56.0], [73.1, 56.0], [73.2, 56.0], [73.3, 56.0], [73.4, 56.0], [73.5, 56.0], [73.6, 56.0], [73.7, 56.0], [73.8, 56.0], [73.9, 56.0], [74.0, 57.0], [74.1, 57.0], [74.2, 57.0], [74.3, 57.0], [74.4, 57.0], [74.5, 57.0], [74.6, 57.0], [74.7, 57.0], [74.8, 57.0], [74.9, 57.0], [75.0, 57.0], [75.1, 57.0], [75.2, 57.0], [75.3, 57.0], [75.4, 57.0], [75.5, 58.0], [75.6, 58.0], [75.7, 58.0], [75.8, 58.0], [75.9, 58.0], [76.0, 58.0], [76.1, 58.0], [76.2, 58.0], [76.3, 58.0], [76.4, 58.0], [76.5, 58.0], [76.6, 58.0], [76.7, 58.0], [76.8, 58.0], [76.9, 59.0], [77.0, 59.0], [77.1, 59.0], [77.2, 59.0], [77.3, 59.0], [77.4, 59.0], [77.5, 59.0], [77.6, 59.0], [77.7, 59.0], [77.8, 59.0], [77.9, 59.0], [78.0, 59.0], [78.1, 59.0], [78.2, 59.0], [78.3, 60.0], [78.4, 60.0], [78.5, 60.0], [78.6, 60.0], [78.7, 60.0], [78.8, 60.0], [78.9, 60.0], [79.0, 60.0], [79.1, 60.0], [79.2, 60.0], [79.3, 60.0], [79.4, 60.0], [79.5, 61.0], [79.6, 61.0], [79.7, 61.0], [79.8, 61.0], [79.9, 61.0], [80.0, 61.0], [80.1, 61.0], [80.2, 61.0], [80.3, 61.0], [80.4, 61.0], [80.5, 61.0], [80.6, 62.0], [80.7, 62.0], [80.8, 62.0], [80.9, 62.0], [81.0, 62.0], [81.1, 62.0], [81.2, 62.0], [81.3, 62.0], [81.4, 62.0], [81.5, 62.0], [81.6, 63.0], [81.7, 63.0], [81.8, 63.0], [81.9, 63.0], [82.0, 63.0], [82.1, 63.0], [82.2, 63.0], [82.3, 63.0], [82.4, 63.0], [82.5, 63.0], [82.6, 64.0], [82.7, 64.0], [82.8, 64.0], [82.9, 64.0], [83.0, 64.0], [83.1, 64.0], [83.2, 64.0], [83.3, 64.0], [83.4, 64.0], [83.5, 65.0], [83.6, 65.0], [83.7, 65.0], [83.8, 65.0], [83.9, 65.0], [84.0, 65.0], [84.1, 65.0], [84.2, 65.0], [84.3, 66.0], [84.4, 66.0], [84.5, 66.0], [84.6, 66.0], [84.7, 66.0], [84.8, 66.0], [84.9, 66.0], [85.0, 66.0], [85.1, 67.0], [85.2, 67.0], [85.3, 67.0], [85.4, 67.0], [85.5, 67.0], [85.6, 67.0], [85.7, 67.0], [85.8, 68.0], [85.9, 68.0], [86.0, 68.0], [86.1, 68.0], [86.2, 68.0], [86.3, 68.0], [86.4, 68.0], [86.5, 69.0], [86.6, 69.0], [86.7, 69.0], [86.8, 69.0], [86.9, 69.0], [87.0, 69.0], [87.1, 70.0], [87.2, 70.0], [87.3, 70.0], [87.4, 70.0], [87.5, 70.0], [87.6, 70.0], [87.7, 71.0], [87.8, 71.0], [87.9, 71.0], [88.0, 71.0], [88.1, 71.0], [88.2, 71.0], [88.3, 72.0], [88.4, 72.0], [88.5, 72.0], [88.6, 72.0], [88.7, 72.0], [88.8, 73.0], [88.9, 73.0], [89.0, 73.0], [89.1, 73.0], [89.2, 74.0], [89.3, 74.0], [89.4, 74.0], [89.5, 74.0], [89.6, 74.0], [89.7, 75.0], [89.8, 75.0], [89.9, 75.0], [90.0, 75.0], [90.1, 75.0], [90.2, 76.0], [90.3, 76.0], [90.4, 76.0], [90.5, 77.0], [90.6, 77.0], [90.7, 77.0], [90.8, 77.0], [90.9, 78.0], [91.0, 78.0], [91.1, 78.0], [91.2, 79.0], [91.3, 79.0], [91.4, 79.0], [91.5, 80.0], [91.6, 80.0], [91.7, 80.0], [91.8, 81.0], [91.9, 81.0], [92.0, 81.0], [92.1, 82.0], [92.2, 82.0], [92.3, 83.0], [92.4, 83.0], [92.5, 83.0], [92.6, 84.0], [92.7, 84.0], [92.8, 85.0], [92.9, 85.0], [93.0, 86.0], [93.1, 87.0], [93.2, 87.0], [93.3, 87.0], [93.4, 88.0], [93.5, 89.0], [93.6, 89.0], [93.7, 90.0], [93.8, 91.0], [93.9, 91.0], [94.0, 92.0], [94.1, 93.0], [94.2, 93.0], [94.3, 94.0], [94.4, 95.0], [94.5, 96.0], [94.6, 97.0], [94.7, 98.0], [94.8, 99.0], [94.9, 100.0], [95.0, 101.0], [95.1, 102.0], [95.2, 104.0], [95.3, 106.0], [95.4, 108.0], [95.5, 110.0], [95.6, 112.0], [95.7, 114.0], [95.8, 116.0], [95.9, 117.0], [96.0, 119.0], [96.1, 121.0], [96.2, 124.0], [96.3, 126.0], [96.4, 129.0], [96.5, 131.0], [96.6, 133.0], [96.7, 135.0], [96.8, 137.0], [96.9, 140.0], [97.0, 142.0], [97.1, 144.0], [97.2, 147.0], [97.3, 150.0], [97.4, 152.0], [97.5, 156.0], [97.6, 158.0], [97.7, 161.0], [97.8, 164.0], [97.9, 167.0], [98.0, 169.0], [98.1, 172.0], [98.2, 174.0], [98.3, 177.0], [98.4, 181.0], [98.5, 188.0], [98.6, 193.0], [98.7, 200.0], [98.8, 211.0], [98.9, 228.0], [99.0, 286.0], [99.1, 302.0], [99.2, 315.0], [99.3, 331.0], [99.4, 341.0], [99.5, 354.0], [99.6, 368.0], [99.7, 384.0], [99.8, 422.0], [99.9, 755.0], [100.0, 21606.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 136630.0, "series": [{"data": [[0.0, 60791.0], [2100.0, 1.0], [600.0, 9.0], [700.0, 40.0], [200.0, 164.0], [800.0, 21.0], [3300.0, 1.0], [3400.0, 1.0], [900.0, 1.0], [1000.0, 5.0], [1100.0, 2.0], [300.0, 431.0], [1200.0, 2.0], [1400.0, 2.0], [21600.0, 1.0], [100.0, 2469.0], [400.0, 45.0], [1600.0, 4.0], [1800.0, 1.0], [500.0, 9.0]], "isOverall": false, "label": "GetMatches", "isController": true}, {"data": [[0.0, 15335.0], [600.0, 1.0], [700.0, 22.0], [200.0, 58.0], [3300.0, 1.0], [800.0, 4.0], [900.0, 1.0], [1000.0, 3.0], [1100.0, 1.0], [300.0, 122.0], [1300.0, 1.0], [100.0, 438.0], [400.0, 5.0], [500.0, 8.0]], "isOverall": false, "label": "Post", "isController": true}, {"data": [[0.0, 60504.0], [2100.0, 2.0], [2200.0, 1.0], [600.0, 2.0], [700.0, 37.0], [200.0, 338.0], [800.0, 24.0], [3400.0, 1.0], [900.0, 2.0], [1000.0, 6.0], [1100.0, 2.0], [300.0, 407.0], [1200.0, 1.0], [19200.0, 2.0], [100.0, 2579.0], [400.0, 80.0], [1600.0, 4.0], [500.0, 8.0]], "isOverall": false, "label": "GetStats", "isController": true}, {"data": [[0.0, 136630.0], [2100.0, 3.0], [2200.0, 1.0], [600.0, 12.0], [700.0, 99.0], [200.0, 560.0], [800.0, 49.0], [3300.0, 2.0], [3400.0, 2.0], [900.0, 4.0], [1000.0, 14.0], [1100.0, 5.0], [300.0, 960.0], [1200.0, 3.0], [19200.0, 2.0], [1300.0, 1.0], [1400.0, 2.0], [21600.0, 1.0], [100.0, 5486.0], [400.0, 130.0], [1600.0, 8.0], [1800.0, 1.0], [500.0, 25.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 17.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 143540.0, "series": [{"data": [[0.0, 143540.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 214.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 17.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 229.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68090708E12, "maxY": 111.34776409388436, "series": [{"data": [[1.68090708E12, 111.34776409388436], [1.68090714E12, 1.0]], "isOverall": false, "label": "Get Stats", "isController": false}, {"data": [[1.68090708E12, 40.53131249999986]], "isOverall": false, "label": "Post ", "isController": false}, {"data": [[1.68090708E12, 111.14893749999952]], "isOverall": false, "label": "Get Matches", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68090714E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.0, "maxY": 1227.375, "series": [{"data": [[3.0, 13.550724637681157], [4.0, 14.75], [5.0, 15.0], [6.0, 12.333333333333334], [7.0, 12.25], [8.0, 30.727272727272723], [9.0, 14.0], [10.0, 14.27272727272727], [11.0, 13.0], [12.0, 14.166666666666668], [13.0, 17.699999999999996], [14.0, 20.6], [15.0, 15.26923076923077], [17.0, 20.0], [18.0, 22.041666666666668], [19.0, 12.6], [20.0, 14.093750000000002], [21.0, 38.66666666666667], [22.0, 22.0], [23.0, 14.244444444444444], [24.0, 13.0], [25.0, 19.67857142857143], [26.0, 16.5], [27.0, 13.0], [28.0, 36.06060606060606], [29.0, 13.4], [30.0, 20.162162162162165], [31.0, 23.5], [32.0, 25.0], [33.0, 21.266666666666673], [34.0, 12.333333333333334], [35.0, 19.219512195121943], [36.0, 20.454545454545453], [37.0, 13.0], [38.0, 38.0], [40.0, 26.121951219512187], [41.0, 44.0], [43.0, 32.08695652173913], [44.0, 21.0], [45.0, 28.69444444444444], [46.0, 21.0], [48.0, 21.886363636363637], [49.0, 22.133333333333333], [50.0, 21.20588235294118], [51.0, 21.18181818181818], [53.0, 36.64705882352941], [52.0, 23.0], [54.0, 17.333333333333336], [55.0, 26.5], [57.0, 90.47368421052633], [58.0, 30.236842105263154], [59.0, 19.25], [60.0, 60.49999999999999], [61.0, 19.0], [63.0, 27.94285714285714], [62.0, 20.333333333333336], [65.0, 45.86000000000002], [66.0, 13.0], [67.0, 18.625000000000004], [64.0, 20.555555555555557], [68.0, 22.0], [69.0, 119.0], [70.0, 65.96875000000001], [71.0, 14.0], [72.0, 32.714285714285715], [73.0, 28.385964912280702], [74.0, 22.600000000000005], [75.0, 58.08695652173914], [76.0, 15.875], [78.0, 44.72727272727275], [79.0, 48.900000000000006], [77.0, 31.8], [80.0, 50.25], [81.0, 38.94444444444445], [83.0, 49.8409090909091], [82.0, 14.333333333333336], [84.0, 27.71428571428571], [85.0, 57.85074626865672], [86.0, 51.24999999999999], [87.0, 24.666666666666664], [88.0, 39.93670886075949], [90.0, 79.13157894736844], [91.0, 28.111111111111114], [92.0, 24.411764705882348], [93.0, 22.84210526315789], [94.0, 27.588235294117656], [95.0, 35.59036144578313], [96.0, 20.749999999999996], [97.0, 132.8], [98.0, 30.94252873563218], [99.0, 22.055555555555543], [100.0, 26.617647058823522], [101.0, 17.814814814814817], [103.0, 34.30508474576273], [102.0, 16.5], [105.0, 32.13888888888888], [106.0, 123.33333333333334], [107.0, 323.0], [108.0, 52.70329670329669], [110.0, 20.632911392405063], [111.0, 24.88888888888889], [109.0, 25.72727272727273], [112.0, 19.769230769230774], [113.0, 66.76], [115.0, 39.43119266055044], [114.0, 18.434782608695652], [116.0, 20.395833333333336], [118.0, 24.23880597014925], [119.0, 33.0], [117.0, 21.437499999999996], [120.0, 38.74999999999999], [121.0, 21.26229508196721], [122.0, 21.024390243902438], [123.0, 80.08333333333333], [124.0, 34.285714285714285], [125.0, 37.54054054054055], [126.0, 35.366197183098585], [127.0, 24.355932203389838], [128.0, 103.98666666666665], [129.0, 24.124999999999996], [130.0, 53.9672131147541], [131.0, 45.80645161290322], [132.0, 30.25], [133.0, 40.02247191011236], [134.0, 99.64516129032258], [135.0, 30.764705882352942], [136.0, 40.0], [138.0, 54.85393258426968], [140.0, 60.295774647887335], [141.0, 31.125000000000007], [143.0, 35.05813953488372], [142.0, 27.96551724137931], [139.0, 34.333333333333336], [137.0, 23.5], [144.0, 33.441176470588196], [145.0, 23.387096774193548], [146.0, 24.376470588235293], [147.0, 33.25], [148.0, 54.300000000000004], [149.0, 28.08053691275168], [150.0, 62.41975308641974], [151.0, 21.083333333333336], [152.0, 65.9], [153.0, 56.48000000000001], [155.0, 49.4878048780488], [158.0, 102.26388888888889], [159.0, 36.91176470588235], [157.0, 21.296296296296298], [156.0, 26.428571428571427], [154.0, 31.77777777777778], [160.0, 50.31944444444447], [161.0, 27.7923076923077], [162.0, 41.489795918367356], [163.0, 52.62886597938141], [164.0, 29.522058823529413], [165.0, 26.49295774647887], [166.0, 42.981566820276505], [167.0, 117.79999999999998], [168.0, 66.69767441860468], [169.0, 19.47058823529412], [170.0, 60.92783505154639], [173.0, 41.0], [174.0, 74.06451612903226], [175.0, 37.0472972972973], [172.0, 57.666666666666664], [171.0, 29.434782608695645], [176.0, 23.695652173913043], [178.0, 27.50543478260869], [179.0, 49.13636363636365], [180.0, 36.19999999999999], [181.0, 30.18750000000001], [182.0, 45.72727272727273], [183.0, 43.32258064516131], [177.0, 66.6], [185.0, 104.53125000000003], [186.0, 44.83404255319148], [187.0, 23.52173913043478], [188.0, 53.483720930232565], [189.0, 33.68656716417912], [190.0, 139.46874999999997], [191.0, 31.87272727272727], [184.0, 20.2], [192.0, 51.53191489361702], [193.0, 41.329896907216494], [194.0, 40.93023255813953], [195.0, 41.72839506172841], [196.0, 54.46067415730339], [197.0, 33.65441176470588], [198.0, 117.52666666666673], [199.0, 32.16981132075471], [200.0, 37.301369863013704], [203.0, 167.65217391304347], [205.0, 105.6626506024096], [206.0, 101.6060606060606], [207.0, 27.25], [204.0, 40.78030303030304], [202.0, 24.875], [201.0, 28.828571428571422], [208.0, 35.62962962962962], [209.0, 52.17187500000001], [210.0, 51.628415300546465], [211.0, 28.26989619377163], [212.0, 28.812499999999996], [213.0, 86.47441860465119], [214.0, 55.49549549549549], [215.0, 37.139817629179355], [217.0, 32.88157894736843], [218.0, 62.78280542986422], [219.0, 48.1684210526316], [220.0, 46.1095890410959], [221.0, 31.80392156862745], [223.0, 32.837837837837846], [222.0, 46.32160804020102], [216.0, 41.03960396039604], [224.0, 41.21428571428571], [225.0, 32.52499999999999], [226.0, 48.385321100917416], [227.0, 40.34203655352481], [228.0, 48.923787528868345], [229.0, 38.03333333333334], [231.0, 40.023054755043226], [230.0, 43.35000000000001], [232.0, 47.57657657657658], [233.0, 29.255813953488364], [234.0, 57.36882129277567], [235.0, 56.46], [236.0, 47.322375397666995], [237.0, 33.9497487437186], [238.0, 54.94354838709677], [239.0, 37.90499999999999], [240.0, 41.48437499999992], [241.0, 40.03749999999999], [242.0, 42.784037558685455], [243.0, 33.84444444444444], [244.0, 38.97567567567568], [245.0, 39.98086124401914], [246.0, 41.10488058151609], [247.0, 51.71949828962369], [248.0, 58.76525821596245], [250.0, 50.22897196261685], [251.0, 42.848874598070694], [252.0, 50.56289978678038], [253.0, 43.52941176470586], [255.0, 45.797342192690984], [254.0, 49.0939963614311], [249.0, 107.94412878787868], [257.0, 54.31891348088539], [256.0, 44.001893939393966], [258.0, 52.270689655172426], [259.0, 58.10156250000003], [268.0, 45.01311475409833], [269.0, 54.525083612040106], [270.0, 56.14089347079037], [271.0, 45.07315233785823], [260.0, 48.09841827768014], [261.0, 53.39735099337751], [262.0, 64.29915560916758], [263.0, 55.553571428571466], [264.0, 46.804054054054085], [265.0, 57.20689655172414], [267.0, 50.05454545454546], [266.0, 52.63122923588041], [273.0, 42.37878787878788], [272.0, 46.68471953578337], [274.0, 52.41666666666666], [275.0, 88.04359673024517], [276.0, 53.51612903225806], [277.0, 47.4796084828711], [279.0, 67.97368421052639], [280.0, 74.9910714285714], [286.0, 77.12121212121215], [287.0, 45.44736842105262], [284.0, 41.68049792531123], [285.0, 50.456828885400256], [281.0, 50.253796095444635], [282.0, 50.077519379844965], [283.0, 55.702179176755465], [289.0, 42.999999999999986], [288.0, 56.63146779303063], [290.0, 55.26688632619441], [291.0, 62.03636363636365], [293.0, 51.008086253369264], [292.0, 63.819999999999936], [294.0, 70.57653061224488], [296.0, 62.4535864978903], [302.0, 79.21016949152553], [303.0, 53.13445378151267], [300.0, 57.36321483771252], [301.0, 47.65833333333335], [295.0, 62.95867768595035], [297.0, 52.61129568106311], [299.0, 67.19724770642209], [298.0, 57.00471698113208], [305.0, 56.85779816513767], [304.0, 61.718390804597696], [306.0, 56.47422680412367], [307.0, 64.11248073959926], [308.0, 50.93434343434339], [309.0, 52.413253012048166], [311.0, 54.32244897959183], [310.0, 52.63636363636363], [312.0, 46.29411764705883], [313.0, 58.07322929171668], [314.0, 62.797752808988754]], "isOverall": false, "label": "GetMatches", "isController": true}, {"data": [[247.56798437499938, 50.82462500000017]], "isOverall": false, "label": "GetMatches-Aggregated", "isController": true}, {"data": [[8.0, 30.333333333333336], [9.0, 15.0], [10.0, 12.181818181818182], [11.0, 11.0], [12.0, 19.0], [13.0, 16.900000000000002], [14.0, 20.333333333333332], [15.0, 15.299999999999999], [17.0, 22.333333333333332], [18.0, 19.857142857142854], [19.0, 13.0], [20.0, 13.777777777777779], [23.0, 14.592592592592593], [25.0, 15.90909090909091], [28.0, 35.588235294117645], [29.0, 14.333333333333334], [30.0, 21.368421052631582], [31.0, 18.4], [33.0, 18.074074074074073], [34.0, 11.5], [35.0, 21.27777777777778], [36.0, 31.833333333333336], [38.0, 25.28571428571429], [39.0, 12.0], [40.0, 21.482758620689655], [41.0, 21.0], [43.0, 16.294117647058822], [44.0, 13.999999999999998], [45.0, 23.499999999999993], [46.0, 17.6], [47.0, 40.0], [48.0, 16.969696969696965], [49.0, 13.833333333333334], [50.0, 17.72727272727273], [51.0, 19.666666666666668], [53.0, 48.28571428571429], [54.0, 47.0], [55.0, 66.0], [57.0, 144.25], [58.0, 36.824999999999996], [59.0, 12.0], [60.0, 33.25925925925927], [62.0, 38.25], [63.0, 22.727272727272727], [65.0, 22.698113207547166], [66.0, 13.0], [67.0, 12.777777777777779], [68.0, 28.4375], [69.0, 30.0], [70.0, 26.370370370370374], [72.0, 46.44444444444444], [73.0, 18.91428571428572], [74.0, 25.0], [75.0, 34.46666666666666], [76.0, 13.6], [77.0, 16.666666666666668], [78.0, 28.73809523809524], [79.0, 20.0], [80.0, 56.69230769230771], [81.0, 45.85714285714286], [83.0, 48.29411764705884], [84.0, 24.636363636363637], [85.0, 14.26470588235294], [86.0, 16.285714285714285], [88.0, 18.451612903225808], [89.0, 14.125], [90.0, 26.90566037735849], [91.0, 13.444444444444445], [92.0, 20.0], [93.0, 18.533333333333335], [94.0, 19.736842105263158], [95.0, 20.048387096774192], [96.0, 13.0], [98.0, 21.588235294117645], [99.0, 32.75], [100.0, 33.69767441860466], [101.0, 16.666666666666668], [103.0, 25.945945945945944], [105.0, 38.666666666666664], [108.0, 40.268292682926834], [109.0, 13.0], [110.0, 19.217391304347828], [112.0, 18.0], [113.0, 188.53846153846155], [115.0, 25.299999999999997], [116.0, 13.9], [118.0, 28.921052631578945], [119.0, 31.0], [120.0, 43.0], [121.0, 19.25], [123.0, 52.75], [125.0, 42.99999999999999], [127.0, 70.0], [128.0, 109.34999999999997], [129.0, 15.0], [130.0, 83.04166666666664], [131.0, 13.555555555555555], [132.0, 22.0], [133.0, 46.00000000000001], [134.0, 101.92857142857142], [135.0, 37.642857142857146], [136.0, 75.0], [138.0, 36.42424242424243], [140.0, 81.95238095238095], [141.0, 79.92857142857143], [143.0, 34.279999999999994], [144.0, 31.357142857142858], [145.0, 19.333333333333336], [146.0, 69.0], [147.0, 61.0], [148.0, 60.666666666666664], [149.0, 65.42857142857143], [150.0, 52.93333333333333], [151.0, 65.33333333333333], [152.0, 313.0], [153.0, 85.4375], [155.0, 97.57894736842104], [158.0, 72.27272727272725], [159.0, 169.33333333333334], [160.0, 25.80392156862745], [161.0, 63.14285714285715], [162.0, 284.0], [163.0, 55.20833333333333], [164.0, 91.29411764705883], [165.0, 22.67567567567567], [166.0, 34.125], [167.0, 107.74999999999999], [168.0, 61.9], [170.0, 43.55357142857143], [173.0, 64.30555555555556], [174.0, 16.75], [175.0, 44.09756097560975], [176.0, 18.53333333333333], [178.0, 23.5], [179.0, 47.00000000000001], [180.0, 54.68627450980392], [181.0, 34.666666666666664], [182.0, 14.0], [183.0, 27.42], [185.0, 110.60000000000001], [186.0, 20.0625], [188.0, 17.477777777777778], [189.0, 16.904761904761905], [190.0, 60.72881355932204], [191.0, 25.086956521739133], [192.0, 34.0], [193.0, 21.372881355932204], [194.0, 14.812499999999998], [195.0, 35.188679245283], [196.0, 37.66666666666668], [197.0, 22.75], [198.0, 86.75], [199.0, 24.0], [200.0, 42.54347826086957], [201.0, 155.25], [202.0, 10.0], [203.0, 29.791304347826088], [204.0, 13.000000000000002], [205.0, 21.155555555555562], [206.0, 15.600000000000001], [207.0, 14.75], [208.0, 28.75], [209.0, 40.77777777777778], [210.0, 56.128205128205124], [211.0, 13.0], [213.0, 163.70175438596496], [214.0, 12.0], [215.0, 23.163265306122444], [217.0, 53.72727272727272], [218.0, 38.37681159420289], [219.0, 32.64705882352942], [220.0, 24.962025316455694], [221.0, 130.28571428571428], [223.0, 26.73529411764706], [222.0, 36.71830985915492], [224.0, 36.43589743589744], [225.0, 143.42857142857147], [226.0, 25.73684210526316], [227.0, 47.134615384615394], [228.0, 28.690476190476186], [229.0, 18.181818181818187], [231.0, 60.65517241379311], [232.0, 49.8235294117647], [234.0, 73.66666666666667], [235.0, 130.33333333333334], [236.0, 119.59523809523809], [237.0, 22.999999999999993], [238.0, 22.666666666666668], [239.0, 25.90225563909774], [240.0, 85.8], [241.0, 35.15384615384615], [242.0, 23.58394160583942], [243.0, 22.0], [244.0, 31.294117647058833], [245.0, 23.42105263157894], [246.0, 29.48958333333334], [248.0, 30.891666666666673], [250.0, 27.700000000000003], [251.0, 36.44827586206897], [252.0, 22.578947368421055], [253.0, 25.8], [257.0, 73.0], [256.0, 53.12500000000001], [258.0, 44.3684210526316], [259.0, 59.888888888888886], [268.0, 33.934959349593484], [269.0, 32.55000000000001], [270.0, 40.35227272727274], [271.0, 33.06870229007633], [260.0, 37.53333333333333], [261.0, 89.43478260869566], [262.0, 56.08799999999997], [263.0, 44.03703703703704], [264.0, 39.18840579710145], [265.0, 32.197674418604656], [267.0, 30.609375000000007], [266.0, 47.629629629629626], [273.0, 53.16129032258063], [272.0, 37.512396694214864], [274.0, 31.404494382022484], [275.0, 40.49019607843139], [276.0, 44.52727272727274], [277.0, 30.75609756097562], [278.0, 38.07142857142857], [279.0, 36.97196261682242], [280.0, 60.472727272727255], [286.0, 49.04687499999999], [287.0, 57.857142857142854], [284.0, 34.36792452830189], [285.0, 36.61739130434784], [281.0, 41.064516129032256], [282.0, 47.838709677419374], [283.0, 27.7093023255814], [289.0, 47.9642857142857], [288.0, 46.43450479233225], [291.0, 41.93750000000001], [290.0, 36.79914529914532], [300.0, 40.16109422492399], [302.0, 54.524752475247524], [301.0, 28.93023255813953], [303.0, 36.420765027322396], [293.0, 43.12142857142857], [292.0, 35.32835820895522], [294.0, 77.07291666666669], [296.0, 72.64423076923077], [295.0, 46.47368421052634], [297.0, 35.484581497797365], [298.0, 46.8157894736842], [299.0, 41.68686868686869], [306.0, 45.139737991266394], [304.0, 46.64743589743583], [305.0, 40.28628230616301], [307.0, 45.42461538461535], [308.0, 40.51590106007065], [309.0, 36.244939271255085], [311.0, 37.39869281045753], [310.0, 34.38461538461537], [312.0, 37.33990147783255], [313.0, 43.84250474383302], [314.0, 43.59146341463415]], "isOverall": false, "label": "Post", "isController": true}, {"data": [[251.36674999999974, 40.565937500000196]], "isOverall": false, "label": "Post-Aggregated", "isController": true}, {"data": [[2.0, 13.107317073170732], [3.0, 13.19718309859155], [4.0, 13.823529411764708], [5.0, 12.818181818181818], [6.0, 14.0], [7.0, 14.217391304347824], [8.0, 1227.375], [9.0, 14.736842105263158], [10.0, 14.54761904761905], [11.0, 23.357142857142854], [12.0, 26.19230769230769], [13.0, 16.8974358974359], [14.0, 15.81818181818182], [15.0, 15.617021276595741], [16.0, 14.285714285714285], [17.0, 13.833333333333334], [18.0, 16.95], [19.0, 13.5], [20.0, 14.199999999999998], [21.0, 26.2], [22.0, 15.5], [23.0, 14.404255319148941], [24.0, 18.052631578947363], [25.0, 18.18072289156627], [26.0, 14.382352941176475], [27.0, 14.928571428571427], [28.0, 29.333333333333332], [29.0, 13.764705882352944], [30.0, 18.367647058823525], [31.0, 17.285714285714285], [33.0, 28.136363636363637], [32.0, 16.620000000000005], [34.0, 45.733333333333334], [35.0, 19.686274509803916], [36.0, 14.6218487394958], [37.0, 18.785714285714278], [38.0, 34.156862745098024], [39.0, 17.56521739130434], [40.0, 23.35714285714285], [41.0, 19.23913043478261], [43.0, 24.093750000000004], [42.0, 11.0], [44.0, 22.333333333333332], [45.0, 23.428571428571434], [46.0, 22.77777777777778], [47.0, 19.642857142857146], [48.0, 22.19047619047619], [49.0, 21.70588235294118], [50.0, 39.15277777777779], [51.0, 20.555555555555557], [53.0, 30.783783783783782], [52.0, 21.125000000000004], [55.0, 18.122448979591837], [54.0, 19.638297872340424], [57.0, 22.57281553398059], [56.0, 17.90909090909091], [58.0, 22.493150684931503], [59.0, 19.815789473684216], [60.0, 35.72549019607841], [61.0, 20.619047619047617], [63.0, 26.516129032258075], [62.0, 18.990566037735853], [65.0, 34.54444444444447], [66.0, 21.571428571428573], [67.0, 23.921875000000004], [64.0, 27.53164556962026], [68.0, 25.484848484848488], [69.0, 39.42857142857143], [70.0, 44.31355932203389], [71.0, 18.582417582417587], [72.0, 26.021739130434778], [73.0, 26.93434343434341], [74.0, 23.769911504424783], [75.0, 32.26436781609196], [76.0, 25.333333333333332], [77.0, 26.250000000000007], [78.0, 36.63779527559054], [79.0, 20.8], [80.0, 36.14634146341463], [81.0, 28.82758620689655], [83.0, 39.634146341463406], [82.0, 16.58426966292134], [84.0, 25.38095238095238], [85.0, 42.791666666666664], [86.0, 45.05263157894736], [87.0, 26.666666666666668], [88.0, 35.12426035502959], [89.0, 38.73913043478261], [90.0, 72.32558139534885], [91.0, 66.44444444444444], [93.0, 27.959999999999997], [94.0, 28.362903225806452], [95.0, 35.33928571428571], [92.0, 27.015625], [96.0, 23.73333333333333], [97.0, 78.61538461538463], [98.0, 27.52589641434262], [99.0, 20.473404255319142], [100.0, 25.162162162162154], [101.0, 20.7319587628866], [103.0, 28.876106194690276], [102.0, 32.14285714285714], [105.0, 33.01970443349752], [106.0, 49.14285714285714], [107.0, 61.333333333333336], [108.0, 46.55462184873949], [109.0, 32.21348314606744], [110.0, 25.191176470588236], [111.0, 28.133333333333333], [112.0, 25.282051282051277], [113.0, 43.92783505154639], [115.0, 40.97986577181209], [114.0, 19.642857142857142], [116.0, 26.72307692307693], [118.0, 38.10909090909091], [119.0, 38.44444444444444], [117.0, 32.91489361702128], [120.0, 41.30434782608697], [121.0, 24.633333333333336], [122.0, 24.55813953488372], [123.0, 75.28571428571428], [125.0, 44.653846153846146], [126.0, 40.39455782312925], [127.0, 27.818181818181824], [124.0, 24.347826086956523], [128.0, 101.3298969072165], [130.0, 60.7457627118644], [131.0, 32.613861386138616], [132.0, 41.11111111111111], [133.0, 40.35820895522387], [134.0, 163.18518518518513], [135.0, 29.503355704698], [129.0, 28.64233576642336], [136.0, 55.09090909090909], [138.0, 62.452380952380985], [139.0, 40.0], [140.0, 51.28399999999996], [141.0, 34.084057971014495], [143.0, 34.82795698924731], [142.0, 44.282608695652165], [137.0, 40.37037037037038], [144.0, 39.54635761589401], [145.0, 27.277777777777782], [147.0, 60.0], [148.0, 41.025862068965516], [149.0, 34.65384615384616], [150.0, 59.36363636363639], [151.0, 20.375], [146.0, 26.67567567567569], [152.0, 46.45945945945945], [153.0, 58.86075949367089], [155.0, 61.094017094017104], [158.0, 97.99999999999994], [159.0, 32.86956521739131], [157.0, 29.119565217391315], [154.0, 33.20930232558139], [160.0, 31.49019607843137], [161.0, 38.982378854625566], [162.0, 55.076923076923094], [163.0, 63.09815950920247], [164.0, 38.69879518072285], [165.0, 33.148648648648646], [166.0, 42.45846153846155], [167.0, 116.30769230769228], [168.0, 53.561538461538454], [169.0, 26.599999999999994], [170.0, 35.895833333333336], [171.0, 36.030769230769245], [173.0, 62.49068322981364], [174.0, 64.66666666666666], [175.0, 52.32876712328766], [172.0, 86.33333333333334], [176.0, 24.479999999999997], [178.0, 36.94062499999999], [179.0, 21.809523809523807], [180.0, 53.21951219512194], [181.0, 54.15384615384615], [182.0, 50.32], [183.0, 59.42794759825325], [177.0, 52.95180722891565], [185.0, 103.93181818181819], [186.0, 64.62857142857145], [187.0, 41.17857142857141], [188.0, 47.88819875776398], [189.0, 38.80412371134022], [190.0, 63.660714285714256], [191.0, 60.392857142857146], [184.0, 26.08860759493671], [192.0, 53.271551724137936], [193.0, 34.90196078431372], [194.0, 27.59090909090909], [195.0, 30.096000000000004], [196.0, 37.90804597701148], [197.0, 45.85795454545457], [198.0, 148.30208333333334], [199.0, 41.44578313253011], [200.0, 62.5625], [201.0, 52.58823529411765], [202.0, 59.846153846153854], [203.0, 82.0], [205.0, 70.62765957446808], [206.0, 63.82608695652174], [207.0, 118.33333333333333], [204.0, 37.478991596638664], [208.0, 86.030303030303], [210.0, 50.36206896551723], [211.0, 38.19580419580421], [213.0, 67.63953488372093], [214.0, 72.76923076923076], [215.0, 46.1018181818182], [212.0, 57.54807692307691], [209.0, 66.99999999999999], [217.0, 41.10638297872341], [218.0, 74.060773480663], [219.0, 50.367187500000014], [220.0, 47.74045801526718], [221.0, 61.64285714285715], [222.0, 61.109965635738824], [223.0, 58.763888888888886], [216.0, 43.07236842105264], [224.0, 50.96327683615822], [225.0, 46.89999999999999], [226.0, 52.48235294117647], [227.0, 45.3467741935484], [228.0, 51.469543147208086], [229.0, 55.46192893401013], [231.0, 45.415584415584405], [230.0, 50.330188679245275], [232.0, 53.49333333333333], [233.0, 45.05882352941176], [234.0, 74.9193548387097], [236.0, 59.77927321668912], [237.0, 51.86124401913876], [238.0, 53.455284552845534], [239.0, 44.55871886121], [235.0, 54.888888888888886], [240.0, 52.139889196675895], [241.0, 58.505791505791514], [242.0, 51.72101449275361], [243.0, 43.358974358974365], [244.0, 45.87499999999998], [245.0, 60.21212121212119], [246.0, 53.34017971758661], [247.0, 65.07788595271211], [248.0, 87.04216867469877], [250.0, 59.56661991584852], [251.0, 70.42270058708424], [253.0, 51.11508282476022], [255.0, 54.901504787961706], [254.0, 54.58900778210108], [252.0, 57.690607734806655], [249.0, 120.69391824526426], [257.0, 65.39477503628449], [256.0, 56.7209677419354], [258.0, 54.681297709923655], [268.0, 61.57462686567166], [259.0, 66.53917050691241], [269.0, 54.59459459459462], [270.0, 59.75384615384618], [271.0, 55.95680147058826], [260.0, 54.604020100502495], [261.0, 67.24836601307184], [262.0, 71.42370129870129], [263.0, 71.35955056179772], [264.0, 55.59790209790211], [265.0, 70.00714285714287], [266.0, 59.260606060606094], [267.0, 68.05913978494627], [274.0, 65.41379310344827], [272.0, 56.860526315789436], [273.0, 65.73770491803276], [275.0, 87.52547770700635], [284.0, 45.5891089108911], [285.0, 55.96612466124665], [286.0, 79.43750000000001], [287.0, 57.30232558139535], [276.0, 62.1025641025641], [277.0, 57.822458270106196], [279.0, 84.88473520249227], [278.0, 114.05555555555554], [280.0, 82.22522522522522], [281.0, 49.63125], [282.0, 56.14790996784565], [283.0, 60.256965944272466], [289.0, 74.9337748344371], [288.0, 60.82879377431912], [290.0, 51.243980738362815], [291.0, 60.0], [293.0, 52.58718861209966], [292.0, 79.99999999999999], [294.0, 96.04166666666659], [295.0, 76.77462887989199], [296.0, 87.99382716049384], [302.0, 80.53923541247482], [303.0, 63.994782608695715], [300.0, 79.56647398843928], [301.0, 59.11224489795917], [297.0, 69.82926829268298], [298.0, 61.12037037037037], [299.0, 87.80291970802918], [305.0, 69.58761528326743], [304.0, 73.5887802367475], [306.0, 60.930029154518984], [307.0, 83.96153846153842], [308.0, 63.63501483679527], [309.0, 64.74859437751009], [311.0, 62.633720930232585], [310.0, 63.901408450704224], [312.0, 56.78021978021977], [313.0, 61.194254445964454], [314.0, 71.33333333333341], [1.0, 121.61235955056196]], "isOverall": false, "label": "GetStats", "isController": true}, {"data": [[225.92510937499722, 55.95189062499982]], "isOverall": false, "label": "GetStats-Aggregated", "isController": true}, {"data": [[2.0, 13.107317073170732], [3.0, 13.371428571428568], [4.0, 14.120000000000003], [5.0, 13.285714285714285], [6.0, 13.615384615384615], [7.0, 13.925925925925926], [8.0, 610.848484848485], [9.0, 14.58333333333333], [10.0, 14.119999999999997], [11.0, 22.000000000000004], [12.0, 23.78787878787879], [13.0, 17.130434782608695], [14.0, 17.789473684210527], [15.0, 15.469879518072293], [16.0, 14.285714285714285], [17.0, 17.69230769230769], [18.0, 18.612244897959187], [19.0, 12.88888888888889], [20.0, 14.070588235294114], [21.0, 29.07692307692308], [22.0, 16.8], [23.0, 14.38655462184874], [24.0, 17.897959183673464], [25.0, 18.31967213114755], [26.0, 14.442857142857145], [27.0, 14.86206896551724], [28.0, 32.78947368421051], [29.0, 13.762711864406777], [30.0, 19.362903225806438], [31.0, 18.999999999999996], [32.0, 16.942307692307693], [33.0, 23.129310344827584], [34.0, 37.3], [35.0, 19.731132075471706], [36.0, 15.852941176470594], [37.0, 18.586206896551733], [38.0, 32.96739130434782], [39.0, 17.119999999999994], [40.0, 23.740259740259756], [41.0, 20.76000000000001], [43.0, 25.00892857142857], [42.0, 11.0], [44.0, 20.609375], [45.0, 25.183486238532105], [46.0, 20.958333333333336], [47.0, 20.999999999999996], [48.0, 21.17032967032967], [49.0, 20.262295081967213], [50.0, 30.70312499999999], [51.0, 20.57322175732218], [53.0, 34.42622950819671], [52.0, 21.235294117647054], [54.0, 19.772277227722768], [55.0, 20.68421052631579], [57.0, 30.331877729257627], [56.0, 17.90909090909091], [58.0, 28.23841059602649], [59.0, 19.644171779141107], [60.0, 42.47513812154698], [61.0, 20.545454545454543], [62.0, 19.72413793103448], [63.0, 26.04968944099379], [65.0, 34.22279792746116], [66.0, 19.666666666666668], [67.0, 22.712418300653585], [64.0, 26.818181818181806], [68.0, 25.468750000000004], [69.0, 46.266666666666666], [70.0, 45.49152542372882], [71.0, 18.38947368421053], [72.0, 27.95238095238095], [73.0, 26.251724137931028], [74.0, 23.653846153846153], [75.0, 39.95705521472393], [76.0, 20.535714285714285], [77.0, 26.237500000000004], [78.0, 36.751173708920206], [79.0, 27.261904761904763], [80.0, 43.56756756756755], [81.0, 35.721311475409834], [83.0, 45.88235294117645], [82.0, 16.37755102040816], [84.0, 25.913043478260867], [85.0, 37.70491803278687], [86.0, 41.56321839080458], [87.0, 26.372549019607842], [88.0, 33.01612903225808], [89.0, 32.38709677419356], [90.0, 56.291044776119406], [91.0, 34.027777777777786], [92.0, 26.238095238095234], [93.0, 23.835294117647052], [94.0, 27.288135593220343], [95.0, 31.73151750972762], [96.0, 22.54054054054054], [97.0, 102.17391304347824], [98.0, 27.51156812339333], [99.0, 21.020325203252032], [100.0, 26.331065759637188], [101.0, 19.864661654135343], [103.0, 29.889952153110045], [102.0, 30.1875], [105.0, 32.91459074733096], [106.0, 71.39999999999999], [107.0, 87.5], [108.0, 47.75697211155378], [109.0, 30.767857142857146], [110.0, 22.264705882352946], [111.0, 26.916666666666664], [112.0, 23.819905213270147], [113.0, 62.812500000000064], [115.0, 38.3087248322148], [114.0, 19.344086021505376], [116.0, 24.42553191489362], [118.0, 30.11875], [119.0, 37.27272727272727], [117.0, 29.035211267605614], [120.0, 40.5549132947977], [121.0, 23.70204081632654], [122.0, 22.833333333333336], [123.0, 71.6764705882353], [124.0, 26.666666666666664], [125.0, 41.81632653061226], [126.0, 38.75688073394498], [127.0, 27.43902439024389], [128.0, 103.78301886792445], [129.0, 27.023809523809522], [130.0, 61.59027777777778], [131.0, 34.29787234042551], [132.0, 34.31818181818181], [133.0, 41.15789473684214], [134.0, 120.33720930232562], [135.0, 31.315642458100566], [136.0, 53.4], [138.0, 52.43514644351461], [139.0, 34.9], [140.0, 55.94188861985474], [141.0, 34.26335174953959], [143.0, 34.794759825327546], [142.0, 37.97333333333335], [137.0, 37.73437500000001], [144.0, 37.17489711934156], [145.0, 23.343283582089555], [146.0, 26.20425531914894], [147.0, 48.333333333333336], [148.0, 47.877934272300436], [149.0, 32.817307692307715], [150.0, 60.236994219653155], [151.0, 23.352941176470583], [152.0, 57.75862068965516], [153.0, 60.311764705882354], [155.0, 59.90825688073395], [158.0, 94.67484662576688], [159.0, 48.04761904761904], [157.0, 27.344537815126053], [156.0, 26.428571428571427], [154.0, 32.65714285714286], [160.0, 36.226666666666645], [161.0, 35.450549450549474], [162.0, 49.32894736842105], [163.0, 58.8556338028169], [164.0, 37.58934169278999], [165.0, 28.42307692307691], [166.0, 42.543636363636324], [167.0, 115.93749999999999], [168.0, 59.277343749999986], [169.0, 24.02127659574468], [170.0, 47.369477911646584], [171.0, 34.306818181818194], [173.0, 54.22769230769232], [174.0, 66.07042253521126], [175.0, 44.57014925373133], [172.0, 76.77777777777777], [176.0, 23.351351351351347], [178.0, 32.829629629629665], [179.0, 38.074074074074076], [180.0, 45.21428571428572], [181.0, 46.534482758620726], [182.0, 47.98941798941798], [183.0, 49.15524193548387], [177.0, 58.39130434782608], [185.0, 105.7722772277228], [186.0, 53.81249999999995], [187.0, 34.9307692307692], [188.0, 45.441786283891574], [189.0, 34.46486486486487], [190.0, 83.57021276595742], [191.0, 42.62686567164178], [184.0, 23.951612903225808], [192.0, 52.03376623376622], [193.0, 34.22480620155038], [194.0, 30.10204081632652], [195.0, 34.77606177606178], [196.0, 43.07746478873238], [197.0, 40.313291139240526], [198.0, 121.60264900662246], [199.0, 36.88356164383562], [200.0, 48.668341708542705], [201.0, 42.568000000000005], [202.0, 50.42857142857144], [203.0, 72.21800947867294], [204.0, 36.927272727272715], [205.0, 64.84269662921348], [206.0, 73.93596059113304], [207.0, 60.71739130434785], [208.0, 59.8698481561823], [209.0, 55.15833333333334], [210.0, 51.5151515151515], [211.0, 33.06735751295336], [212.0, 53.71666666666666], [213.0, 89.09234234234223], [214.0, 63.89999999999996], [215.0, 38.699430199430154], [217.0, 37.477611940298495], [218.0, 63.541401273885405], [219.0, 47.2101167315175], [220.0, 42.01685393258431], [221.0, 55.612903225806434], [223.0, 42.05555555555556], [222.0, 51.086842105263145], [216.0, 42.26086956521735], [224.0, 45.37432432432435], [225.0, 44.220338983050844], [226.0, 47.99999999999999], [227.0, 43.08674101610903], [228.0, 49.100115074798666], [229.0, 42.868020304568525], [231.0, 43.32602339181288], [230.0, 46.94174757281555], [232.0, 49.9409090909091], [233.0, 36.23376623376624], [234.0, 66.93436960276343], [235.0, 59.1830985915493], [236.0, 54.435185185185226], [237.0, 38.943689320388394], [238.0, 53.45454545454545], [239.0, 38.24078624078626], [240.0, 46.686700767263375], [241.0, 49.255859375000014], [242.0, 42.58879618593565], [243.0, 37.883720930232556], [244.0, 41.19907407407404], [245.0, 47.56853932584269], [246.0, 45.683895538628974], [247.0, 57.73746867167928], [248.0, 61.46893787575153], [250.0, 54.13467589679045], [251.0, 53.94180327868851], [252.0, 52.97294117647057], [253.0, 46.58546845124276], [255.0, 49.870257037943674], [254.0, 51.588254774257734], [249.0, 114.15492957746498], [257.0, 59.00293944738387], [256.0, 49.742729538845], [258.0, 52.56814449917895], [259.0, 61.93360995850622], [268.0, 50.71194379391106], [269.0, 53.08528428093644], [270.0, 55.83522727272727], [271.0, 48.3228699551568], [260.0, 50.85215794306697], [261.0, 64.18857142857146], [262.0, 66.44076433121019], [263.0, 60.35964912280699], [264.0, 49.86021505376346], [265.0, 56.37062937062937], [266.0, 55.75075987841948], [267.0, 49.46554364471664], [273.0, 53.54736842105265], [272.0, 49.3929273084479], [274.0, 51.50377833753151], [275.0, 79.1247002398082], [276.0, 55.23986486486486], [277.0, 49.77318889641168], [278.0, 80.81249999999999], [279.0, 70.46926713948001], [280.0, 75.00719424460424], [286.0, 72.61290322580643], [287.0, 54.09420289855075], [284.0, 41.70673952641166], [285.0, 51.00685358255445], [281.0, 48.77458563535914], [282.0, 52.4011544011544], [283.0, 52.0198237885463], [289.0, 58.596330275229356], [288.0, 56.65337272279662], [290.0, 50.603142076502735], [291.0, 56.76388888888889], [293.0, 50.17424242424239], [292.0, 66.4160401002506], [294.0, 81.96694214876028], [295.0, 65.34145077720214], [296.0, 72.78628230616309], [302.0, 74.30431654676244], [303.0, 53.21148036253787], [300.0, 61.285618729096996], [301.0, 48.87356321839083], [297.0, 55.640625000000036], [298.0, 56.501845018450155], [299.0, 67.85242290748903], [305.0, 57.479381443298905], [304.0, 62.96545214272244], [306.0, 55.36249999999999], [307.0, 66.95582329317267], [308.0, 52.24507874015752], [309.0, 52.254559465707786], [311.0, 52.28771929824562], [310.0, 53.25174825174827], [312.0, 48.498346196251376], [313.0, 55.57771401243422], [314.0, 61.20178041543033], [1.0, 121.61235955056196]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[238.37101388888843, 51.963486111111045]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 314.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 489.7, "minX": 1.68090708E12, "maxY": 471200.1, "series": [{"data": [[1.68090708E12, 453498.25], [1.68090714E12, 574.8666666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68090708E12, 471200.1], [1.68090714E12, 489.7]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68090714E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 40.565937500000196, "minX": 1.68090708E12, "maxY": 121.61235955056196, "series": [{"data": [[1.68090708E12, 50.82462500000017]], "isOverall": false, "label": "GetMatches", "isController": true}, {"data": [[1.68090708E12, 40.565937500000196]], "isOverall": false, "label": "Post", "isController": true}, {"data": [[1.68090708E12, 55.76876312243406], [1.68090714E12, 121.61235955056196]], "isOverall": false, "label": "GetStats", "isController": true}, {"data": [[1.68090708E12, 51.8772858116282], [1.68090714E12, 121.61235955056196]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68090714E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 12.786516853932588, "minX": 1.68090708E12, "maxY": 54.18504590893412, "series": [{"data": [[1.68090708E12, 49.20129687499959]], "isOverall": false, "label": "GetMatches", "isController": true}, {"data": [[1.68090708E12, 39.61493749999991]], "isOverall": false, "label": "Post", "isController": true}, {"data": [[1.68090708E12, 54.18504590893412], [1.68090714E12, 12.786516853932588]], "isOverall": false, "label": "GetStats", "isController": true}, {"data": [[1.68090708E12, 50.34640041161952], [1.68090714E12, 12.786516853932588]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68090714E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.061797752808988804, "minX": 1.68090708E12, "maxY": 0.34318749999999815, "series": [{"data": [[1.68090708E12, 0.2650156250000026]], "isOverall": false, "label": "GetMatches", "isController": true}, {"data": [[1.68090708E12, 0.34318749999999815]], "isOverall": false, "label": "Post", "isController": true}, {"data": [[1.68090708E12, 0.28051455610917675], [1.68090714E12, 0.061797752808988804]], "isOverall": false, "label": "GetStats", "isController": true}, {"data": [[1.68090708E12, 0.2805898958434767], [1.68090714E12, 0.061797752808988804]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68090714E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 9.0, "minX": 1.68090708E12, "maxY": 3444.0, "series": [{"data": [[1.68090708E12, 3444.0], [1.68090714E12, 43.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68090708E12, 50.0], [1.68090714E12, 18.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68090708E12, 129.0], [1.68090714E12, 39.879999999999995]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68090708E12, 64.0], [1.68090714E12, 20.099999999999994]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68090708E12, 9.0], [1.68090714E12, 11.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68090708E12, 28.0], [1.68090714E12, 12.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68090714E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 12.0, "minX": 10.0, "maxY": 21606.0, "series": [{"data": [[61.0, 12.0], [75.0, 13.0], [73.0, 12.0], [1251.0, 18.0], [78.0, 12.0], [1319.0, 15.0], [92.0, 12.0], [1784.0, 18.0], [2096.0, 26.0], [2057.0, 112.0], [2195.0, 22.0], [2348.0, 24.0], [150.0, 12.0], [10.0, 12.0], [3011.0, 22.0], [199.0, 13.0], [3585.0, 33.0], [4256.0, 44.0], [4245.0, 33.0], [4311.0, 25.0], [4501.0, 44.0], [4498.0, 47.0], [4422.0, 47.0], [4484.0, 31.0], [4857.0, 44.0], [4854.0, 47.0], [4700.0, 48.0], [4791.0, 45.0], [4881.0, 40.0], [5008.0, 58.0], [5057.0, 51.0], [5083.0, 51.0], [5033.0, 48.0], [5087.0, 47.0], [5010.0, 41.0], [5304.0, 45.0], [5339.0, 46.0], [5264.0, 46.0], [20.0, 12.0], [5510.0, 54.0], [5430.0, 47.0], [5376.0, 43.0], [5838.0, 49.0], [457.0, 14.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2096.0, 76.0], [2195.0, 18.5], [2348.0, 35.0], [199.0, 19240.0], [3585.0, 17.0], [4256.0, 24.5], [4501.0, 37.5], [4498.0, 31.5], [4857.0, 24.0], [4854.0, 34.0], [1251.0, 18.5], [4881.0, 38.5], [5008.0, 31.5], [5057.0, 35.0], [5083.0, 45.0], [5304.0, 38.0], [5264.0, 21606.0], [20.0, 19256.0], [5510.0, 39.0], [5430.0, 34.0], [5838.0, 37.5], [1784.0, 15.0], [457.0, 27.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5838.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 10.0, "maxY": 112.0, "series": [{"data": [[61.0, 12.0], [75.0, 12.0], [73.0, 11.0], [1251.0, 18.0], [78.0, 12.0], [1319.0, 15.0], [92.0, 12.0], [1784.0, 18.0], [2096.0, 25.0], [2057.0, 112.0], [2195.0, 22.0], [2348.0, 24.0], [150.0, 12.0], [10.0, 11.5], [3011.0, 21.0], [199.0, 13.0], [3585.0, 32.0], [4256.0, 43.0], [4245.0, 32.0], [4311.0, 25.0], [4501.0, 43.0], [4498.0, 47.0], [4422.0, 47.0], [4484.0, 30.5], [4857.0, 44.0], [4854.0, 47.0], [4700.0, 47.0], [4791.0, 45.0], [4881.0, 39.0], [5008.0, 58.0], [5057.0, 51.0], [5083.0, 50.0], [5033.0, 47.0], [5087.0, 46.0], [5010.0, 41.0], [5304.0, 44.0], [5339.0, 45.0], [5264.0, 46.0], [20.0, 11.0], [5510.0, 54.0], [5430.0, 46.0], [5376.0, 42.0], [5838.0, 49.0], [457.0, 14.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2096.0, 76.0], [2195.0, 18.5], [2348.0, 35.0], [199.0, 0.0], [3585.0, 17.0], [4256.0, 24.5], [4501.0, 37.5], [4498.0, 31.5], [4857.0, 24.0], [4854.0, 34.0], [1251.0, 18.0], [4881.0, 38.5], [5008.0, 31.5], [5057.0, 35.0], [5083.0, 45.0], [5304.0, 38.0], [5264.0, 0.0], [20.0, 0.0], [5510.0, 39.0], [5430.0, 34.0], [5838.0, 37.5], [1784.0, 15.0], [457.0, 27.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5838.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.95, "minX": 1.68090708E12, "maxY": 2397.05, "series": [{"data": [[1.68090708E12, 2397.05], [1.68090714E12, 2.95]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68090714E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68090708E12, "maxY": 2130.3, "series": [{"data": [[1.68090708E12, 2130.3], [1.68090714E12, 2.95]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68090708E12, 262.93333333333334]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.68090708E12, 3.7333333333333334]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.68090708E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.MalformedChunkCodingException", "isController": false}, {"data": [[1.68090708E12, 0.03333333333333333], [1.68090714E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68090714E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68090708E12, "maxY": 2393.233333333333, "series": [{"data": [[1.68090708E12, 262.93333333333334]], "isOverall": false, "label": "Post-success", "isController": true}, {"data": [[1.68090708E12, 2393.233333333333], [1.68090714E12, 2.95]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68090708E12, 3.8], [1.68090714E12, 0.016666666666666666]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.68090708E12, 3.7333333333333334]], "isOverall": false, "label": "Post-failure", "isController": true}, {"data": [[1.68090708E12, 1066.6166666666666]], "isOverall": false, "label": "GetMatches-success", "isController": true}, {"data": [[1.68090708E12, 0.05]], "isOverall": false, "label": "GetMatches-failure", "isController": true}, {"data": [[1.68090708E12, 1063.6833333333334], [1.68090714E12, 2.95]], "isOverall": false, "label": "GetStats-success", "isController": true}, {"data": [[1.68090708E12, 0.016666666666666666], [1.68090714E12, 0.016666666666666666]], "isOverall": false, "label": "GetStats-failure", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68090714E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68090708E12, "maxY": 4786.466666666666, "series": [{"data": [[1.68090708E12, 4786.466666666666], [1.68090714E12, 5.9]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68090708E12, 7.6], [1.68090714E12, 0.03333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68090714E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


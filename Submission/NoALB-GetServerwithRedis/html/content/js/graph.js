/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 9.0, "minX": 0.0, "maxY": 10060.0, "series": [{"data": [[0.0, 9.0], [0.1, 10.0], [0.2, 10.0], [0.3, 10.0], [0.4, 11.0], [0.5, 11.0], [0.6, 11.0], [0.7, 11.0], [0.8, 11.0], [0.9, 11.0], [1.0, 11.0], [1.1, 12.0], [1.2, 12.0], [1.3, 12.0], [1.4, 12.0], [1.5, 12.0], [1.6, 12.0], [1.7, 12.0], [1.8, 12.0], [1.9, 12.0], [2.0, 13.0], [2.1, 13.0], [2.2, 13.0], [2.3, 13.0], [2.4, 13.0], [2.5, 13.0], [2.6, 13.0], [2.7, 13.0], [2.8, 13.0], [2.9, 13.0], [3.0, 13.0], [3.1, 13.0], [3.2, 13.0], [3.3, 14.0], [3.4, 14.0], [3.5, 14.0], [3.6, 14.0], [3.7, 14.0], [3.8, 14.0], [3.9, 14.0], [4.0, 14.0], [4.1, 14.0], [4.2, 14.0], [4.3, 14.0], [4.4, 14.0], [4.5, 14.0], [4.6, 15.0], [4.7, 15.0], [4.8, 15.0], [4.9, 15.0], [5.0, 15.0], [5.1, 15.0], [5.2, 15.0], [5.3, 15.0], [5.4, 15.0], [5.5, 15.0], [5.6, 15.0], [5.7, 16.0], [5.8, 16.0], [5.9, 16.0], [6.0, 16.0], [6.1, 16.0], [6.2, 16.0], [6.3, 16.0], [6.4, 16.0], [6.5, 16.0], [6.6, 16.0], [6.7, 16.0], [6.8, 16.0], [6.9, 16.0], [7.0, 17.0], [7.1, 17.0], [7.2, 17.0], [7.3, 17.0], [7.4, 17.0], [7.5, 17.0], [7.6, 17.0], [7.7, 17.0], [7.8, 17.0], [7.9, 17.0], [8.0, 17.0], [8.1, 17.0], [8.2, 17.0], [8.3, 18.0], [8.4, 18.0], [8.5, 18.0], [8.6, 18.0], [8.7, 18.0], [8.8, 18.0], [8.9, 18.0], [9.0, 18.0], [9.1, 18.0], [9.2, 18.0], [9.3, 18.0], [9.4, 18.0], [9.5, 18.0], [9.6, 18.0], [9.7, 18.0], [9.8, 18.0], [9.9, 19.0], [10.0, 19.0], [10.1, 19.0], [10.2, 19.0], [10.3, 19.0], [10.4, 19.0], [10.5, 19.0], [10.6, 19.0], [10.7, 19.0], [10.8, 19.0], [10.9, 19.0], [11.0, 19.0], [11.1, 19.0], [11.2, 19.0], [11.3, 19.0], [11.4, 19.0], [11.5, 19.0], [11.6, 19.0], [11.7, 20.0], [11.8, 20.0], [11.9, 20.0], [12.0, 20.0], [12.1, 20.0], [12.2, 20.0], [12.3, 20.0], [12.4, 20.0], [12.5, 20.0], [12.6, 20.0], [12.7, 20.0], [12.8, 20.0], [12.9, 20.0], [13.0, 20.0], [13.1, 20.0], [13.2, 20.0], [13.3, 20.0], [13.4, 20.0], [13.5, 20.0], [13.6, 20.0], [13.7, 20.0], [13.8, 20.0], [13.9, 20.0], [14.0, 21.0], [14.1, 21.0], [14.2, 21.0], [14.3, 21.0], [14.4, 21.0], [14.5, 21.0], [14.6, 21.0], [14.7, 21.0], [14.8, 21.0], [14.9, 21.0], [15.0, 21.0], [15.1, 21.0], [15.2, 21.0], [15.3, 21.0], [15.4, 21.0], [15.5, 21.0], [15.6, 21.0], [15.7, 21.0], [15.8, 21.0], [15.9, 21.0], [16.0, 21.0], [16.1, 21.0], [16.2, 21.0], [16.3, 22.0], [16.4, 22.0], [16.5, 22.0], [16.6, 22.0], [16.7, 22.0], [16.8, 22.0], [16.9, 22.0], [17.0, 22.0], [17.1, 22.0], [17.2, 22.0], [17.3, 22.0], [17.4, 22.0], [17.5, 22.0], [17.6, 22.0], [17.7, 22.0], [17.8, 22.0], [17.9, 22.0], [18.0, 22.0], [18.1, 22.0], [18.2, 22.0], [18.3, 22.0], [18.4, 22.0], [18.5, 22.0], [18.6, 22.0], [18.7, 23.0], [18.8, 23.0], [18.9, 23.0], [19.0, 23.0], [19.1, 23.0], [19.2, 23.0], [19.3, 23.0], [19.4, 23.0], [19.5, 23.0], [19.6, 23.0], [19.7, 23.0], [19.8, 23.0], [19.9, 23.0], [20.0, 23.0], [20.1, 23.0], [20.2, 23.0], [20.3, 23.0], [20.4, 23.0], [20.5, 23.0], [20.6, 23.0], [20.7, 23.0], [20.8, 23.0], [20.9, 23.0], [21.0, 23.0], [21.1, 23.0], [21.2, 23.0], [21.3, 23.0], [21.4, 23.0], [21.5, 24.0], [21.6, 24.0], [21.7, 24.0], [21.8, 24.0], [21.9, 24.0], [22.0, 24.0], [22.1, 24.0], [22.2, 24.0], [22.3, 24.0], [22.4, 24.0], [22.5, 24.0], [22.6, 24.0], [22.7, 24.0], [22.8, 24.0], [22.9, 24.0], [23.0, 24.0], [23.1, 24.0], [23.2, 24.0], [23.3, 24.0], [23.4, 24.0], [23.5, 24.0], [23.6, 24.0], [23.7, 24.0], [23.8, 24.0], [23.9, 24.0], [24.0, 24.0], [24.1, 24.0], [24.2, 24.0], [24.3, 25.0], [24.4, 25.0], [24.5, 25.0], [24.6, 25.0], [24.7, 25.0], [24.8, 25.0], [24.9, 25.0], [25.0, 25.0], [25.1, 25.0], [25.2, 25.0], [25.3, 25.0], [25.4, 25.0], [25.5, 25.0], [25.6, 25.0], [25.7, 25.0], [25.8, 25.0], [25.9, 25.0], [26.0, 25.0], [26.1, 25.0], [26.2, 25.0], [26.3, 25.0], [26.4, 25.0], [26.5, 25.0], [26.6, 25.0], [26.7, 25.0], [26.8, 25.0], [26.9, 25.0], [27.0, 26.0], [27.1, 26.0], [27.2, 26.0], [27.3, 26.0], [27.4, 26.0], [27.5, 26.0], [27.6, 26.0], [27.7, 26.0], [27.8, 26.0], [27.9, 26.0], [28.0, 26.0], [28.1, 26.0], [28.2, 26.0], [28.3, 26.0], [28.4, 26.0], [28.5, 26.0], [28.6, 26.0], [28.7, 26.0], [28.8, 26.0], [28.9, 26.0], [29.0, 26.0], [29.1, 26.0], [29.2, 26.0], [29.3, 26.0], [29.4, 26.0], [29.5, 26.0], [29.6, 26.0], [29.7, 26.0], [29.8, 26.0], [29.9, 26.0], [30.0, 27.0], [30.1, 27.0], [30.2, 27.0], [30.3, 27.0], [30.4, 27.0], [30.5, 27.0], [30.6, 27.0], [30.7, 27.0], [30.8, 27.0], [30.9, 27.0], [31.0, 27.0], [31.1, 27.0], [31.2, 27.0], [31.3, 27.0], [31.4, 27.0], [31.5, 27.0], [31.6, 27.0], [31.7, 27.0], [31.8, 27.0], [31.9, 27.0], [32.0, 27.0], [32.1, 27.0], [32.2, 27.0], [32.3, 27.0], [32.4, 27.0], [32.5, 27.0], [32.6, 27.0], [32.7, 27.0], [32.8, 27.0], [32.9, 27.0], [33.0, 27.0], [33.1, 27.0], [33.2, 27.0], [33.3, 28.0], [33.4, 28.0], [33.5, 28.0], [33.6, 28.0], [33.7, 28.0], [33.8, 28.0], [33.9, 28.0], [34.0, 28.0], [34.1, 28.0], [34.2, 28.0], [34.3, 28.0], [34.4, 28.0], [34.5, 28.0], [34.6, 28.0], [34.7, 28.0], [34.8, 28.0], [34.9, 28.0], [35.0, 28.0], [35.1, 28.0], [35.2, 28.0], [35.3, 28.0], [35.4, 28.0], [35.5, 28.0], [35.6, 28.0], [35.7, 28.0], [35.8, 28.0], [35.9, 28.0], [36.0, 28.0], [36.1, 28.0], [36.2, 28.0], [36.3, 28.0], [36.4, 28.0], [36.5, 28.0], [36.6, 28.0], [36.7, 29.0], [36.8, 29.0], [36.9, 29.0], [37.0, 29.0], [37.1, 29.0], [37.2, 29.0], [37.3, 29.0], [37.4, 29.0], [37.5, 29.0], [37.6, 29.0], [37.7, 29.0], [37.8, 29.0], [37.9, 29.0], [38.0, 29.0], [38.1, 29.0], [38.2, 29.0], [38.3, 29.0], [38.4, 29.0], [38.5, 29.0], [38.6, 29.0], [38.7, 29.0], [38.8, 29.0], [38.9, 29.0], [39.0, 29.0], [39.1, 29.0], [39.2, 29.0], [39.3, 29.0], [39.4, 29.0], [39.5, 29.0], [39.6, 29.0], [39.7, 29.0], [39.8, 29.0], [39.9, 29.0], [40.0, 29.0], [40.1, 30.0], [40.2, 30.0], [40.3, 30.0], [40.4, 30.0], [40.5, 30.0], [40.6, 30.0], [40.7, 30.0], [40.8, 30.0], [40.9, 30.0], [41.0, 30.0], [41.1, 30.0], [41.2, 30.0], [41.3, 30.0], [41.4, 30.0], [41.5, 30.0], [41.6, 30.0], [41.7, 30.0], [41.8, 30.0], [41.9, 30.0], [42.0, 30.0], [42.1, 30.0], [42.2, 30.0], [42.3, 30.0], [42.4, 30.0], [42.5, 30.0], [42.6, 30.0], [42.7, 30.0], [42.8, 30.0], [42.9, 30.0], [43.0, 30.0], [43.1, 30.0], [43.2, 30.0], [43.3, 30.0], [43.4, 30.0], [43.5, 30.0], [43.6, 30.0], [43.7, 30.0], [43.8, 31.0], [43.9, 31.0], [44.0, 31.0], [44.1, 31.0], [44.2, 31.0], [44.3, 31.0], [44.4, 31.0], [44.5, 31.0], [44.6, 31.0], [44.7, 31.0], [44.8, 31.0], [44.9, 31.0], [45.0, 31.0], [45.1, 31.0], [45.2, 31.0], [45.3, 31.0], [45.4, 31.0], [45.5, 31.0], [45.6, 31.0], [45.7, 31.0], [45.8, 31.0], [45.9, 31.0], [46.0, 31.0], [46.1, 31.0], [46.2, 31.0], [46.3, 31.0], [46.4, 31.0], [46.5, 31.0], [46.6, 31.0], [46.7, 31.0], [46.8, 31.0], [46.9, 31.0], [47.0, 31.0], [47.1, 31.0], [47.2, 31.0], [47.3, 31.0], [47.4, 32.0], [47.5, 32.0], [47.6, 32.0], [47.7, 32.0], [47.8, 32.0], [47.9, 32.0], [48.0, 32.0], [48.1, 32.0], [48.2, 32.0], [48.3, 32.0], [48.4, 32.0], [48.5, 32.0], [48.6, 32.0], [48.7, 32.0], [48.8, 32.0], [48.9, 32.0], [49.0, 32.0], [49.1, 32.0], [49.2, 32.0], [49.3, 32.0], [49.4, 32.0], [49.5, 32.0], [49.6, 32.0], [49.7, 32.0], [49.8, 32.0], [49.9, 32.0], [50.0, 32.0], [50.1, 32.0], [50.2, 32.0], [50.3, 32.0], [50.4, 32.0], [50.5, 32.0], [50.6, 32.0], [50.7, 32.0], [50.8, 32.0], [50.9, 32.0], [51.0, 32.0], [51.1, 32.0], [51.2, 33.0], [51.3, 33.0], [51.4, 33.0], [51.5, 33.0], [51.6, 33.0], [51.7, 33.0], [51.8, 33.0], [51.9, 33.0], [52.0, 33.0], [52.1, 33.0], [52.2, 33.0], [52.3, 33.0], [52.4, 33.0], [52.5, 33.0], [52.6, 33.0], [52.7, 33.0], [52.8, 33.0], [52.9, 33.0], [53.0, 33.0], [53.1, 33.0], [53.2, 33.0], [53.3, 33.0], [53.4, 33.0], [53.5, 33.0], [53.6, 33.0], [53.7, 33.0], [53.8, 33.0], [53.9, 33.0], [54.0, 33.0], [54.1, 33.0], [54.2, 33.0], [54.3, 33.0], [54.4, 33.0], [54.5, 33.0], [54.6, 33.0], [54.7, 33.0], [54.8, 33.0], [54.9, 33.0], [55.0, 33.0], [55.1, 33.0], [55.2, 33.0], [55.3, 33.0], [55.4, 34.0], [55.5, 34.0], [55.6, 34.0], [55.7, 34.0], [55.8, 34.0], [55.9, 34.0], [56.0, 34.0], [56.1, 34.0], [56.2, 34.0], [56.3, 34.0], [56.4, 34.0], [56.5, 34.0], [56.6, 34.0], [56.7, 34.0], [56.8, 34.0], [56.9, 34.0], [57.0, 34.0], [57.1, 34.0], [57.2, 34.0], [57.3, 34.0], [57.4, 34.0], [57.5, 34.0], [57.6, 34.0], [57.7, 34.0], [57.8, 34.0], [57.9, 34.0], [58.0, 34.0], [58.1, 34.0], [58.2, 34.0], [58.3, 34.0], [58.4, 34.0], [58.5, 34.0], [58.6, 34.0], [58.7, 34.0], [58.8, 34.0], [58.9, 34.0], [59.0, 34.0], [59.1, 34.0], [59.2, 34.0], [59.3, 34.0], [59.4, 34.0], [59.5, 34.0], [59.6, 35.0], [59.7, 35.0], [59.8, 35.0], [59.9, 35.0], [60.0, 35.0], [60.1, 35.0], [60.2, 35.0], [60.3, 35.0], [60.4, 35.0], [60.5, 35.0], [60.6, 35.0], [60.7, 35.0], [60.8, 35.0], [60.9, 35.0], [61.0, 35.0], [61.1, 35.0], [61.2, 35.0], [61.3, 35.0], [61.4, 35.0], [61.5, 35.0], [61.6, 35.0], [61.7, 35.0], [61.8, 35.0], [61.9, 35.0], [62.0, 35.0], [62.1, 35.0], [62.2, 35.0], [62.3, 35.0], [62.4, 35.0], [62.5, 35.0], [62.6, 35.0], [62.7, 35.0], [62.8, 35.0], [62.9, 35.0], [63.0, 35.0], [63.1, 35.0], [63.2, 35.0], [63.3, 35.0], [63.4, 35.0], [63.5, 35.0], [63.6, 35.0], [63.7, 36.0], [63.8, 36.0], [63.9, 36.0], [64.0, 36.0], [64.1, 36.0], [64.2, 36.0], [64.3, 36.0], [64.4, 36.0], [64.5, 36.0], [64.6, 36.0], [64.7, 36.0], [64.8, 36.0], [64.9, 36.0], [65.0, 36.0], [65.1, 36.0], [65.2, 36.0], [65.3, 36.0], [65.4, 36.0], [65.5, 36.0], [65.6, 36.0], [65.7, 36.0], [65.8, 36.0], [65.9, 36.0], [66.0, 36.0], [66.1, 36.0], [66.2, 36.0], [66.3, 36.0], [66.4, 36.0], [66.5, 36.0], [66.6, 36.0], [66.7, 36.0], [66.8, 36.0], [66.9, 36.0], [67.0, 36.0], [67.1, 36.0], [67.2, 36.0], [67.3, 36.0], [67.4, 36.0], [67.5, 36.0], [67.6, 36.0], [67.7, 36.0], [67.8, 36.0], [67.9, 36.0], [68.0, 36.0], [68.1, 36.0], [68.2, 37.0], [68.3, 37.0], [68.4, 37.0], [68.5, 37.0], [68.6, 37.0], [68.7, 37.0], [68.8, 37.0], [68.9, 37.0], [69.0, 37.0], [69.1, 37.0], [69.2, 37.0], [69.3, 37.0], [69.4, 37.0], [69.5, 37.0], [69.6, 37.0], [69.7, 37.0], [69.8, 37.0], [69.9, 37.0], [70.0, 37.0], [70.1, 37.0], [70.2, 37.0], [70.3, 37.0], [70.4, 37.0], [70.5, 37.0], [70.6, 37.0], [70.7, 37.0], [70.8, 37.0], [70.9, 37.0], [71.0, 37.0], [71.1, 37.0], [71.2, 37.0], [71.3, 37.0], [71.4, 37.0], [71.5, 37.0], [71.6, 37.0], [71.7, 37.0], [71.8, 37.0], [71.9, 37.0], [72.0, 37.0], [72.1, 38.0], [72.2, 38.0], [72.3, 38.0], [72.4, 38.0], [72.5, 38.0], [72.6, 38.0], [72.7, 38.0], [72.8, 38.0], [72.9, 38.0], [73.0, 38.0], [73.1, 38.0], [73.2, 38.0], [73.3, 38.0], [73.4, 38.0], [73.5, 38.0], [73.6, 38.0], [73.7, 38.0], [73.8, 38.0], [73.9, 38.0], [74.0, 38.0], [74.1, 38.0], [74.2, 38.0], [74.3, 38.0], [74.4, 38.0], [74.5, 38.0], [74.6, 38.0], [74.7, 38.0], [74.8, 38.0], [74.9, 38.0], [75.0, 38.0], [75.1, 38.0], [75.2, 38.0], [75.3, 38.0], [75.4, 38.0], [75.5, 38.0], [75.6, 38.0], [75.7, 38.0], [75.8, 39.0], [75.9, 39.0], [76.0, 39.0], [76.1, 39.0], [76.2, 39.0], [76.3, 39.0], [76.4, 39.0], [76.5, 39.0], [76.6, 39.0], [76.7, 39.0], [76.8, 39.0], [76.9, 39.0], [77.0, 39.0], [77.1, 39.0], [77.2, 39.0], [77.3, 39.0], [77.4, 39.0], [77.5, 39.0], [77.6, 39.0], [77.7, 39.0], [77.8, 39.0], [77.9, 39.0], [78.0, 39.0], [78.1, 39.0], [78.2, 39.0], [78.3, 39.0], [78.4, 39.0], [78.5, 39.0], [78.6, 39.0], [78.7, 39.0], [78.8, 39.0], [78.9, 39.0], [79.0, 39.0], [79.1, 39.0], [79.2, 40.0], [79.3, 40.0], [79.4, 40.0], [79.5, 40.0], [79.6, 40.0], [79.7, 40.0], [79.8, 40.0], [79.9, 40.0], [80.0, 40.0], [80.1, 40.0], [80.2, 40.0], [80.3, 40.0], [80.4, 40.0], [80.5, 40.0], [80.6, 40.0], [80.7, 40.0], [80.8, 40.0], [80.9, 40.0], [81.0, 40.0], [81.1, 40.0], [81.2, 40.0], [81.3, 40.0], [81.4, 40.0], [81.5, 40.0], [81.6, 40.0], [81.7, 40.0], [81.8, 40.0], [81.9, 40.0], [82.0, 40.0], [82.1, 40.0], [82.2, 40.0], [82.3, 40.0], [82.4, 41.0], [82.5, 41.0], [82.6, 41.0], [82.7, 41.0], [82.8, 41.0], [82.9, 41.0], [83.0, 41.0], [83.1, 41.0], [83.2, 41.0], [83.3, 41.0], [83.4, 41.0], [83.5, 41.0], [83.6, 41.0], [83.7, 41.0], [83.8, 41.0], [83.9, 41.0], [84.0, 41.0], [84.1, 41.0], [84.2, 41.0], [84.3, 41.0], [84.4, 41.0], [84.5, 41.0], [84.6, 41.0], [84.7, 41.0], [84.8, 41.0], [84.9, 41.0], [85.0, 42.0], [85.1, 42.0], [85.2, 42.0], [85.3, 42.0], [85.4, 42.0], [85.5, 42.0], [85.6, 42.0], [85.7, 42.0], [85.8, 42.0], [85.9, 42.0], [86.0, 42.0], [86.1, 42.0], [86.2, 42.0], [86.3, 42.0], [86.4, 42.0], [86.5, 42.0], [86.6, 42.0], [86.7, 42.0], [86.8, 42.0], [86.9, 42.0], [87.0, 42.0], [87.1, 43.0], [87.2, 43.0], [87.3, 43.0], [87.4, 43.0], [87.5, 43.0], [87.6, 43.0], [87.7, 43.0], [87.8, 43.0], [87.9, 43.0], [88.0, 43.0], [88.1, 43.0], [88.2, 43.0], [88.3, 43.0], [88.4, 43.0], [88.5, 43.0], [88.6, 43.0], [88.7, 44.0], [88.8, 44.0], [88.9, 44.0], [89.0, 44.0], [89.1, 44.0], [89.2, 44.0], [89.3, 44.0], [89.4, 44.0], [89.5, 44.0], [89.6, 44.0], [89.7, 44.0], [89.8, 44.0], [89.9, 44.0], [90.0, 44.0], [90.1, 44.0], [90.2, 45.0], [90.3, 45.0], [90.4, 45.0], [90.5, 45.0], [90.6, 45.0], [90.7, 45.0], [90.8, 45.0], [90.9, 45.0], [91.0, 45.0], [91.1, 45.0], [91.2, 45.0], [91.3, 45.0], [91.4, 46.0], [91.5, 46.0], [91.6, 46.0], [91.7, 46.0], [91.8, 46.0], [91.9, 46.0], [92.0, 46.0], [92.1, 46.0], [92.2, 47.0], [92.3, 47.0], [92.4, 47.0], [92.5, 47.0], [92.6, 47.0], [92.7, 47.0], [92.8, 47.0], [92.9, 48.0], [93.0, 48.0], [93.1, 48.0], [93.2, 48.0], [93.3, 48.0], [93.4, 48.0], [93.5, 49.0], [93.6, 49.0], [93.7, 49.0], [93.8, 49.0], [93.9, 49.0], [94.0, 50.0], [94.1, 50.0], [94.2, 50.0], [94.3, 50.0], [94.4, 51.0], [94.5, 51.0], [94.6, 51.0], [94.7, 52.0], [94.8, 52.0], [94.9, 53.0], [95.0, 53.0], [95.1, 54.0], [95.2, 54.0], [95.3, 55.0], [95.4, 56.0], [95.5, 56.0], [95.6, 57.0], [95.7, 58.0], [95.8, 59.0], [95.9, 60.0], [96.0, 61.0], [96.1, 63.0], [96.2, 64.0], [96.3, 65.0], [96.4, 66.0], [96.5, 67.0], [96.6, 69.0], [96.7, 70.0], [96.8, 72.0], [96.9, 73.0], [97.0, 75.0], [97.1, 76.0], [97.2, 78.0], [97.3, 80.0], [97.4, 82.0], [97.5, 84.0], [97.6, 85.0], [97.7, 87.0], [97.8, 89.0], [97.9, 91.0], [98.0, 92.0], [98.1, 94.0], [98.2, 95.0], [98.3, 97.0], [98.4, 100.0], [98.5, 103.0], [98.6, 106.0], [98.7, 110.0], [98.8, 114.0], [98.9, 120.0], [99.0, 130.0], [99.1, 256.0], [99.2, 276.0], [99.3, 286.0], [99.4, 294.0], [99.5, 303.0], [99.6, 313.0], [99.7, 326.0], [99.8, 338.0], [99.9, 757.0], [100.0, 10059.0]], "isOverall": false, "label": "GetMatches", "isController": true}, {"data": [[0.0, 9.0], [0.1, 9.0], [0.2, 10.0], [0.3, 10.0], [0.4, 10.0], [0.5, 10.0], [0.6, 10.0], [0.7, 10.0], [0.8, 10.0], [0.9, 10.0], [1.0, 11.0], [1.1, 11.0], [1.2, 11.0], [1.3, 11.0], [1.4, 11.0], [1.5, 11.0], [1.6, 11.0], [1.7, 11.0], [1.8, 11.0], [1.9, 11.0], [2.0, 11.0], [2.1, 11.0], [2.2, 11.0], [2.3, 11.0], [2.4, 11.0], [2.5, 11.0], [2.6, 11.0], [2.7, 11.0], [2.8, 11.0], [2.9, 11.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 12.0], [3.4, 12.0], [3.5, 12.0], [3.6, 12.0], [3.7, 12.0], [3.8, 12.0], [3.9, 12.0], [4.0, 12.0], [4.1, 12.0], [4.2, 12.0], [4.3, 12.0], [4.4, 12.0], [4.5, 12.0], [4.6, 12.0], [4.7, 12.0], [4.8, 12.0], [4.9, 12.0], [5.0, 12.0], [5.1, 12.0], [5.2, 12.0], [5.3, 12.0], [5.4, 12.0], [5.5, 12.0], [5.6, 12.0], [5.7, 12.0], [5.8, 12.0], [5.9, 12.0], [6.0, 12.0], [6.1, 12.0], [6.2, 12.0], [6.3, 12.0], [6.4, 12.0], [6.5, 12.0], [6.6, 12.0], [6.7, 12.0], [6.8, 12.0], [6.9, 12.0], [7.0, 13.0], [7.1, 13.0], [7.2, 13.0], [7.3, 13.0], [7.4, 13.0], [7.5, 13.0], [7.6, 13.0], [7.7, 13.0], [7.8, 13.0], [7.9, 13.0], [8.0, 13.0], [8.1, 13.0], [8.2, 13.0], [8.3, 13.0], [8.4, 13.0], [8.5, 13.0], [8.6, 13.0], [8.7, 13.0], [8.8, 13.0], [8.9, 13.0], [9.0, 13.0], [9.1, 13.0], [9.2, 13.0], [9.3, 13.0], [9.4, 13.0], [9.5, 13.0], [9.6, 13.0], [9.7, 13.0], [9.8, 13.0], [9.9, 13.0], [10.0, 13.0], [10.1, 13.0], [10.2, 13.0], [10.3, 13.0], [10.4, 13.0], [10.5, 13.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 13.0], [11.2, 13.0], [11.3, 13.0], [11.4, 13.0], [11.5, 13.0], [11.6, 13.0], [11.7, 13.0], [11.8, 13.0], [11.9, 13.0], [12.0, 13.0], [12.1, 13.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 14.0], [13.7, 14.0], [13.8, 14.0], [13.9, 14.0], [14.0, 14.0], [14.1, 14.0], [14.2, 14.0], [14.3, 14.0], [14.4, 14.0], [14.5, 14.0], [14.6, 14.0], [14.7, 14.0], [14.8, 14.0], [14.9, 14.0], [15.0, 14.0], [15.1, 14.0], [15.2, 14.0], [15.3, 14.0], [15.4, 14.0], [15.5, 14.0], [15.6, 14.0], [15.7, 14.0], [15.8, 14.0], [15.9, 14.0], [16.0, 14.0], [16.1, 14.0], [16.2, 14.0], [16.3, 14.0], [16.4, 14.0], [16.5, 14.0], [16.6, 14.0], [16.7, 14.0], [16.8, 14.0], [16.9, 15.0], [17.0, 15.0], [17.1, 15.0], [17.2, 15.0], [17.3, 15.0], [17.4, 15.0], [17.5, 15.0], [17.6, 15.0], [17.7, 15.0], [17.8, 15.0], [17.9, 15.0], [18.0, 15.0], [18.1, 15.0], [18.2, 15.0], [18.3, 15.0], [18.4, 15.0], [18.5, 15.0], [18.6, 15.0], [18.7, 15.0], [18.8, 15.0], [18.9, 15.0], [19.0, 15.0], [19.1, 15.0], [19.2, 15.0], [19.3, 15.0], [19.4, 15.0], [19.5, 15.0], [19.6, 15.0], [19.7, 15.0], [19.8, 15.0], [19.9, 15.0], [20.0, 15.0], [20.1, 15.0], [20.2, 15.0], [20.3, 15.0], [20.4, 15.0], [20.5, 15.0], [20.6, 15.0], [20.7, 15.0], [20.8, 15.0], [20.9, 15.0], [21.0, 15.0], [21.1, 15.0], [21.2, 15.0], [21.3, 15.0], [21.4, 15.0], [21.5, 15.0], [21.6, 15.0], [21.7, 15.0], [21.8, 15.0], [21.9, 15.0], [22.0, 15.0], [22.1, 15.0], [22.2, 16.0], [22.3, 16.0], [22.4, 16.0], [22.5, 16.0], [22.6, 16.0], [22.7, 16.0], [22.8, 16.0], [22.9, 16.0], [23.0, 16.0], [23.1, 16.0], [23.2, 16.0], [23.3, 16.0], [23.4, 16.0], [23.5, 16.0], [23.6, 16.0], [23.7, 16.0], [23.8, 16.0], [23.9, 16.0], [24.0, 16.0], [24.1, 16.0], [24.2, 16.0], [24.3, 16.0], [24.4, 16.0], [24.5, 16.0], [24.6, 16.0], [24.7, 16.0], [24.8, 16.0], [24.9, 16.0], [25.0, 16.0], [25.1, 16.0], [25.2, 16.0], [25.3, 16.0], [25.4, 16.0], [25.5, 16.0], [25.6, 16.0], [25.7, 16.0], [25.8, 16.0], [25.9, 16.0], [26.0, 16.0], [26.1, 16.0], [26.2, 16.0], [26.3, 16.0], [26.4, 16.0], [26.5, 16.0], [26.6, 16.0], [26.7, 16.0], [26.8, 16.0], [26.9, 16.0], [27.0, 17.0], [27.1, 17.0], [27.2, 17.0], [27.3, 17.0], [27.4, 17.0], [27.5, 17.0], [27.6, 17.0], [27.7, 17.0], [27.8, 17.0], [27.9, 17.0], [28.0, 17.0], [28.1, 17.0], [28.2, 17.0], [28.3, 17.0], [28.4, 17.0], [28.5, 17.0], [28.6, 17.0], [28.7, 17.0], [28.8, 17.0], [28.9, 17.0], [29.0, 17.0], [29.1, 17.0], [29.2, 17.0], [29.3, 17.0], [29.4, 17.0], [29.5, 17.0], [29.6, 17.0], [29.7, 17.0], [29.8, 17.0], [29.9, 17.0], [30.0, 17.0], [30.1, 17.0], [30.2, 17.0], [30.3, 17.0], [30.4, 17.0], [30.5, 17.0], [30.6, 17.0], [30.7, 17.0], [30.8, 17.0], [30.9, 17.0], [31.0, 17.0], [31.1, 17.0], [31.2, 17.0], [31.3, 17.0], [31.4, 17.0], [31.5, 17.0], [31.6, 17.0], [31.7, 17.0], [31.8, 17.0], [31.9, 17.0], [32.0, 17.0], [32.1, 17.0], [32.2, 18.0], [32.3, 18.0], [32.4, 18.0], [32.5, 18.0], [32.6, 18.0], [32.7, 18.0], [32.8, 18.0], [32.9, 18.0], [33.0, 18.0], [33.1, 18.0], [33.2, 18.0], [33.3, 18.0], [33.4, 18.0], [33.5, 18.0], [33.6, 18.0], [33.7, 18.0], [33.8, 18.0], [33.9, 18.0], [34.0, 18.0], [34.1, 18.0], [34.2, 18.0], [34.3, 18.0], [34.4, 18.0], [34.5, 18.0], [34.6, 18.0], [34.7, 18.0], [34.8, 18.0], [34.9, 18.0], [35.0, 18.0], [35.1, 18.0], [35.2, 18.0], [35.3, 18.0], [35.4, 18.0], [35.5, 18.0], [35.6, 18.0], [35.7, 18.0], [35.8, 18.0], [35.9, 18.0], [36.0, 18.0], [36.1, 18.0], [36.2, 18.0], [36.3, 18.0], [36.4, 18.0], [36.5, 18.0], [36.6, 18.0], [36.7, 18.0], [36.8, 18.0], [36.9, 18.0], [37.0, 18.0], [37.1, 18.0], [37.2, 19.0], [37.3, 19.0], [37.4, 19.0], [37.5, 19.0], [37.6, 19.0], [37.7, 19.0], [37.8, 19.0], [37.9, 19.0], [38.0, 19.0], [38.1, 19.0], [38.2, 19.0], [38.3, 19.0], [38.4, 19.0], [38.5, 19.0], [38.6, 19.0], [38.7, 19.0], [38.8, 19.0], [38.9, 19.0], [39.0, 19.0], [39.1, 19.0], [39.2, 19.0], [39.3, 19.0], [39.4, 19.0], [39.5, 19.0], [39.6, 19.0], [39.7, 19.0], [39.8, 19.0], [39.9, 19.0], [40.0, 19.0], [40.1, 19.0], [40.2, 19.0], [40.3, 19.0], [40.4, 19.0], [40.5, 19.0], [40.6, 19.0], [40.7, 19.0], [40.8, 19.0], [40.9, 19.0], [41.0, 19.0], [41.1, 19.0], [41.2, 19.0], [41.3, 19.0], [41.4, 19.0], [41.5, 19.0], [41.6, 19.0], [41.7, 19.0], [41.8, 19.0], [41.9, 19.0], [42.0, 19.0], [42.1, 19.0], [42.2, 19.0], [42.3, 20.0], [42.4, 20.0], [42.5, 20.0], [42.6, 20.0], [42.7, 20.0], [42.8, 20.0], [42.9, 20.0], [43.0, 20.0], [43.1, 20.0], [43.2, 20.0], [43.3, 20.0], [43.4, 20.0], [43.5, 20.0], [43.6, 20.0], [43.7, 20.0], [43.8, 20.0], [43.9, 20.0], [44.0, 20.0], [44.1, 20.0], [44.2, 20.0], [44.3, 20.0], [44.4, 20.0], [44.5, 20.0], [44.6, 20.0], [44.7, 20.0], [44.8, 20.0], [44.9, 20.0], [45.0, 20.0], [45.1, 20.0], [45.2, 20.0], [45.3, 20.0], [45.4, 20.0], [45.5, 20.0], [45.6, 20.0], [45.7, 20.0], [45.8, 20.0], [45.9, 20.0], [46.0, 20.0], [46.1, 20.0], [46.2, 20.0], [46.3, 20.0], [46.4, 20.0], [46.5, 20.0], [46.6, 20.0], [46.7, 20.0], [46.8, 20.0], [46.9, 20.0], [47.0, 20.0], [47.1, 20.0], [47.2, 21.0], [47.3, 21.0], [47.4, 21.0], [47.5, 21.0], [47.6, 21.0], [47.7, 21.0], [47.8, 21.0], [47.9, 21.0], [48.0, 21.0], [48.1, 21.0], [48.2, 21.0], [48.3, 21.0], [48.4, 21.0], [48.5, 21.0], [48.6, 21.0], [48.7, 21.0], [48.8, 21.0], [48.9, 21.0], [49.0, 21.0], [49.1, 21.0], [49.2, 21.0], [49.3, 21.0], [49.4, 21.0], [49.5, 21.0], [49.6, 21.0], [49.7, 21.0], [49.8, 21.0], [49.9, 21.0], [50.0, 21.0], [50.1, 21.0], [50.2, 21.0], [50.3, 21.0], [50.4, 21.0], [50.5, 21.0], [50.6, 21.0], [50.7, 21.0], [50.8, 21.0], [50.9, 21.0], [51.0, 21.0], [51.1, 21.0], [51.2, 21.0], [51.3, 21.0], [51.4, 21.0], [51.5, 21.0], [51.6, 21.0], [51.7, 21.0], [51.8, 21.0], [51.9, 21.0], [52.0, 21.0], [52.1, 21.0], [52.2, 21.0], [52.3, 22.0], [52.4, 22.0], [52.5, 22.0], [52.6, 22.0], [52.7, 22.0], [52.8, 22.0], [52.9, 22.0], [53.0, 22.0], [53.1, 22.0], [53.2, 22.0], [53.3, 22.0], [53.4, 22.0], [53.5, 22.0], [53.6, 22.0], [53.7, 22.0], [53.8, 22.0], [53.9, 22.0], [54.0, 22.0], [54.1, 22.0], [54.2, 22.0], [54.3, 22.0], [54.4, 22.0], [54.5, 22.0], [54.6, 22.0], [54.7, 22.0], [54.8, 22.0], [54.9, 22.0], [55.0, 22.0], [55.1, 22.0], [55.2, 22.0], [55.3, 22.0], [55.4, 22.0], [55.5, 22.0], [55.6, 22.0], [55.7, 22.0], [55.8, 22.0], [55.9, 22.0], [56.0, 22.0], [56.1, 22.0], [56.2, 22.0], [56.3, 22.0], [56.4, 22.0], [56.5, 22.0], [56.6, 22.0], [56.7, 22.0], [56.8, 22.0], [56.9, 22.0], [57.0, 22.0], [57.1, 23.0], [57.2, 23.0], [57.3, 23.0], [57.4, 23.0], [57.5, 23.0], [57.6, 23.0], [57.7, 23.0], [57.8, 23.0], [57.9, 23.0], [58.0, 23.0], [58.1, 23.0], [58.2, 23.0], [58.3, 23.0], [58.4, 23.0], [58.5, 23.0], [58.6, 23.0], [58.7, 23.0], [58.8, 23.0], [58.9, 23.0], [59.0, 23.0], [59.1, 23.0], [59.2, 23.0], [59.3, 23.0], [59.4, 23.0], [59.5, 23.0], [59.6, 23.0], [59.7, 23.0], [59.8, 23.0], [59.9, 23.0], [60.0, 23.0], [60.1, 23.0], [60.2, 23.0], [60.3, 23.0], [60.4, 23.0], [60.5, 23.0], [60.6, 23.0], [60.7, 23.0], [60.8, 23.0], [60.9, 23.0], [61.0, 23.0], [61.1, 23.0], [61.2, 23.0], [61.3, 23.0], [61.4, 23.0], [61.5, 23.0], [61.6, 24.0], [61.7, 24.0], [61.8, 24.0], [61.9, 24.0], [62.0, 24.0], [62.1, 24.0], [62.2, 24.0], [62.3, 24.0], [62.4, 24.0], [62.5, 24.0], [62.6, 24.0], [62.7, 24.0], [62.8, 24.0], [62.9, 24.0], [63.0, 24.0], [63.1, 24.0], [63.2, 24.0], [63.3, 24.0], [63.4, 24.0], [63.5, 24.0], [63.6, 24.0], [63.7, 24.0], [63.8, 24.0], [63.9, 24.0], [64.0, 24.0], [64.1, 24.0], [64.2, 24.0], [64.3, 24.0], [64.4, 24.0], [64.5, 24.0], [64.6, 24.0], [64.7, 24.0], [64.8, 24.0], [64.9, 24.0], [65.0, 24.0], [65.1, 24.0], [65.2, 24.0], [65.3, 24.0], [65.4, 24.0], [65.5, 24.0], [65.6, 24.0], [65.7, 24.0], [65.8, 24.0], [65.9, 24.0], [66.0, 24.0], [66.1, 24.0], [66.2, 25.0], [66.3, 25.0], [66.4, 25.0], [66.5, 25.0], [66.6, 25.0], [66.7, 25.0], [66.8, 25.0], [66.9, 25.0], [67.0, 25.0], [67.1, 25.0], [67.2, 25.0], [67.3, 25.0], [67.4, 25.0], [67.5, 25.0], [67.6, 25.0], [67.7, 25.0], [67.8, 25.0], [67.9, 25.0], [68.0, 25.0], [68.1, 25.0], [68.2, 25.0], [68.3, 25.0], [68.4, 25.0], [68.5, 25.0], [68.6, 25.0], [68.7, 25.0], [68.8, 25.0], [68.9, 25.0], [69.0, 25.0], [69.1, 25.0], [69.2, 25.0], [69.3, 25.0], [69.4, 25.0], [69.5, 25.0], [69.6, 25.0], [69.7, 25.0], [69.8, 25.0], [69.9, 25.0], [70.0, 25.0], [70.1, 25.0], [70.2, 25.0], [70.3, 25.0], [70.4, 25.0], [70.5, 25.0], [70.6, 26.0], [70.7, 26.0], [70.8, 26.0], [70.9, 26.0], [71.0, 26.0], [71.1, 26.0], [71.2, 26.0], [71.3, 26.0], [71.4, 26.0], [71.5, 26.0], [71.6, 26.0], [71.7, 26.0], [71.8, 26.0], [71.9, 26.0], [72.0, 26.0], [72.1, 26.0], [72.2, 26.0], [72.3, 26.0], [72.4, 26.0], [72.5, 26.0], [72.6, 26.0], [72.7, 26.0], [72.8, 26.0], [72.9, 26.0], [73.0, 26.0], [73.1, 26.0], [73.2, 26.0], [73.3, 26.0], [73.4, 27.0], [73.5, 27.0], [73.6, 27.0], [73.7, 27.0], [73.8, 27.0], [73.9, 27.0], [74.0, 27.0], [74.1, 27.0], [74.2, 27.0], [74.3, 27.0], [74.4, 27.0], [74.5, 27.0], [74.6, 27.0], [74.7, 27.0], [74.8, 27.0], [74.9, 27.0], [75.0, 27.0], [75.1, 27.0], [75.2, 27.0], [75.3, 27.0], [75.4, 27.0], [75.5, 27.0], [75.6, 27.0], [75.7, 27.0], [75.8, 27.0], [75.9, 27.0], [76.0, 27.0], [76.1, 27.0], [76.2, 27.0], [76.3, 27.0], [76.4, 27.0], [76.5, 28.0], [76.6, 28.0], [76.7, 28.0], [76.8, 28.0], [76.9, 28.0], [77.0, 28.0], [77.1, 28.0], [77.2, 28.0], [77.3, 28.0], [77.4, 28.0], [77.5, 28.0], [77.6, 28.0], [77.7, 28.0], [77.8, 28.0], [77.9, 28.0], [78.0, 28.0], [78.1, 28.0], [78.2, 28.0], [78.3, 28.0], [78.4, 28.0], [78.5, 28.0], [78.6, 28.0], [78.7, 28.0], [78.8, 28.0], [78.9, 28.0], [79.0, 29.0], [79.1, 29.0], [79.2, 29.0], [79.3, 29.0], [79.4, 29.0], [79.5, 29.0], [79.6, 29.0], [79.7, 29.0], [79.8, 29.0], [79.9, 29.0], [80.0, 29.0], [80.1, 29.0], [80.2, 29.0], [80.3, 29.0], [80.4, 29.0], [80.5, 29.0], [80.6, 29.0], [80.7, 29.0], [80.8, 29.0], [80.9, 29.0], [81.0, 29.0], [81.1, 29.0], [81.2, 30.0], [81.3, 30.0], [81.4, 30.0], [81.5, 30.0], [81.6, 30.0], [81.7, 30.0], [81.8, 30.0], [81.9, 30.0], [82.0, 30.0], [82.1, 30.0], [82.2, 30.0], [82.3, 30.0], [82.4, 30.0], [82.5, 30.0], [82.6, 30.0], [82.7, 30.0], [82.8, 30.0], [82.9, 30.0], [83.0, 30.0], [83.1, 30.0], [83.2, 30.0], [83.3, 30.0], [83.4, 30.0], [83.5, 31.0], [83.6, 31.0], [83.7, 31.0], [83.8, 31.0], [83.9, 31.0], [84.0, 31.0], [84.1, 31.0], [84.2, 31.0], [84.3, 31.0], [84.4, 31.0], [84.5, 31.0], [84.6, 31.0], [84.7, 31.0], [84.8, 31.0], [84.9, 31.0], [85.0, 31.0], [85.1, 31.0], [85.2, 31.0], [85.3, 31.0], [85.4, 31.0], [85.5, 31.0], [85.6, 32.0], [85.7, 32.0], [85.8, 32.0], [85.9, 32.0], [86.0, 32.0], [86.1, 32.0], [86.2, 32.0], [86.3, 32.0], [86.4, 32.0], [86.5, 32.0], [86.6, 32.0], [86.7, 32.0], [86.8, 32.0], [86.9, 32.0], [87.0, 32.0], [87.1, 33.0], [87.2, 33.0], [87.3, 33.0], [87.4, 33.0], [87.5, 33.0], [87.6, 33.0], [87.7, 33.0], [87.8, 33.0], [87.9, 33.0], [88.0, 33.0], [88.1, 33.0], [88.2, 33.0], [88.3, 33.0], [88.4, 33.0], [88.5, 33.0], [88.6, 34.0], [88.7, 34.0], [88.8, 34.0], [88.9, 34.0], [89.0, 34.0], [89.1, 34.0], [89.2, 34.0], [89.3, 34.0], [89.4, 34.0], [89.5, 34.0], [89.6, 35.0], [89.7, 35.0], [89.8, 35.0], [89.9, 35.0], [90.0, 35.0], [90.1, 35.0], [90.2, 35.0], [90.3, 35.0], [90.4, 36.0], [90.5, 36.0], [90.6, 36.0], [90.7, 36.0], [90.8, 36.0], [90.9, 36.0], [91.0, 37.0], [91.1, 37.0], [91.2, 37.0], [91.3, 37.0], [91.4, 37.0], [91.5, 37.0], [91.6, 38.0], [91.7, 38.0], [91.8, 38.0], [91.9, 38.0], [92.0, 39.0], [92.1, 39.0], [92.2, 40.0], [92.3, 40.0], [92.4, 41.0], [92.5, 41.0], [92.6, 42.0], [92.7, 42.0], [92.8, 43.0], [92.9, 44.0], [93.0, 44.0], [93.1, 45.0], [93.2, 46.0], [93.3, 47.0], [93.4, 47.0], [93.5, 48.0], [93.6, 49.0], [93.7, 50.0], [93.8, 51.0], [93.9, 52.0], [94.0, 52.0], [94.1, 53.0], [94.2, 54.0], [94.3, 55.0], [94.4, 55.0], [94.5, 56.0], [94.6, 57.0], [94.7, 58.0], [94.8, 59.0], [94.9, 59.0], [95.0, 60.0], [95.1, 61.0], [95.2, 62.0], [95.3, 64.0], [95.4, 65.0], [95.5, 65.0], [95.6, 66.0], [95.7, 67.0], [95.8, 68.0], [95.9, 70.0], [96.0, 71.0], [96.1, 73.0], [96.2, 74.0], [96.3, 75.0], [96.4, 77.0], [96.5, 78.0], [96.6, 80.0], [96.7, 82.0], [96.8, 83.0], [96.9, 86.0], [97.0, 88.0], [97.1, 89.0], [97.2, 92.0], [97.3, 94.0], [97.4, 97.0], [97.5, 99.0], [97.6, 101.0], [97.7, 105.0], [97.8, 107.0], [97.9, 113.0], [98.0, 121.0], [98.1, 237.0], [98.2, 251.0], [98.3, 257.0], [98.4, 268.0], [98.5, 274.0], [98.6, 283.0], [98.7, 287.0], [98.8, 290.0], [98.9, 293.0], [99.0, 300.0], [99.1, 304.0], [99.2, 311.0], [99.3, 316.0], [99.4, 324.0], [99.5, 327.0], [99.6, 332.0], [99.7, 349.0], [99.8, 716.0], [99.9, 1043.0]], "isOverall": false, "label": "Post", "isController": true}, {"data": [[0.0, 9.0], [0.1, 10.0], [0.2, 10.0], [0.3, 10.0], [0.4, 10.0], [0.5, 10.0], [0.6, 11.0], [0.7, 11.0], [0.8, 11.0], [0.9, 11.0], [1.0, 11.0], [1.1, 11.0], [1.2, 11.0], [1.3, 11.0], [1.4, 11.0], [1.5, 11.0], [1.6, 11.0], [1.7, 11.0], [1.8, 12.0], [1.9, 12.0], [2.0, 12.0], [2.1, 12.0], [2.2, 12.0], [2.3, 12.0], [2.4, 12.0], [2.5, 12.0], [2.6, 12.0], [2.7, 12.0], [2.8, 12.0], [2.9, 12.0], [3.0, 12.0], [3.1, 12.0], [3.2, 12.0], [3.3, 12.0], [3.4, 12.0], [3.5, 12.0], [3.6, 12.0], [3.7, 13.0], [3.8, 13.0], [3.9, 13.0], [4.0, 13.0], [4.1, 13.0], [4.2, 13.0], [4.3, 13.0], [4.4, 13.0], [4.5, 13.0], [4.6, 13.0], [4.7, 13.0], [4.8, 13.0], [4.9, 13.0], [5.0, 13.0], [5.1, 13.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 13.0], [5.6, 14.0], [5.7, 14.0], [5.8, 14.0], [5.9, 14.0], [6.0, 14.0], [6.1, 14.0], [6.2, 14.0], [6.3, 14.0], [6.4, 14.0], [6.5, 14.0], [6.6, 14.0], [6.7, 14.0], [6.8, 14.0], [6.9, 14.0], [7.0, 14.0], [7.1, 14.0], [7.2, 14.0], [7.3, 14.0], [7.4, 14.0], [7.5, 14.0], [7.6, 15.0], [7.7, 15.0], [7.8, 15.0], [7.9, 15.0], [8.0, 15.0], [8.1, 15.0], [8.2, 15.0], [8.3, 15.0], [8.4, 15.0], [8.5, 15.0], [8.6, 15.0], [8.7, 15.0], [8.8, 15.0], [8.9, 15.0], [9.0, 15.0], [9.1, 15.0], [9.2, 15.0], [9.3, 16.0], [9.4, 16.0], [9.5, 16.0], [9.6, 16.0], [9.7, 16.0], [9.8, 16.0], [9.9, 16.0], [10.0, 16.0], [10.1, 16.0], [10.2, 16.0], [10.3, 16.0], [10.4, 16.0], [10.5, 16.0], [10.6, 16.0], [10.7, 16.0], [10.8, 16.0], [10.9, 16.0], [11.0, 16.0], [11.1, 17.0], [11.2, 17.0], [11.3, 17.0], [11.4, 17.0], [11.5, 17.0], [11.6, 17.0], [11.7, 17.0], [11.8, 17.0], [11.9, 17.0], [12.0, 17.0], [12.1, 17.0], [12.2, 17.0], [12.3, 17.0], [12.4, 17.0], [12.5, 17.0], [12.6, 17.0], [12.7, 17.0], [12.8, 18.0], [12.9, 18.0], [13.0, 18.0], [13.1, 18.0], [13.2, 18.0], [13.3, 18.0], [13.4, 18.0], [13.5, 18.0], [13.6, 18.0], [13.7, 18.0], [13.8, 18.0], [13.9, 18.0], [14.0, 18.0], [14.1, 18.0], [14.2, 18.0], [14.3, 18.0], [14.4, 18.0], [14.5, 19.0], [14.6, 19.0], [14.7, 19.0], [14.8, 19.0], [14.9, 19.0], [15.0, 19.0], [15.1, 19.0], [15.2, 19.0], [15.3, 19.0], [15.4, 19.0], [15.5, 19.0], [15.6, 19.0], [15.7, 19.0], [15.8, 19.0], [15.9, 19.0], [16.0, 19.0], [16.1, 20.0], [16.2, 20.0], [16.3, 20.0], [16.4, 20.0], [16.5, 20.0], [16.6, 20.0], [16.7, 20.0], [16.8, 20.0], [16.9, 20.0], [17.0, 20.0], [17.1, 20.0], [17.2, 20.0], [17.3, 20.0], [17.4, 20.0], [17.5, 20.0], [17.6, 21.0], [17.7, 21.0], [17.8, 21.0], [17.9, 21.0], [18.0, 21.0], [18.1, 21.0], [18.2, 21.0], [18.3, 21.0], [18.4, 21.0], [18.5, 21.0], [18.6, 21.0], [18.7, 21.0], [18.8, 21.0], [18.9, 21.0], [19.0, 21.0], [19.1, 21.0], [19.2, 22.0], [19.3, 22.0], [19.4, 22.0], [19.5, 22.0], [19.6, 22.0], [19.7, 22.0], [19.8, 22.0], [19.9, 22.0], [20.0, 22.0], [20.1, 22.0], [20.2, 22.0], [20.3, 22.0], [20.4, 22.0], [20.5, 22.0], [20.6, 22.0], [20.7, 22.0], [20.8, 22.0], [20.9, 23.0], [21.0, 23.0], [21.1, 23.0], [21.2, 23.0], [21.3, 23.0], [21.4, 23.0], [21.5, 23.0], [21.6, 23.0], [21.7, 23.0], [21.8, 23.0], [21.9, 23.0], [22.0, 23.0], [22.1, 23.0], [22.2, 23.0], [22.3, 23.0], [22.4, 23.0], [22.5, 23.0], [22.6, 24.0], [22.7, 24.0], [22.8, 24.0], [22.9, 24.0], [23.0, 24.0], [23.1, 24.0], [23.2, 24.0], [23.3, 24.0], [23.4, 24.0], [23.5, 24.0], [23.6, 24.0], [23.7, 24.0], [23.8, 24.0], [23.9, 24.0], [24.0, 24.0], [24.1, 24.0], [24.2, 24.0], [24.3, 25.0], [24.4, 25.0], [24.5, 25.0], [24.6, 25.0], [24.7, 25.0], [24.8, 25.0], [24.9, 25.0], [25.0, 25.0], [25.1, 25.0], [25.2, 25.0], [25.3, 25.0], [25.4, 25.0], [25.5, 25.0], [25.6, 25.0], [25.7, 25.0], [25.8, 25.0], [25.9, 25.0], [26.0, 25.0], [26.1, 26.0], [26.2, 26.0], [26.3, 26.0], [26.4, 26.0], [26.5, 26.0], [26.6, 26.0], [26.7, 26.0], [26.8, 26.0], [26.9, 26.0], [27.0, 26.0], [27.1, 26.0], [27.2, 26.0], [27.3, 26.0], [27.4, 26.0], [27.5, 26.0], [27.6, 26.0], [27.7, 26.0], [27.8, 26.0], [27.9, 26.0], [28.0, 27.0], [28.1, 27.0], [28.2, 27.0], [28.3, 27.0], [28.4, 27.0], [28.5, 27.0], [28.6, 27.0], [28.7, 27.0], [28.8, 27.0], [28.9, 27.0], [29.0, 27.0], [29.1, 27.0], [29.2, 27.0], [29.3, 27.0], [29.4, 27.0], [29.5, 27.0], [29.6, 27.0], [29.7, 27.0], [29.8, 27.0], [29.9, 28.0], [30.0, 28.0], [30.1, 28.0], [30.2, 28.0], [30.3, 28.0], [30.4, 28.0], [30.5, 28.0], [30.6, 28.0], [30.7, 28.0], [30.8, 28.0], [30.9, 28.0], [31.0, 28.0], [31.1, 28.0], [31.2, 28.0], [31.3, 28.0], [31.4, 28.0], [31.5, 28.0], [31.6, 28.0], [31.7, 28.0], [31.8, 28.0], [31.9, 29.0], [32.0, 29.0], [32.1, 29.0], [32.2, 29.0], [32.3, 29.0], [32.4, 29.0], [32.5, 29.0], [32.6, 29.0], [32.7, 29.0], [32.8, 29.0], [32.9, 29.0], [33.0, 29.0], [33.1, 29.0], [33.2, 29.0], [33.3, 29.0], [33.4, 29.0], [33.5, 29.0], [33.6, 29.0], [33.7, 30.0], [33.8, 30.0], [33.9, 30.0], [34.0, 30.0], [34.1, 30.0], [34.2, 30.0], [34.3, 30.0], [34.4, 30.0], [34.5, 30.0], [34.6, 30.0], [34.7, 30.0], [34.8, 30.0], [34.9, 30.0], [35.0, 30.0], [35.1, 30.0], [35.2, 30.0], [35.3, 30.0], [35.4, 30.0], [35.5, 31.0], [35.6, 31.0], [35.7, 31.0], [35.8, 31.0], [35.9, 31.0], [36.0, 31.0], [36.1, 31.0], [36.2, 31.0], [36.3, 31.0], [36.4, 31.0], [36.5, 31.0], [36.6, 31.0], [36.7, 31.0], [36.8, 31.0], [36.9, 31.0], [37.0, 31.0], [37.1, 31.0], [37.2, 31.0], [37.3, 31.0], [37.4, 31.0], [37.5, 32.0], [37.6, 32.0], [37.7, 32.0], [37.8, 32.0], [37.9, 32.0], [38.0, 32.0], [38.1, 32.0], [38.2, 32.0], [38.3, 32.0], [38.4, 32.0], [38.5, 32.0], [38.6, 32.0], [38.7, 32.0], [38.8, 32.0], [38.9, 32.0], [39.0, 32.0], [39.1, 32.0], [39.2, 32.0], [39.3, 33.0], [39.4, 33.0], [39.5, 33.0], [39.6, 33.0], [39.7, 33.0], [39.8, 33.0], [39.9, 33.0], [40.0, 33.0], [40.1, 33.0], [40.2, 33.0], [40.3, 33.0], [40.4, 33.0], [40.5, 33.0], [40.6, 33.0], [40.7, 33.0], [40.8, 33.0], [40.9, 33.0], [41.0, 33.0], [41.1, 33.0], [41.2, 33.0], [41.3, 33.0], [41.4, 34.0], [41.5, 34.0], [41.6, 34.0], [41.7, 34.0], [41.8, 34.0], [41.9, 34.0], [42.0, 34.0], [42.1, 34.0], [42.2, 34.0], [42.3, 34.0], [42.4, 34.0], [42.5, 34.0], [42.6, 34.0], [42.7, 34.0], [42.8, 34.0], [42.9, 34.0], [43.0, 34.0], [43.1, 34.0], [43.2, 34.0], [43.3, 35.0], [43.4, 35.0], [43.5, 35.0], [43.6, 35.0], [43.7, 35.0], [43.8, 35.0], [43.9, 35.0], [44.0, 35.0], [44.1, 35.0], [44.2, 35.0], [44.3, 35.0], [44.4, 35.0], [44.5, 35.0], [44.6, 35.0], [44.7, 35.0], [44.8, 35.0], [44.9, 35.0], [45.0, 35.0], [45.1, 35.0], [45.2, 35.0], [45.3, 35.0], [45.4, 35.0], [45.5, 36.0], [45.6, 36.0], [45.7, 36.0], [45.8, 36.0], [45.9, 36.0], [46.0, 36.0], [46.1, 36.0], [46.2, 36.0], [46.3, 36.0], [46.4, 36.0], [46.5, 36.0], [46.6, 36.0], [46.7, 36.0], [46.8, 36.0], [46.9, 36.0], [47.0, 36.0], [47.1, 36.0], [47.2, 36.0], [47.3, 36.0], [47.4, 36.0], [47.5, 37.0], [47.6, 37.0], [47.7, 37.0], [47.8, 37.0], [47.9, 37.0], [48.0, 37.0], [48.1, 37.0], [48.2, 37.0], [48.3, 37.0], [48.4, 37.0], [48.5, 37.0], [48.6, 37.0], [48.7, 37.0], [48.8, 37.0], [48.9, 37.0], [49.0, 37.0], [49.1, 37.0], [49.2, 37.0], [49.3, 37.0], [49.4, 37.0], [49.5, 37.0], [49.6, 37.0], [49.7, 38.0], [49.8, 38.0], [49.9, 38.0], [50.0, 38.0], [50.1, 38.0], [50.2, 38.0], [50.3, 38.0], [50.4, 38.0], [50.5, 38.0], [50.6, 38.0], [50.7, 38.0], [50.8, 38.0], [50.9, 38.0], [51.0, 38.0], [51.1, 38.0], [51.2, 38.0], [51.3, 38.0], [51.4, 38.0], [51.5, 38.0], [51.6, 38.0], [51.7, 39.0], [51.8, 39.0], [51.9, 39.0], [52.0, 39.0], [52.1, 39.0], [52.2, 39.0], [52.3, 39.0], [52.4, 39.0], [52.5, 39.0], [52.6, 39.0], [52.7, 39.0], [52.8, 39.0], [52.9, 39.0], [53.0, 39.0], [53.1, 39.0], [53.2, 39.0], [53.3, 39.0], [53.4, 39.0], [53.5, 39.0], [53.6, 39.0], [53.7, 39.0], [53.8, 40.0], [53.9, 40.0], [54.0, 40.0], [54.1, 40.0], [54.2, 40.0], [54.3, 40.0], [54.4, 40.0], [54.5, 40.0], [54.6, 40.0], [54.7, 40.0], [54.8, 40.0], [54.9, 40.0], [55.0, 40.0], [55.1, 40.0], [55.2, 40.0], [55.3, 40.0], [55.4, 40.0], [55.5, 40.0], [55.6, 40.0], [55.7, 40.0], [55.8, 40.0], [55.9, 41.0], [56.0, 41.0], [56.1, 41.0], [56.2, 41.0], [56.3, 41.0], [56.4, 41.0], [56.5, 41.0], [56.6, 41.0], [56.7, 41.0], [56.8, 41.0], [56.9, 41.0], [57.0, 41.0], [57.1, 41.0], [57.2, 41.0], [57.3, 41.0], [57.4, 41.0], [57.5, 41.0], [57.6, 41.0], [57.7, 41.0], [57.8, 41.0], [57.9, 42.0], [58.0, 42.0], [58.1, 42.0], [58.2, 42.0], [58.3, 42.0], [58.4, 42.0], [58.5, 42.0], [58.6, 42.0], [58.7, 42.0], [58.8, 42.0], [58.9, 42.0], [59.0, 42.0], [59.1, 42.0], [59.2, 42.0], [59.3, 42.0], [59.4, 42.0], [59.5, 42.0], [59.6, 42.0], [59.7, 42.0], [59.8, 42.0], [59.9, 42.0], [60.0, 42.0], [60.1, 42.0], [60.2, 42.0], [60.3, 43.0], [60.4, 43.0], [60.5, 43.0], [60.6, 43.0], [60.7, 43.0], [60.8, 43.0], [60.9, 43.0], [61.0, 43.0], [61.1, 43.0], [61.2, 43.0], [61.3, 43.0], [61.4, 43.0], [61.5, 43.0], [61.6, 43.0], [61.7, 43.0], [61.8, 43.0], [61.9, 43.0], [62.0, 43.0], [62.1, 43.0], [62.2, 43.0], [62.3, 43.0], [62.4, 43.0], [62.5, 43.0], [62.6, 44.0], [62.7, 44.0], [62.8, 44.0], [62.9, 44.0], [63.0, 44.0], [63.1, 44.0], [63.2, 44.0], [63.3, 44.0], [63.4, 44.0], [63.5, 44.0], [63.6, 44.0], [63.7, 44.0], [63.8, 44.0], [63.9, 44.0], [64.0, 44.0], [64.1, 44.0], [64.2, 44.0], [64.3, 44.0], [64.4, 44.0], [64.5, 44.0], [64.6, 44.0], [64.7, 44.0], [64.8, 45.0], [64.9, 45.0], [65.0, 45.0], [65.1, 45.0], [65.2, 45.0], [65.3, 45.0], [65.4, 45.0], [65.5, 45.0], [65.6, 45.0], [65.7, 45.0], [65.8, 45.0], [65.9, 45.0], [66.0, 45.0], [66.1, 45.0], [66.2, 45.0], [66.3, 45.0], [66.4, 45.0], [66.5, 45.0], [66.6, 45.0], [66.7, 45.0], [66.8, 45.0], [66.9, 45.0], [67.0, 46.0], [67.1, 46.0], [67.2, 46.0], [67.3, 46.0], [67.4, 46.0], [67.5, 46.0], [67.6, 46.0], [67.7, 46.0], [67.8, 46.0], [67.9, 46.0], [68.0, 46.0], [68.1, 46.0], [68.2, 46.0], [68.3, 46.0], [68.4, 46.0], [68.5, 46.0], [68.6, 46.0], [68.7, 46.0], [68.8, 46.0], [68.9, 47.0], [69.0, 47.0], [69.1, 47.0], [69.2, 47.0], [69.3, 47.0], [69.4, 47.0], [69.5, 47.0], [69.6, 47.0], [69.7, 47.0], [69.8, 47.0], [69.9, 47.0], [70.0, 47.0], [70.1, 47.0], [70.2, 47.0], [70.3, 47.0], [70.4, 47.0], [70.5, 47.0], [70.6, 47.0], [70.7, 47.0], [70.8, 47.0], [70.9, 48.0], [71.0, 48.0], [71.1, 48.0], [71.2, 48.0], [71.3, 48.0], [71.4, 48.0], [71.5, 48.0], [71.6, 48.0], [71.7, 48.0], [71.8, 48.0], [71.9, 48.0], [72.0, 48.0], [72.1, 48.0], [72.2, 48.0], [72.3, 48.0], [72.4, 48.0], [72.5, 48.0], [72.6, 48.0], [72.7, 48.0], [72.8, 48.0], [72.9, 49.0], [73.0, 49.0], [73.1, 49.0], [73.2, 49.0], [73.3, 49.0], [73.4, 49.0], [73.5, 49.0], [73.6, 49.0], [73.7, 49.0], [73.8, 49.0], [73.9, 49.0], [74.0, 49.0], [74.1, 49.0], [74.2, 49.0], [74.3, 49.0], [74.4, 49.0], [74.5, 49.0], [74.6, 49.0], [74.7, 49.0], [74.8, 50.0], [74.9, 50.0], [75.0, 50.0], [75.1, 50.0], [75.2, 50.0], [75.3, 50.0], [75.4, 50.0], [75.5, 50.0], [75.6, 50.0], [75.7, 50.0], [75.8, 50.0], [75.9, 50.0], [76.0, 50.0], [76.1, 50.0], [76.2, 50.0], [76.3, 50.0], [76.4, 50.0], [76.5, 50.0], [76.6, 50.0], [76.7, 50.0], [76.8, 51.0], [76.9, 51.0], [77.0, 51.0], [77.1, 51.0], [77.2, 51.0], [77.3, 51.0], [77.4, 51.0], [77.5, 51.0], [77.6, 51.0], [77.7, 51.0], [77.8, 51.0], [77.9, 51.0], [78.0, 51.0], [78.1, 51.0], [78.2, 51.0], [78.3, 51.0], [78.4, 51.0], [78.5, 51.0], [78.6, 52.0], [78.7, 52.0], [78.8, 52.0], [78.9, 52.0], [79.0, 52.0], [79.1, 52.0], [79.2, 52.0], [79.3, 52.0], [79.4, 52.0], [79.5, 52.0], [79.6, 52.0], [79.7, 52.0], [79.8, 52.0], [79.9, 52.0], [80.0, 52.0], [80.1, 52.0], [80.2, 52.0], [80.3, 52.0], [80.4, 52.0], [80.5, 52.0], [80.6, 53.0], [80.7, 53.0], [80.8, 53.0], [80.9, 53.0], [81.0, 53.0], [81.1, 53.0], [81.2, 53.0], [81.3, 53.0], [81.4, 53.0], [81.5, 53.0], [81.6, 53.0], [81.7, 53.0], [81.8, 53.0], [81.9, 53.0], [82.0, 53.0], [82.1, 53.0], [82.2, 54.0], [82.3, 54.0], [82.4, 54.0], [82.5, 54.0], [82.6, 54.0], [82.7, 54.0], [82.8, 54.0], [82.9, 54.0], [83.0, 54.0], [83.1, 54.0], [83.2, 54.0], [83.3, 54.0], [83.4, 54.0], [83.5, 54.0], [83.6, 54.0], [83.7, 55.0], [83.8, 55.0], [83.9, 55.0], [84.0, 55.0], [84.1, 55.0], [84.2, 55.0], [84.3, 55.0], [84.4, 55.0], [84.5, 55.0], [84.6, 55.0], [84.7, 55.0], [84.8, 55.0], [84.9, 55.0], [85.0, 55.0], [85.1, 55.0], [85.2, 56.0], [85.3, 56.0], [85.4, 56.0], [85.5, 56.0], [85.6, 56.0], [85.7, 56.0], [85.8, 56.0], [85.9, 56.0], [86.0, 56.0], [86.1, 56.0], [86.2, 56.0], [86.3, 56.0], [86.4, 56.0], [86.5, 57.0], [86.6, 57.0], [86.7, 57.0], [86.8, 57.0], [86.9, 57.0], [87.0, 57.0], [87.1, 57.0], [87.2, 57.0], [87.3, 57.0], [87.4, 57.0], [87.5, 57.0], [87.6, 57.0], [87.7, 58.0], [87.8, 58.0], [87.9, 58.0], [88.0, 58.0], [88.1, 58.0], [88.2, 58.0], [88.3, 58.0], [88.4, 58.0], [88.5, 58.0], [88.6, 58.0], [88.7, 58.0], [88.8, 59.0], [88.9, 59.0], [89.0, 59.0], [89.1, 59.0], [89.2, 59.0], [89.3, 59.0], [89.4, 59.0], [89.5, 59.0], [89.6, 59.0], [89.7, 59.0], [89.8, 60.0], [89.9, 60.0], [90.0, 60.0], [90.1, 60.0], [90.2, 60.0], [90.3, 60.0], [90.4, 60.0], [90.5, 60.0], [90.6, 60.0], [90.7, 61.0], [90.8, 61.0], [90.9, 61.0], [91.0, 61.0], [91.1, 61.0], [91.2, 61.0], [91.3, 61.0], [91.4, 61.0], [91.5, 62.0], [91.6, 62.0], [91.7, 62.0], [91.8, 62.0], [91.9, 62.0], [92.0, 62.0], [92.1, 62.0], [92.2, 62.0], [92.3, 63.0], [92.4, 63.0], [92.5, 63.0], [92.6, 63.0], [92.7, 63.0], [92.8, 63.0], [92.9, 64.0], [93.0, 64.0], [93.1, 64.0], [93.2, 64.0], [93.3, 64.0], [93.4, 65.0], [93.5, 65.0], [93.6, 65.0], [93.7, 65.0], [93.8, 65.0], [93.9, 65.0], [94.0, 66.0], [94.1, 66.0], [94.2, 66.0], [94.3, 66.0], [94.4, 66.0], [94.5, 67.0], [94.6, 67.0], [94.7, 67.0], [94.8, 67.0], [94.9, 68.0], [95.0, 68.0], [95.1, 68.0], [95.2, 69.0], [95.3, 69.0], [95.4, 69.0], [95.5, 70.0], [95.6, 70.0], [95.7, 71.0], [95.8, 71.0], [95.9, 72.0], [96.0, 73.0], [96.1, 74.0], [96.2, 75.0], [96.3, 76.0], [96.4, 77.0], [96.5, 78.0], [96.6, 80.0], [96.7, 81.0], [96.8, 83.0], [96.9, 85.0], [97.0, 87.0], [97.1, 89.0], [97.2, 91.0], [97.3, 93.0], [97.4, 95.0], [97.5, 97.0], [97.6, 100.0], [97.7, 102.0], [97.8, 104.0], [97.9, 106.0], [98.0, 108.0], [98.1, 111.0], [98.2, 114.0], [98.3, 117.0], [98.4, 120.0], [98.5, 123.0], [98.6, 127.0], [98.7, 130.0], [98.8, 136.0], [98.9, 147.0], [99.0, 261.0], [99.1, 277.0], [99.2, 288.0], [99.3, 297.0], [99.4, 308.0], [99.5, 316.0], [99.6, 325.0], [99.7, 334.0], [99.8, 349.0], [99.9, 771.0], [100.0, 10060.0]], "isOverall": false, "label": "GetStats", "isController": true}, {"data": [[0.0, 9.0], [0.1, 10.0], [0.2, 10.0], [0.3, 10.0], [0.4, 10.0], [0.5, 10.0], [0.6, 11.0], [0.7, 11.0], [0.8, 11.0], [0.9, 11.0], [1.0, 11.0], [1.1, 11.0], [1.2, 11.0], [1.3, 11.0], [1.4, 11.0], [1.5, 11.0], [1.6, 12.0], [1.7, 12.0], [1.8, 12.0], [1.9, 12.0], [2.0, 12.0], [2.1, 12.0], [2.2, 12.0], [2.3, 12.0], [2.4, 12.0], [2.5, 12.0], [2.6, 12.0], [2.7, 12.0], [2.8, 12.0], [2.9, 12.0], [3.0, 12.0], [3.1, 12.0], [3.2, 12.0], [3.3, 13.0], [3.4, 13.0], [3.5, 13.0], [3.6, 13.0], [3.7, 13.0], [3.8, 13.0], [3.9, 13.0], [4.0, 13.0], [4.1, 13.0], [4.2, 13.0], [4.3, 13.0], [4.4, 13.0], [4.5, 13.0], [4.6, 13.0], [4.7, 13.0], [4.8, 13.0], [4.9, 13.0], [5.0, 13.0], [5.1, 13.0], [5.2, 13.0], [5.3, 14.0], [5.4, 14.0], [5.5, 14.0], [5.6, 14.0], [5.7, 14.0], [5.8, 14.0], [5.9, 14.0], [6.0, 14.0], [6.1, 14.0], [6.2, 14.0], [6.3, 14.0], [6.4, 14.0], [6.5, 14.0], [6.6, 14.0], [6.7, 14.0], [6.8, 14.0], [6.9, 14.0], [7.0, 14.0], [7.1, 14.0], [7.2, 14.0], [7.3, 15.0], [7.4, 15.0], [7.5, 15.0], [7.6, 15.0], [7.7, 15.0], [7.8, 15.0], [7.9, 15.0], [8.0, 15.0], [8.1, 15.0], [8.2, 15.0], [8.3, 15.0], [8.4, 15.0], [8.5, 15.0], [8.6, 15.0], [8.7, 15.0], [8.8, 15.0], [8.9, 15.0], [9.0, 15.0], [9.1, 16.0], [9.2, 16.0], [9.3, 16.0], [9.4, 16.0], [9.5, 16.0], [9.6, 16.0], [9.7, 16.0], [9.8, 16.0], [9.9, 16.0], [10.0, 16.0], [10.1, 16.0], [10.2, 16.0], [10.3, 16.0], [10.4, 16.0], [10.5, 16.0], [10.6, 16.0], [10.7, 16.0], [10.8, 16.0], [10.9, 16.0], [11.0, 17.0], [11.1, 17.0], [11.2, 17.0], [11.3, 17.0], [11.4, 17.0], [11.5, 17.0], [11.6, 17.0], [11.7, 17.0], [11.8, 17.0], [11.9, 17.0], [12.0, 17.0], [12.1, 17.0], [12.2, 17.0], [12.3, 17.0], [12.4, 17.0], [12.5, 17.0], [12.6, 17.0], [12.7, 17.0], [12.8, 17.0], [12.9, 17.0], [13.0, 18.0], [13.1, 18.0], [13.2, 18.0], [13.3, 18.0], [13.4, 18.0], [13.5, 18.0], [13.6, 18.0], [13.7, 18.0], [13.8, 18.0], [13.9, 18.0], [14.0, 18.0], [14.1, 18.0], [14.2, 18.0], [14.3, 18.0], [14.4, 18.0], [14.5, 18.0], [14.6, 18.0], [14.7, 18.0], [14.8, 18.0], [14.9, 18.0], [15.0, 19.0], [15.1, 19.0], [15.2, 19.0], [15.3, 19.0], [15.4, 19.0], [15.5, 19.0], [15.6, 19.0], [15.7, 19.0], [15.8, 19.0], [15.9, 19.0], [16.0, 19.0], [16.1, 19.0], [16.2, 19.0], [16.3, 19.0], [16.4, 19.0], [16.5, 19.0], [16.6, 19.0], [16.7, 19.0], [16.8, 19.0], [16.9, 19.0], [17.0, 19.0], [17.1, 20.0], [17.2, 20.0], [17.3, 20.0], [17.4, 20.0], [17.5, 20.0], [17.6, 20.0], [17.7, 20.0], [17.8, 20.0], [17.9, 20.0], [18.0, 20.0], [18.1, 20.0], [18.2, 20.0], [18.3, 20.0], [18.4, 20.0], [18.5, 20.0], [18.6, 20.0], [18.7, 20.0], [18.8, 20.0], [18.9, 20.0], [19.0, 20.0], [19.1, 20.0], [19.2, 20.0], [19.3, 21.0], [19.4, 21.0], [19.5, 21.0], [19.6, 21.0], [19.7, 21.0], [19.8, 21.0], [19.9, 21.0], [20.0, 21.0], [20.1, 21.0], [20.2, 21.0], [20.3, 21.0], [20.4, 21.0], [20.5, 21.0], [20.6, 21.0], [20.7, 21.0], [20.8, 21.0], [20.9, 21.0], [21.0, 21.0], [21.1, 21.0], [21.2, 21.0], [21.3, 21.0], [21.4, 21.0], [21.5, 21.0], [21.6, 22.0], [21.7, 22.0], [21.8, 22.0], [21.9, 22.0], [22.0, 22.0], [22.1, 22.0], [22.2, 22.0], [22.3, 22.0], [22.4, 22.0], [22.5, 22.0], [22.6, 22.0], [22.7, 22.0], [22.8, 22.0], [22.9, 22.0], [23.0, 22.0], [23.1, 22.0], [23.2, 22.0], [23.3, 22.0], [23.4, 22.0], [23.5, 22.0], [23.6, 22.0], [23.7, 22.0], [23.8, 22.0], [23.9, 23.0], [24.0, 23.0], [24.1, 23.0], [24.2, 23.0], [24.3, 23.0], [24.4, 23.0], [24.5, 23.0], [24.6, 23.0], [24.7, 23.0], [24.8, 23.0], [24.9, 23.0], [25.0, 23.0], [25.1, 23.0], [25.2, 23.0], [25.3, 23.0], [25.4, 23.0], [25.5, 23.0], [25.6, 23.0], [25.7, 23.0], [25.8, 23.0], [25.9, 23.0], [26.0, 23.0], [26.1, 23.0], [26.2, 23.0], [26.3, 23.0], [26.4, 24.0], [26.5, 24.0], [26.6, 24.0], [26.7, 24.0], [26.8, 24.0], [26.9, 24.0], [27.0, 24.0], [27.1, 24.0], [27.2, 24.0], [27.3, 24.0], [27.4, 24.0], [27.5, 24.0], [27.6, 24.0], [27.7, 24.0], [27.8, 24.0], [27.9, 24.0], [28.0, 24.0], [28.1, 24.0], [28.2, 24.0], [28.3, 24.0], [28.4, 24.0], [28.5, 24.0], [28.6, 24.0], [28.7, 24.0], [28.8, 24.0], [28.9, 25.0], [29.0, 25.0], [29.1, 25.0], [29.2, 25.0], [29.3, 25.0], [29.4, 25.0], [29.5, 25.0], [29.6, 25.0], [29.7, 25.0], [29.8, 25.0], [29.9, 25.0], [30.0, 25.0], [30.1, 25.0], [30.2, 25.0], [30.3, 25.0], [30.4, 25.0], [30.5, 25.0], [30.6, 25.0], [30.7, 25.0], [30.8, 25.0], [30.9, 25.0], [31.0, 25.0], [31.1, 25.0], [31.2, 25.0], [31.3, 25.0], [31.4, 26.0], [31.5, 26.0], [31.6, 26.0], [31.7, 26.0], [31.8, 26.0], [31.9, 26.0], [32.0, 26.0], [32.1, 26.0], [32.2, 26.0], [32.3, 26.0], [32.4, 26.0], [32.5, 26.0], [32.6, 26.0], [32.7, 26.0], [32.8, 26.0], [32.9, 26.0], [33.0, 26.0], [33.1, 26.0], [33.2, 26.0], [33.3, 26.0], [33.4, 26.0], [33.5, 26.0], [33.6, 26.0], [33.7, 26.0], [33.8, 26.0], [33.9, 27.0], [34.0, 27.0], [34.1, 27.0], [34.2, 27.0], [34.3, 27.0], [34.4, 27.0], [34.5, 27.0], [34.6, 27.0], [34.7, 27.0], [34.8, 27.0], [34.9, 27.0], [35.0, 27.0], [35.1, 27.0], [35.2, 27.0], [35.3, 27.0], [35.4, 27.0], [35.5, 27.0], [35.6, 27.0], [35.7, 27.0], [35.8, 27.0], [35.9, 27.0], [36.0, 27.0], [36.1, 27.0], [36.2, 27.0], [36.3, 27.0], [36.4, 27.0], [36.5, 27.0], [36.6, 28.0], [36.7, 28.0], [36.8, 28.0], [36.9, 28.0], [37.0, 28.0], [37.1, 28.0], [37.2, 28.0], [37.3, 28.0], [37.4, 28.0], [37.5, 28.0], [37.6, 28.0], [37.7, 28.0], [37.8, 28.0], [37.9, 28.0], [38.0, 28.0], [38.1, 28.0], [38.2, 28.0], [38.3, 28.0], [38.4, 28.0], [38.5, 28.0], [38.6, 28.0], [38.7, 28.0], [38.8, 28.0], [38.9, 28.0], [39.0, 28.0], [39.1, 28.0], [39.2, 28.0], [39.3, 29.0], [39.4, 29.0], [39.5, 29.0], [39.6, 29.0], [39.7, 29.0], [39.8, 29.0], [39.9, 29.0], [40.0, 29.0], [40.1, 29.0], [40.2, 29.0], [40.3, 29.0], [40.4, 29.0], [40.5, 29.0], [40.6, 29.0], [40.7, 29.0], [40.8, 29.0], [40.9, 29.0], [41.0, 29.0], [41.1, 29.0], [41.2, 29.0], [41.3, 29.0], [41.4, 29.0], [41.5, 29.0], [41.6, 29.0], [41.7, 29.0], [41.8, 30.0], [41.9, 30.0], [42.0, 30.0], [42.1, 30.0], [42.2, 30.0], [42.3, 30.0], [42.4, 30.0], [42.5, 30.0], [42.6, 30.0], [42.7, 30.0], [42.8, 30.0], [42.9, 30.0], [43.0, 30.0], [43.1, 30.0], [43.2, 30.0], [43.3, 30.0], [43.4, 30.0], [43.5, 30.0], [43.6, 30.0], [43.7, 30.0], [43.8, 30.0], [43.9, 30.0], [44.0, 30.0], [44.1, 30.0], [44.2, 30.0], [44.3, 30.0], [44.4, 30.0], [44.5, 31.0], [44.6, 31.0], [44.7, 31.0], [44.8, 31.0], [44.9, 31.0], [45.0, 31.0], [45.1, 31.0], [45.2, 31.0], [45.3, 31.0], [45.4, 31.0], [45.5, 31.0], [45.6, 31.0], [45.7, 31.0], [45.8, 31.0], [45.9, 31.0], [46.0, 31.0], [46.1, 31.0], [46.2, 31.0], [46.3, 31.0], [46.4, 31.0], [46.5, 31.0], [46.6, 31.0], [46.7, 31.0], [46.8, 31.0], [46.9, 31.0], [47.0, 31.0], [47.1, 31.0], [47.2, 32.0], [47.3, 32.0], [47.4, 32.0], [47.5, 32.0], [47.6, 32.0], [47.7, 32.0], [47.8, 32.0], [47.9, 32.0], [48.0, 32.0], [48.1, 32.0], [48.2, 32.0], [48.3, 32.0], [48.4, 32.0], [48.5, 32.0], [48.6, 32.0], [48.7, 32.0], [48.8, 32.0], [48.9, 32.0], [49.0, 32.0], [49.1, 32.0], [49.2, 32.0], [49.3, 32.0], [49.4, 32.0], [49.5, 32.0], [49.6, 32.0], [49.7, 32.0], [49.8, 32.0], [49.9, 33.0], [50.0, 33.0], [50.1, 33.0], [50.2, 33.0], [50.3, 33.0], [50.4, 33.0], [50.5, 33.0], [50.6, 33.0], [50.7, 33.0], [50.8, 33.0], [50.9, 33.0], [51.0, 33.0], [51.1, 33.0], [51.2, 33.0], [51.3, 33.0], [51.4, 33.0], [51.5, 33.0], [51.6, 33.0], [51.7, 33.0], [51.8, 33.0], [51.9, 33.0], [52.0, 33.0], [52.1, 33.0], [52.2, 33.0], [52.3, 33.0], [52.4, 33.0], [52.5, 33.0], [52.6, 33.0], [52.7, 33.0], [52.8, 34.0], [52.9, 34.0], [53.0, 34.0], [53.1, 34.0], [53.2, 34.0], [53.3, 34.0], [53.4, 34.0], [53.5, 34.0], [53.6, 34.0], [53.7, 34.0], [53.8, 34.0], [53.9, 34.0], [54.0, 34.0], [54.1, 34.0], [54.2, 34.0], [54.3, 34.0], [54.4, 34.0], [54.5, 34.0], [54.6, 34.0], [54.7, 34.0], [54.8, 34.0], [54.9, 34.0], [55.0, 34.0], [55.1, 34.0], [55.2, 34.0], [55.3, 34.0], [55.4, 34.0], [55.5, 34.0], [55.6, 34.0], [55.7, 35.0], [55.8, 35.0], [55.9, 35.0], [56.0, 35.0], [56.1, 35.0], [56.2, 35.0], [56.3, 35.0], [56.4, 35.0], [56.5, 35.0], [56.6, 35.0], [56.7, 35.0], [56.8, 35.0], [56.9, 35.0], [57.0, 35.0], [57.1, 35.0], [57.2, 35.0], [57.3, 35.0], [57.4, 35.0], [57.5, 35.0], [57.6, 35.0], [57.7, 35.0], [57.8, 35.0], [57.9, 35.0], [58.0, 35.0], [58.1, 35.0], [58.2, 35.0], [58.3, 35.0], [58.4, 35.0], [58.5, 35.0], [58.6, 36.0], [58.7, 36.0], [58.8, 36.0], [58.9, 36.0], [59.0, 36.0], [59.1, 36.0], [59.2, 36.0], [59.3, 36.0], [59.4, 36.0], [59.5, 36.0], [59.6, 36.0], [59.7, 36.0], [59.8, 36.0], [59.9, 36.0], [60.0, 36.0], [60.1, 36.0], [60.2, 36.0], [60.3, 36.0], [60.4, 36.0], [60.5, 36.0], [60.6, 36.0], [60.7, 36.0], [60.8, 36.0], [60.9, 36.0], [61.0, 36.0], [61.1, 36.0], [61.2, 36.0], [61.3, 36.0], [61.4, 36.0], [61.5, 37.0], [61.6, 37.0], [61.7, 37.0], [61.8, 37.0], [61.9, 37.0], [62.0, 37.0], [62.1, 37.0], [62.2, 37.0], [62.3, 37.0], [62.4, 37.0], [62.5, 37.0], [62.6, 37.0], [62.7, 37.0], [62.8, 37.0], [62.9, 37.0], [63.0, 37.0], [63.1, 37.0], [63.2, 37.0], [63.3, 37.0], [63.4, 37.0], [63.5, 37.0], [63.6, 37.0], [63.7, 37.0], [63.8, 37.0], [63.9, 37.0], [64.0, 37.0], [64.1, 37.0], [64.2, 37.0], [64.3, 38.0], [64.4, 38.0], [64.5, 38.0], [64.6, 38.0], [64.7, 38.0], [64.8, 38.0], [64.9, 38.0], [65.0, 38.0], [65.1, 38.0], [65.2, 38.0], [65.3, 38.0], [65.4, 38.0], [65.5, 38.0], [65.6, 38.0], [65.7, 38.0], [65.8, 38.0], [65.9, 38.0], [66.0, 38.0], [66.1, 38.0], [66.2, 38.0], [66.3, 38.0], [66.4, 38.0], [66.5, 38.0], [66.6, 38.0], [66.7, 38.0], [66.8, 38.0], [66.9, 39.0], [67.0, 39.0], [67.1, 39.0], [67.2, 39.0], [67.3, 39.0], [67.4, 39.0], [67.5, 39.0], [67.6, 39.0], [67.7, 39.0], [67.8, 39.0], [67.9, 39.0], [68.0, 39.0], [68.1, 39.0], [68.2, 39.0], [68.3, 39.0], [68.4, 39.0], [68.5, 39.0], [68.6, 39.0], [68.7, 39.0], [68.8, 39.0], [68.9, 39.0], [69.0, 39.0], [69.1, 39.0], [69.2, 39.0], [69.3, 40.0], [69.4, 40.0], [69.5, 40.0], [69.6, 40.0], [69.7, 40.0], [69.8, 40.0], [69.9, 40.0], [70.0, 40.0], [70.1, 40.0], [70.2, 40.0], [70.3, 40.0], [70.4, 40.0], [70.5, 40.0], [70.6, 40.0], [70.7, 40.0], [70.8, 40.0], [70.9, 40.0], [71.0, 40.0], [71.1, 40.0], [71.2, 40.0], [71.3, 40.0], [71.4, 40.0], [71.5, 40.0], [71.6, 40.0], [71.7, 41.0], [71.8, 41.0], [71.9, 41.0], [72.0, 41.0], [72.1, 41.0], [72.2, 41.0], [72.3, 41.0], [72.4, 41.0], [72.5, 41.0], [72.6, 41.0], [72.7, 41.0], [72.8, 41.0], [72.9, 41.0], [73.0, 41.0], [73.1, 41.0], [73.2, 41.0], [73.3, 41.0], [73.4, 41.0], [73.5, 41.0], [73.6, 41.0], [73.7, 41.0], [73.8, 42.0], [73.9, 42.0], [74.0, 42.0], [74.1, 42.0], [74.2, 42.0], [74.3, 42.0], [74.4, 42.0], [74.5, 42.0], [74.6, 42.0], [74.7, 42.0], [74.8, 42.0], [74.9, 42.0], [75.0, 42.0], [75.1, 42.0], [75.2, 42.0], [75.3, 42.0], [75.4, 42.0], [75.5, 42.0], [75.6, 42.0], [75.7, 42.0], [75.8, 43.0], [75.9, 43.0], [76.0, 43.0], [76.1, 43.0], [76.2, 43.0], [76.3, 43.0], [76.4, 43.0], [76.5, 43.0], [76.6, 43.0], [76.7, 43.0], [76.8, 43.0], [76.9, 43.0], [77.0, 43.0], [77.1, 43.0], [77.2, 43.0], [77.3, 43.0], [77.4, 43.0], [77.5, 43.0], [77.6, 44.0], [77.7, 44.0], [77.8, 44.0], [77.9, 44.0], [78.0, 44.0], [78.1, 44.0], [78.2, 44.0], [78.3, 44.0], [78.4, 44.0], [78.5, 44.0], [78.6, 44.0], [78.7, 44.0], [78.8, 44.0], [78.9, 44.0], [79.0, 44.0], [79.1, 44.0], [79.2, 45.0], [79.3, 45.0], [79.4, 45.0], [79.5, 45.0], [79.6, 45.0], [79.7, 45.0], [79.8, 45.0], [79.9, 45.0], [80.0, 45.0], [80.1, 45.0], [80.2, 45.0], [80.3, 45.0], [80.4, 45.0], [80.5, 45.0], [80.6, 45.0], [80.7, 46.0], [80.8, 46.0], [80.9, 46.0], [81.0, 46.0], [81.1, 46.0], [81.2, 46.0], [81.3, 46.0], [81.4, 46.0], [81.5, 46.0], [81.6, 46.0], [81.7, 46.0], [81.8, 46.0], [81.9, 46.0], [82.0, 47.0], [82.1, 47.0], [82.2, 47.0], [82.3, 47.0], [82.4, 47.0], [82.5, 47.0], [82.6, 47.0], [82.7, 47.0], [82.8, 47.0], [82.9, 47.0], [83.0, 47.0], [83.1, 47.0], [83.2, 48.0], [83.3, 48.0], [83.4, 48.0], [83.5, 48.0], [83.6, 48.0], [83.7, 48.0], [83.8, 48.0], [83.9, 48.0], [84.0, 48.0], [84.1, 48.0], [84.2, 48.0], [84.3, 48.0], [84.4, 49.0], [84.5, 49.0], [84.6, 49.0], [84.7, 49.0], [84.8, 49.0], [84.9, 49.0], [85.0, 49.0], [85.1, 49.0], [85.2, 49.0], [85.3, 49.0], [85.4, 50.0], [85.5, 50.0], [85.6, 50.0], [85.7, 50.0], [85.8, 50.0], [85.9, 50.0], [86.0, 50.0], [86.1, 50.0], [86.2, 50.0], [86.3, 50.0], [86.4, 50.0], [86.5, 51.0], [86.6, 51.0], [86.7, 51.0], [86.8, 51.0], [86.9, 51.0], [87.0, 51.0], [87.1, 51.0], [87.2, 51.0], [87.3, 51.0], [87.4, 51.0], [87.5, 52.0], [87.6, 52.0], [87.7, 52.0], [87.8, 52.0], [87.9, 52.0], [88.0, 52.0], [88.1, 52.0], [88.2, 52.0], [88.3, 52.0], [88.4, 52.0], [88.5, 53.0], [88.6, 53.0], [88.7, 53.0], [88.8, 53.0], [88.9, 53.0], [89.0, 53.0], [89.1, 53.0], [89.2, 53.0], [89.3, 54.0], [89.4, 54.0], [89.5, 54.0], [89.6, 54.0], [89.7, 54.0], [89.8, 54.0], [89.9, 54.0], [90.0, 55.0], [90.1, 55.0], [90.2, 55.0], [90.3, 55.0], [90.4, 55.0], [90.5, 55.0], [90.6, 55.0], [90.7, 55.0], [90.8, 56.0], [90.9, 56.0], [91.0, 56.0], [91.1, 56.0], [91.2, 56.0], [91.3, 56.0], [91.4, 57.0], [91.5, 57.0], [91.6, 57.0], [91.7, 57.0], [91.8, 57.0], [91.9, 57.0], [92.0, 58.0], [92.1, 58.0], [92.2, 58.0], [92.3, 58.0], [92.4, 58.0], [92.5, 59.0], [92.6, 59.0], [92.7, 59.0], [92.8, 59.0], [92.9, 59.0], [93.0, 60.0], [93.1, 60.0], [93.2, 60.0], [93.3, 60.0], [93.4, 60.0], [93.5, 61.0], [93.6, 61.0], [93.7, 61.0], [93.8, 61.0], [93.9, 62.0], [94.0, 62.0], [94.1, 62.0], [94.2, 62.0], [94.3, 63.0], [94.4, 63.0], [94.5, 63.0], [94.6, 64.0], [94.7, 64.0], [94.8, 64.0], [94.9, 65.0], [95.0, 65.0], [95.1, 65.0], [95.2, 66.0], [95.3, 66.0], [95.4, 66.0], [95.5, 67.0], [95.6, 67.0], [95.7, 68.0], [95.8, 68.0], [95.9, 69.0], [96.0, 69.0], [96.1, 70.0], [96.2, 71.0], [96.3, 72.0], [96.4, 73.0], [96.5, 74.0], [96.6, 75.0], [96.7, 77.0], [96.8, 78.0], [96.9, 80.0], [97.0, 82.0], [97.1, 83.0], [97.2, 85.0], [97.3, 87.0], [97.4, 89.0], [97.5, 91.0], [97.6, 92.0], [97.7, 94.0], [97.8, 96.0], [97.9, 99.0], [98.0, 101.0], [98.1, 104.0], [98.2, 106.0], [98.3, 109.0], [98.4, 113.0], [98.5, 116.0], [98.6, 121.0], [98.7, 126.0], [98.8, 134.0], [98.9, 161.0], [99.0, 265.0], [99.1, 278.0], [99.2, 288.0], [99.3, 296.0], [99.4, 305.0], [99.5, 314.0], [99.6, 323.0], [99.7, 330.0], [99.8, 348.0], [99.9, 772.0], [100.0, 10060.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 141013.0, "series": [{"data": [[0.0, 62952.0], [2100.0, 1.0], [600.0, 1.0], [10000.0, 1.0], [700.0, 41.0], [200.0, 242.0], [800.0, 1.0], [1000.0, 30.0], [1100.0, 8.0], [300.0, 257.0], [400.0, 5.0], [100.0, 455.0], [1600.0, 3.0], [1700.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "GetMatches", "isController": true}, {"data": [[0.0, 15600.0], [10000.0, 1.0], [700.0, 12.0], [200.0, 149.0], [800.0, 1.0], [1000.0, 12.0], [1100.0, 1.0], [300.0, 121.0], [1300.0, 1.0], [1400.0, 1.0], [1500.0, 1.0], [100.0, 91.0], [1600.0, 2.0], [400.0, 1.0], [1700.0, 1.0], [500.0, 5.0]], "isOverall": false, "label": "Post", "isController": true}, {"data": [[0.0, 62461.0], [2100.0, 2.0], [10000.0, 4.0], [700.0, 42.0], [200.0, 233.0], [800.0, 8.0], [900.0, 6.0], [1000.0, 13.0], [1100.0, 2.0], [300.0, 343.0], [1400.0, 1.0], [1600.0, 4.0], [400.0, 4.0], [100.0, 865.0], [1700.0, 1.0], [500.0, 11.0]], "isOverall": false, "label": "GetStats", "isController": true}, {"data": [[0.0, 141013.0], [2100.0, 3.0], [600.0, 1.0], [10000.0, 6.0], [700.0, 95.0], [200.0, 624.0], [800.0, 10.0], [900.0, 6.0], [1000.0, 55.0], [1100.0, 11.0], [300.0, 721.0], [1300.0, 1.0], [1400.0, 2.0], [1500.0, 1.0], [400.0, 10.0], [1600.0, 9.0], [100.0, 1411.0], [1700.0, 3.0], [500.0, 18.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 10000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 15.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 143509.0, "series": [{"data": [[0.0, 143509.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 197.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 15.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 279.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 36.81737500000016, "minX": 1.68194364E12, "maxY": 109.70057418303044, "series": [{"data": [[1.6819437E12, 90.12841920752884], [1.68194364E12, 109.70057418303044]], "isOverall": false, "label": "Get Stats", "isController": false}, {"data": [[1.68194364E12, 36.81737500000016]], "isOverall": false, "label": "Post ", "isController": false}, {"data": [[1.6819437E12, 63.69595343680734], [1.68194364E12, 108.56944862343906]], "isOverall": false, "label": "Get Matches", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6819437E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 10.25, "minX": 1.0, "maxY": 10000.0, "series": [{"data": [[5.0, 67.0], [8.0, 20.1], [10.0, 15.999999999999993], [11.0, 13.5], [13.0, 14.681818181818183], [14.0, 13.8], [15.0, 14.0], [18.0, 14.651162790697677], [19.0, 13.857142857142856], [20.0, 13.076923076923078], [21.0, 11.142857142857144], [22.0, 16.0], [23.0, 14.57446808510638], [24.0, 15.714285714285714], [25.0, 14.704545454545455], [27.0, 11.0], [28.0, 17.95], [29.0, 15.285714285714286], [30.0, 17.214285714285726], [31.0, 11.0], [32.0, 10.25], [33.0, 15.849056603773592], [34.0, 12.818181818181818], [35.0, 19.354166666666664], [37.0, 20.8], [36.0, 11.666666666666666], [38.0, 16.804347826086957], [39.0, 12.0], [40.0, 33.9375], [41.0, 12.333333333333332], [42.0, 13.099999999999998], [43.0, 19.467532467532475], [44.0, 11.5], [45.0, 21.434782608695645], [47.0, 14.428571428571427], [48.0, 14.487179487179489], [49.0, 15.588235294117647], [50.0, 17.057971014492754], [51.0, 10.749999999999998], [53.0, 53.080000000000005], [54.0, 13.444444444444443], [55.0, 29.379310344827584], [56.0, 11.666666666666666], [58.0, 20.915492957746476], [59.0, 10.909090909090908], [60.0, 34.19999999999998], [61.0, 26.2], [62.0, 15.333333333333334], [63.0, 24.344086021505387], [64.0, 12.950000000000001], [65.0, 23.92207792207792], [66.0, 15.1], [67.0, 11.90909090909091], [68.0, 15.805555555555562], [69.0, 13.3], [70.0, 25.73134328358209], [72.0, 15.53846153846154], [73.0, 13.833333333333332], [74.0, 14.181818181818182], [75.0, 23.45454545454545], [76.0, 56.0], [78.0, 20.149122807017555], [79.0, 14.571428571428568], [77.0, 16.63157894736842], [80.0, 17.839999999999996], [83.0, 28.275862068965523], [81.0, 14.5], [84.0, 25.655172413793103], [85.0, 22.42857142857143], [87.0, 17.611111111111114], [86.0, 18.666666666666668], [88.0, 40.41666666666667], [89.0, 26.285714285714285], [90.0, 32.442622950819676], [91.0, 18.8125], [92.0, 20.25], [93.0, 17.866666666666667], [94.0, 17.117647058823525], [95.0, 48.904761904761884], [96.0, 58.77777777777778], [97.0, 25.500000000000004], [98.0, 23.62992125984252], [99.0, 17.73529411764706], [100.0, 21.47445255474454], [101.0, 17.523809523809526], [102.0, 22.241379310344833], [103.0, 32.455882352941195], [104.0, 22.4], [105.0, 32.37931034482758], [107.0, 20.95061728395062], [106.0, 24.352941176470587], [108.0, 24.44354838709678], [109.0, 21.782608695652176], [110.0, 30.93548387096774], [111.0, 17.77777777777778], [112.0, 19.400000000000002], [113.0, 39.26881720430108], [115.0, 24.131386861313864], [116.0, 13.0], [117.0, 25.352941176470587], [118.0, 55.543859649122815], [119.0, 21.083333333333336], [120.0, 46.571428571428584], [121.0, 18.213114754098363], [122.0, 16.142857142857142], [123.0, 24.622950819672134], [124.0, 38.0], [125.0, 28.91525423728814], [127.0, 21.42105263157895], [126.0, 19.692307692307683], [128.0, 58.39534883720932], [129.0, 22.45098039215686], [130.0, 40.347826086956495], [131.0, 27.0], [132.0, 27.029761904761916], [133.0, 36.91735537190083], [134.0, 19.016949152542374], [135.0, 30.599999999999998], [137.0, 34.83333333333333], [138.0, 26.275229357798157], [139.0, 30.333333333333336], [140.0, 43.35416666666666], [141.0, 22.14414414414415], [142.0, 31.045454545454543], [143.0, 180.59375000000003], [136.0, 22.449541284403665], [145.0, 32.65320665083136], [146.0, 22.602150537634415], [147.0, 18.06060606060606], [148.0, 24.180722891566262], [149.0, 24.53684210526317], [150.0, 46.1896551724138], [151.0, 21.03448275862069], [144.0, 22.83870967741936], [153.0, 28.989690721649488], [154.0, 24.086206896551722], [155.0, 54.17582417582419], [157.0, 24.740112994350287], [158.0, 33.86448598130839], [159.0, 41.46376811594202], [156.0, 22.303448275862067], [152.0, 21.777777777777782], [160.0, 38.81756756756757], [161.0, 28.27272727272728], [162.0, 25.41509433962264], [163.0, 34.721115537848604], [164.0, 26.111111111111118], [165.0, 25.650423728813543], [166.0, 34.25714285714287], [167.0, 27.835051546391753], [168.0, 24.81900452488689], [170.0, 25.37012987012987], [171.0, 24.604166666666664], [173.0, 30.904436860068248], [174.0, 26.32850241545893], [175.0, 28.090909090909097], [172.0, 35.96093750000002], [169.0, 29.807692307692307], [176.0, 21.300000000000004], [178.0, 30.257485029940145], [179.0, 30.774193548387107], [180.0, 31.057627118644067], [181.0, 31.030303030303028], [183.0, 35.065891472868245], [182.0, 28.387900355871874], [177.0, 37.021978021978], [185.0, 26.319327731092432], [186.0, 28.5170278637771], [187.0, 27.842105263157894], [188.0, 32.25692695214106], [189.0, 27.494444444444444], [190.0, 27.457031249999996], [191.0, 26.372093023255804], [184.0, 28.549999999999997], [192.0, 28.731707317073166], [193.0, 26.93584905660376], [194.0, 33.82051282051282], [195.0, 28.041666666666675], [196.0, 48.046511627906995], [198.0, 48.20292887029282], [199.0, 22.65853658536585], [197.0, 33.4351851851852], [200.0, 25.684210526315805], [201.0, 26.127035830618887], [203.0, 34.3183520599251], [204.0, 26.424242424242433], [205.0, 33.15771812080536], [206.0, 29.58333333333334], [207.0, 32.419354838709666], [202.0, 38.75000000000001], [208.0, 39.93953488372094], [210.0, 37.68115942028988], [212.0, 21.60714285714286], [213.0, 37.73182247403206], [214.0, 28.250000000000004], [215.0, 22.706976744186047], [211.0, 24.925925925925927], [209.0, 34.0263157894737], [216.0, 30.951612903225808], [218.0, 40.28841607565005], [219.0, 32.51162790697675], [220.0, 30.979041916167656], [221.0, 25.881355932203384], [223.0, 34.29345794392518], [222.0, 35.86963979416812], [217.0, 22.974358974358974], [224.0, 31.642458100558667], [225.0, 31.788732394366193], [226.0, 44.55078125], [228.0, 38.20652173913046], [229.0, 33.95863052781745], [230.0, 35.08108108108107], [231.0, 33.97647058823529], [227.0, 33.97577854671275], [232.0, 28.798029556650253], [233.0, 35.75319148936168], [234.0, 39.32258064516129], [235.0, 32.94444444444445], [236.0, 43.92015209125474], [237.0, 40.133333333333326], [238.0, 32.638069705093855], [239.0, 36.87832699619774], [240.0, 34.273504273504244], [241.0, 37.491400491400505], [242.0, 33.0723404255319], [243.0, 35.44897959183673], [244.0, 40.00000000000002], [245.0, 39.157894736842124], [246.0, 34.85901639344265], [247.0, 40.86261261261266], [248.0, 38.02222222222225], [249.0, 47.71657754010692], [250.0, 37.66666666666666], [251.0, 30.216949152542384], [252.0, 35.74714104193137], [253.0, 40.504792332268366], [254.0, 42.25961538461535], [255.0, 39.387601078167066], [258.0, 39.43708609271523], [256.0, 36.85714285714283], [257.0, 39.77234636871512], [259.0, 36.04597701149426], [268.0, 34.41763341067285], [269.0, 32.00757575757576], [270.0, 36.24271844660198], [271.0, 34.624203821656046], [260.0, 48.147260273972634], [261.0, 39.700826446281], [263.0, 36.647990255785594], [262.0, 38.04347826086957], [264.0, 40.48346055979647], [265.0, 38.37609075043627], [266.0, 43.063197026022266], [267.0, 40.791666666666636], [273.0, 39.17427385892115], [272.0, 54.36842105263158], [274.0, 44.14838709677423], [275.0, 39.17683881064161], [276.0, 37.874316939890704], [277.0, 38.0877483443709], [278.0, 38.1782573940848], [279.0, 37.617647058823565], [282.0, 38.93699186991872], [284.0, 37.287640449438165], [287.0, 39.509554140127385], [281.0, 41.21782178217821], [280.0, 38.929824561403514], [286.0, 35.56923076923076], [283.0, 33.15841584158415], [289.0, 54.146341463414636], [288.0, 41.16976127320958], [290.0, 41.45263157894737], [291.0, 38.726958525345616], [292.0, 39.75307262569832], [293.0, 40.36666666666666], [294.0, 34.81440443213296], [295.0, 35.9608127721335], [296.0, 45.69586374695864], [302.0, 34.65894039735098], [303.0, 38.714285714285666], [300.0, 58.18261964735519], [301.0, 37.989427312775405], [297.0, 53.60434056761266], [298.0, 36.36337209302324], [299.0, 38.49333333333335], [305.0, 38.9329896907216], [306.0, 37.39159663865544], [308.0, 43.12871287128713], [310.0, 34.499999999999986], [307.0, 41.20634920634921], [304.0, 45.30030030030025]], "isOverall": false, "label": "GetMatches", "isController": true}, {"data": [[232.77982812500127, 36.30595312499998]], "isOverall": false, "label": "GetMatches-Aggregated", "isController": true}, {"data": [[5.0, 67.0], [8.0, 16.75], [10.0, 14.2], [11.0, 11.5], [13.0, 14.666666666666666], [14.0, 12.0], [15.0, 12.11764705882353], [18.0, 15.315789473684214], [19.0, 14.5], [20.0, 12.142857142857142], [21.0, 11.0], [22.0, 11.0], [23.0, 14.92], [24.0, 17.333333333333332], [25.0, 14.421052631578945], [28.0, 20.473684210526315], [30.0, 15.586206896551728], [32.0, 11.0], [33.0, 15.304347826086955], [34.0, 14.833333333333332], [35.0, 37.0], [37.0, 25.75], [38.0, 16.999999999999996], [39.0, 14.0], [40.0, 29.92857142857143], [41.0, 12.5], [43.0, 28.730769230769234], [44.0, 12.0], [45.0, 23.645161290322587], [47.0, 15.999999999999998], [48.0, 13.783783783783784], [49.0, 15.666666666666666], [50.0, 21.594594594594597], [53.0, 32.24], [54.0, 35.0], [55.0, 21.933333333333334], [58.0, 24.39024390243903], [59.0, 11.0], [60.0, 18.260869565217387], [61.0, 29.333333333333336], [63.0, 20.4], [64.0, 15.625], [65.0, 26.970588235294127], [67.0, 11.333333333333334], [68.0, 21.918918918918912], [69.0, 20.4], [70.0, 30.793103448275854], [72.0, 14.2], [73.0, 22.24489795918367], [74.0, 51.0], [75.0, 47.10714285714286], [78.0, 17.014705882352956], [79.0, 12.0], [80.0, 37.150000000000006], [81.0, 15.0], [83.0, 18.11538461538462], [84.0, 19.900000000000002], [85.0, 16.9375], [87.0, 11.0], [88.0, 28.499999999999993], [89.0, 26.0], [90.0, 25.947368421052634], [92.0, 22.0], [93.0, 30.41071428571429], [94.0, 14.299999999999999], [95.0, 60.12], [96.0, 15.0], [97.0, 15.444444444444445], [98.0, 17.257142857142853], [99.0, 13.0], [100.0, 25.96666666666667], [101.0, 18.8], [102.0, 29.5], [103.0, 26.416666666666664], [104.0, 13.0], [105.0, 58.27272727272727], [108.0, 25.083333333333336], [109.0, 27.555555555555557], [110.0, 61.21428571428571], [112.0, 37.6], [113.0, 36.82142857142858], [115.0, 36.74242424242427], [116.0, 13.0], [117.0, 14.25], [118.0, 27.950000000000003], [119.0, 32.0], [120.0, 29.164179104477597], [121.0, 19.0], [122.0, 12.0], [123.0, 24.44], [124.0, 63.66666666666667], [125.0, 111.12903225806451], [128.0, 29.666666666666664], [129.0, 16.0], [130.0, 92.14285714285715], [131.0, 92.0], [132.0, 74.16666666666667], [133.0, 54.71875], [135.0, 26.294117647058822], [137.0, 11.5], [138.0, 50.6], [139.0, 12.0], [140.0, 59.893617021276604], [141.0, 17.0], [142.0, 40.77777777777778], [143.0, 74.79310344827586], [145.0, 53.026315789473685], [146.0, 30.5], [147.0, 17.875], [148.0, 20.815789473684212], [149.0, 56.75], [150.0, 36.628571428571426], [151.0, 11.333333333333334], [153.0, 52.37254901960784], [154.0, 54.0], [155.0, 37.67647058823529], [157.0, 214.5], [158.0, 45.96428571428571], [159.0, 28.78571428571429], [160.0, 23.272727272727273], [161.0, 15.6], [162.0, 80.75], [163.0, 19.64], [164.0, 134.30769230769232], [165.0, 52.8169014084507], [166.0, 30.900000000000002], [167.0, 17.2], [168.0, 18.59047619047619], [170.0, 17.438016528925633], [171.0, 18.444444444444443], [172.0, 17.8], [173.0, 39.49438202247188], [174.0, 24.8], [175.0, 40.36923076923076], [176.0, 19.400000000000002], [178.0, 30.373333333333335], [179.0, 19.5], [180.0, 29.563829787234045], [182.0, 75.0], [183.0, 24.688405797101428], [185.0, 19.852173913043476], [186.0, 20.000000000000004], [187.0, 30.0], [188.0, 22.05940594059406], [189.0, 20.869565217391308], [190.0, 41.40449438202247], [191.0, 21.666666666666668], [192.0, 24.357142857142854], [193.0, 23.663366336633665], [194.0, 24.41666666666666], [195.0, 33.39999999999999], [196.0, 14.571428571428571], [198.0, 25.359649122807003], [199.0, 20.266666666666666], [200.0, 19.10810810810812], [201.0, 30.375], [203.0, 31.495575221238933], [204.0, 35.99999999999999], [205.0, 19.9], [206.0, 28.5], [207.0, 27.0], [208.0, 26.019417475728154], [209.0, 27.375], [210.0, 29.1578947368421], [212.0, 15.4], [213.0, 18.809090909090912], [214.0, 20.25], [215.0, 18.78947368421052], [216.0, 27.19047619047619], [217.0, 18.0], [218.0, 42.184], [219.0, 20.11764705882353], [220.0, 24.273809523809526], [221.0, 27.352941176470587], [222.0, 33.1], [223.0, 46.04166666666667], [224.0, 23.848484848484848], [225.0, 23.72222222222223], [228.0, 27.916666666666668], [229.0, 18.309523809523814], [230.0, 21.5], [231.0, 13.333333333333334], [227.0, 17.166666666666664], [226.0, 39.0], [232.0, 41.83582089552237], [233.0, 57.279661016949184], [234.0, 74.80769230769229], [235.0, 18.25], [236.0, 30.66666666666667], [237.0, 18.75], [238.0, 24.824999999999985], [239.0, 16.76923076923077], [240.0, 23.454545454545453], [241.0, 32.94444444444444], [242.0, 17.714285714285715], [243.0, 41.01408450704225], [244.0, 62.600000000000016], [245.0, 43.59677419354837], [246.0, 20.518987341772156], [247.0, 45.814285714285724], [248.0, 18.57142857142857], [249.0, 32.6375], [250.0, 22.799999999999997], [251.0, 16.4], [252.0, 21.2], [254.0, 73.83168316831683], [255.0, 33.14814814814816], [253.0, 10000.0], [257.0, 22.750000000000004], [256.0, 48.25781250000002], [258.0, 25.436090225563916], [259.0, 21.933333333333326], [260.0, 26.917431192660555], [261.0, 24.507936507936506], [263.0, 23.358585858585865], [262.0, 15.0], [264.0, 21.396226415094343], [270.0, 20.515624999999993], [271.0, 23.583333333333332], [268.0, 22.231884057971005], [269.0, 21.01111111111112], [265.0, 22.81659388646289], [266.0, 15.938775510204081], [267.0, 35.2952380952381], [273.0, 24.33766233766234], [272.0, 39.609195402298845], [274.0, 29.676056338028165], [275.0, 17.53879310344827], [276.0, 16.796296296296298], [277.0, 22.224299065420546], [278.0, 20.381818181818172], [279.0, 34.82802547770698], [280.0, 25.90476190476191], [287.0, 28.181058495821727], [286.0, 63.499999999999986], [284.0, 22.216545012165433], [285.0, 22.1875], [281.0, 20.771428571428572], [282.0, 26.109375], [283.0, 24.187500000000004], [289.0, 26.217391304347828], [288.0, 26.248908296943238], [290.0, 21.84615384615385], [291.0, 26.084033613445367], [292.0, 23.037209302325575], [293.0, 19.12371134020618], [294.0, 31.073170731707318], [295.0, 31.027131782945737], [296.0, 35.217616580310896], [303.0, 27.464912280701753], [302.0, 29.229629629629628], [300.0, 41.04904632152589], [301.0, 45.96791443850265], [297.0, 51.64454976303319], [298.0, 21.620111731843586], [299.0, 37.27083333333335], [304.0, 44.31066176470587], [305.0, 31.637777777777792], [306.0, 28.92957746478873], [308.0, 32.652777777777786], [309.0, 24.624999999999996], [310.0, 20.0], [307.0, 28.820895522388057]], "isOverall": false, "label": "Post", "isController": true}, {"data": [[238.68781250000023, 31.078312499999853]], "isOverall": false, "label": "Post-Aggregated", "isController": true}, {"data": [[2.0, 11.650793650793652], [3.0, 12.755555555555555], [4.0, 12.608695652173912], [5.0, 15.793103448275865], [6.0, 12.935483870967744], [7.0, 11.962962962962965], [8.0, 13.365079365079366], [9.0, 13.8], [10.0, 14.559999999999999], [11.0, 192.05357142857144], [12.0, 14.18181818181818], [13.0, 13.448275862068964], [14.0, 12.760000000000002], [15.0, 13.092592592592597], [16.0, 12.26923076923077], [17.0, 11.333333333333334], [18.0, 15.152000000000005], [19.0, 12.450000000000001], [20.0, 12.227272727272728], [21.0, 12.615384615384615], [22.0, 14.714285714285712], [23.0, 14.65], [24.0, 13.836065573770492], [25.0, 13.386554621848738], [26.0, 12.0], [27.0, 11.72222222222222], [28.0, 14.163265306122446], [29.0, 12.379310344827587], [30.0, 15.299999999999999], [31.0, 13.119999999999997], [32.0, 12.238095238095243], [33.0, 14.09649122807018], [34.0, 14.968253968253972], [35.0, 18.867647058823522], [37.0, 11.549999999999999], [36.0, 17.012345679012345], [38.0, 18.82352941176471], [39.0, 14.235294117647054], [40.0, 17.439999999999987], [41.0, 12.825000000000001], [42.0, 13.969230769230766], [43.0, 16.618811881188112], [45.0, 16.343283582089544], [44.0, 11.88888888888889], [47.0, 15.537037037037042], [46.0, 15.61111111111111], [48.0, 15.588235294117645], [49.0, 24.52054794520548], [50.0, 16.6578947368421], [51.0, 15.18627450980392], [53.0, 42.63636363636363], [52.0, 18.866666666666667], [54.0, 21.721854304635748], [55.0, 28.176470588235297], [56.0, 15.000000000000005], [58.0, 17.280701754385955], [59.0, 16.21509433962263], [60.0, 29.782258064516128], [61.0, 23.15789473684211], [62.0, 17.92229729729728], [63.0, 16.442857142857143], [64.0, 15.146666666666674], [65.0, 18.899262899262904], [67.0, 14.3125], [66.0, 20.225274725274726], [68.0, 24.449541284403676], [69.0, 17.681818181818198], [70.0, 17.01754385964911], [71.0, 13.727272727272728], [72.0, 17.373873873873876], [73.0, 19.8], [74.0, 17.555555555555557], [75.0, 20.30769230769231], [78.0, 19.67741935483871], [79.0, 17.411764705882348], [77.0, 20.258215962441316], [76.0, 19.597402597402603], [80.0, 16.244186046511622], [81.0, 15.633802816901404], [83.0, 22.531249999999996], [82.0, 18.000000000000004], [84.0, 17.13498622589531], [85.0, 30.225806451612893], [86.0, 20.875], [87.0, 20.813559322033903], [88.0, 27.926470588235293], [89.0, 25.869565217391308], [90.0, 23.970491803278687], [91.0, 21.138888888888893], [92.0, 23.82352941176471], [93.0, 19.313253012048197], [94.0, 24.94339622641509], [95.0, 31.199999999999992], [96.0, 66.41176470588233], [97.0, 23.27868852459016], [98.0, 35.497326203208566], [99.0, 19.925000000000004], [100.0, 23.731404958677683], [101.0, 19.584615384615386], [102.0, 20.32], [103.0, 39.488764044943835], [104.0, 22.999999999999996], [105.0, 29.774193548387093], [107.0, 23.301369863013708], [106.0, 28.842857142857145], [108.0, 40.858407079646], [109.0, 20.150943396226406], [110.0, 23.25373134328358], [111.0, 26.333333333333336], [112.0, 26.318181818181827], [113.0, 27.491124260355026], [115.0, 34.95813953488372], [117.0, 30.05263157894737], [118.0, 49.570247933884296], [119.0, 34.37142857142856], [116.0, 38.0], [120.0, 30.92307692307694], [121.0, 26.654135338345867], [122.0, 24.8], [123.0, 27.869158878504678], [124.0, 45.48275862068965], [125.0, 29.61157024793388], [126.0, 24.84337349397589], [127.0, 27.13265306122449], [128.0, 32.16867469879517], [130.0, 29.857723577235756], [131.0, 40.19999999999999], [132.0, 33.57397959183672], [133.0, 27.38505747126436], [135.0, 36.02020202020203], [134.0, 29.687022900763363], [129.0, 31.101694915254242], [137.0, 103.69999999999999], [138.0, 25.523809523809515], [140.0, 36.09322033898307], [141.0, 29.684729064039388], [142.0, 30.65573770491803], [143.0, 44.38400000000001], [139.0, 24.093750000000007], [136.0, 30.315068493150672], [145.0, 31.694610778443074], [146.0, 30.171597633136102], [147.0, 18.454545454545453], [148.0, 33.48458149779734], [149.0, 31.787610619469007], [150.0, 41.40571428571432], [151.0, 27.678571428571427], [144.0, 28.45664739884393], [153.0, 28.86915887850468], [155.0, 42.45098039215686], [157.0, 32.6904761904762], [158.0, 45.56198347107437], [159.0, 64.28124999999999], [156.0, 30.771084337349397], [154.0, 28.97368421052632], [152.0, 31.33333333333333], [160.0, 30.628742514970064], [161.0, 32.741803278688565], [162.0, 39.81967213114754], [163.0, 33.652777777777786], [164.0, 32.82843137254902], [165.0, 38.6733212341198], [166.0, 39.12500000000001], [167.0, 30.563492063492074], [168.0, 30.992647058823543], [170.0, 31.79787234042553], [171.0, 34.48175182481751], [172.0, 40.466292134831434], [173.0, 32.44409937888202], [174.0, 39.07246376811595], [175.0, 38.06321839080456], [169.0, 39.000000000000014], [176.0, 23.714285714285715], [178.0, 39.63043478260869], [180.0, 41.620426829268254], [181.0, 75.47272727272728], [183.0, 36.15428571428573], [182.0, 42.86982248520711], [179.0, 41.20560747663553], [177.0, 38.22413793103449], [185.0, 35.286842105263155], [186.0, 44.76562500000001], [188.0, 37.20533333333332], [189.0, 41.07042253521127], [190.0, 35.60546875000004], [191.0, 37.06015037593984], [187.0, 43.13888888888889], [184.0, 34.93548387096775], [192.0, 30.428571428571427], [193.0, 40.6759581881533], [194.0, 140.15], [195.0, 48.13013698630137], [196.0, 56.14925373134327], [198.0, 58.73275862068967], [199.0, 30.55263157894738], [197.0, 39.801470588235304], [200.0, 27.827814569536418], [201.0, 42.58966565349546], [203.0, 60.74178403755871], [204.0, 39.07843137254903], [205.0, 39.91079812206568], [206.0, 40.67213114754098], [207.0, 63.81111111111114], [202.0, 301.0], [208.0, 42.96572580645162], [209.0, 50.66153846153847], [210.0, 52.883435582822074], [212.0, 82.2], [213.0, 46.70459081836328], [215.0, 26.517482517482517], [214.0, 40.07575757575757], [211.0, 32.279279279279294], [216.0, 63.199999999999974], [218.0, 49.305587229190415], [220.0, 39.43323442136499], [221.0, 41.43902439024389], [223.0, 43.721223021582766], [222.0, 43.89208633093525], [219.0, 43.04545454545454], [217.0, 36.90666666666665], [224.0, 44.38305084745765], [225.0, 38.053475935828864], [226.0, 54.343859649122834], [228.0, 37.45512820512818], [229.0, 46.90793650793652], [230.0, 41.81481481481481], [231.0, 44.142857142857146], [227.0, 50.974468085106395], [232.0, 41.601307189542474], [233.0, 50.15051903114186], [234.0, 56.88934426229504], [235.0, 40.14084507042254], [236.0, 52.678362573099406], [237.0, 58.60526315789473], [238.0, 50.55912162162159], [239.0, 49.34210526315791], [240.0, 48.34375000000003], [241.0, 44.712328767123296], [242.0, 46.75961538461535], [243.0, 51.429752066115675], [244.0, 50.630522088353395], [245.0, 45.758064516129025], [246.0, 48.224719101123576], [247.0, 71.49938650306741], [248.0, 51.84741144414169], [249.0, 61.172866520787785], [250.0, 55.45], [251.0, 39.09594095940958], [252.0, 62.87605042016806], [254.0, 55.72144522144522], [255.0, 56.31727828746177], [253.0, 51.791111111111114], [257.0, 79.50924024640653], [256.0, 55.663621262458506], [258.0, 49.076923076923066], [259.0, 53.17857142857143], [260.0, 43.421276595744665], [261.0, 56.201995012468835], [263.0, 53.972776769510006], [262.0, 60.53125000000001], [264.0, 64.0576923076923], [270.0, 50.7476635514019], [271.0, 40.69911504424777], [268.0, 47.55555555555556], [269.0, 39.86976744186046], [265.0, 57.182666666666684], [267.0, 48.3731343283582], [266.0, 64.62251655629139], [273.0, 53.58333333333333], [272.0, 53.85714285714284], [274.0, 50.2437275985663], [275.0, 63.15992292870907], [276.0, 55.97560975609758], [277.0, 53.06474820143884], [278.0, 54.605990783410114], [279.0, 52.13861386138616], [282.0, 44.97984886649878], [284.0, 48.436619718309814], [285.0, 48.333333333333336], [286.0, 48.083333333333336], [287.0, 45.15775401069516], [281.0, 54.000000000000014], [280.0, 53.92156862745097], [283.0, 47.1132075471698], [289.0, 51.55], [288.0, 49.42408376963355], [290.0, 48.78740157480314], [291.0, 47.08620689655176], [292.0, 52.20301783264742], [293.0, 63.03125000000001], [294.0, 43.94461538461538], [295.0, 51.44488977955917], [296.0, 51.16666666666666], [302.0, 45.50170648464161], [303.0, 44.285911602209964], [300.0, 59.65112540192921], [301.0, 45.40081383519839], [297.0, 102.85096153846155], [298.0, 45.48290598290601], [299.0, 43.83291139240504], [304.0, 56.694960212201565], [305.0, 42.870588235294164], [306.0, 46.50214592274678], [308.0, 60.132911392405084], [309.0, 70.4375], [310.0, 48.17073170731707], [307.0, 50.97894736842106], [1.0, 12.779069767441863]], "isOverall": false, "label": "GetStats", "isController": true}, {"data": [[203.7836406250006, 42.71012499999986]], "isOverall": false, "label": "GetStats-Aggregated", "isController": true}, {"data": [[2.0, 11.650793650793652], [3.0, 12.755555555555555], [4.0, 12.608695652173912], [5.0, 20.59375], [6.0, 12.935483870967744], [7.0, 11.962962962962965], [8.0, 14.530864197530866], [9.0, 13.8], [10.0, 14.981132075471697], [11.0, 180.08333333333334], [12.0, 14.18181818181818], [13.0, 14.11111111111111], [14.0, 12.848484848484848], [15.0, 13.164948453608247], [16.0, 12.26923076923077], [17.0, 11.333333333333334], [18.0, 15.053475935828883], [19.0, 13.03225806451613], [20.0, 12.528846153846157], [21.0, 12.416666666666668], [22.0, 14.608695652173912], [23.0, 14.674242424242422], [24.0, 14.169014084507044], [25.0, 13.813186813186816], [26.0, 12.0], [27.0, 11.68421052631579], [28.0, 15.891719745222929], [29.0, 12.544715447154472], [30.0, 15.810035842293912], [31.0, 13.038461538461537], [32.0, 12.102941176470587], [33.0, 14.731578947368408], [34.0, 14.662499999999998], [35.0, 21.242424242424246], [37.0, 15.103448275862073], [36.0, 16.821428571428566], [38.0, 17.688524590163933], [39.0, 14.052631578947372], [40.0, 22.253424657534246], [41.0, 12.769230769230768], [42.0, 13.92682926829268], [43.0, 18.370491803278686], [44.0, 11.785714285714283], [45.0, 19.802395209580833], [47.0, 15.364864864864865], [46.0, 15.61111111111111], [48.0, 14.935897435897434], [49.0, 22.385416666666664], [50.0, 17.613636363636367], [51.0, 15.073248407643314], [53.0, 42.65060240963856], [52.0, 18.866666666666667], [54.0, 21.425925925925924], [55.0, 27.65178571428572], [56.0, 14.929577464788732], [58.0, 18.897058823529413], [59.0, 15.985559566786998], [60.0, 28.971428571428554], [61.0, 23.70786516853932], [62.0, 17.845901639344262], [63.0, 19.714285714285715], [64.0, 14.757281553398059], [65.0, 20.175675675675677], [66.0, 19.958333333333332], [67.0, 13.133333333333333], [68.0, 20.40551181102361], [69.0, 17.44372990353697], [70.0, 19.598425196850403], [71.0, 13.727272727272728], [72.0, 17.20833333333334], [73.0, 18.091463414634134], [74.0, 24.851851851851848], [75.0, 25.24598930481283], [76.0, 22.630952380952383], [78.0, 19.261437908496717], [79.0, 16.96], [77.0, 19.961206896551726], [80.0, 21.000000000000014], [81.0, 15.50617283950617], [83.0, 23.27548209366391], [82.0, 18.000000000000004], [84.0, 18.345707656612532], [85.0, 25.246153846153867], [86.0, 20.272727272727273], [87.0, 19.83544303797468], [88.0, 33.56315789473684], [89.0, 25.97142857142857], [90.0, 26.354838709677402], [91.0, 20.715909090909086], [92.0, 22.854166666666664], [93.0, 21.042471042471043], [94.0, 21.950000000000006], [95.0, 42.478527607361976], [96.0, 60.28571428571427], [97.0, 23.14583333333333], [98.0, 29.349570200573044], [99.0, 18.61538461538462], [100.0, 23.139364303178468], [101.0, 19.06593406593406], [102.0, 21.913793103448267], [103.0, 35.113259668508306], [104.0, 22.81176470588235], [105.0, 35.25352112676056], [107.0, 22.666666666666682], [106.0, 27.96551724137932], [108.0, 31.05964912280703], [109.0, 21.376470588235293], [110.0, 33.05732484076434], [111.0, 24.194444444444443], [112.0, 24.56249999999999], [113.0, 32.168965517241375], [115.0, 31.69138755980861], [116.0, 18.0], [117.0, 26.474999999999994], [118.0, 47.165137614678905], [119.0, 31.020408163265312], [120.0, 36.432692307692335], [121.0, 23.94387755102041], [122.0, 17.80952380952381], [123.0, 26.39896373056995], [124.0, 45.42000000000001], [125.0, 41.39336492890994], [126.0, 23.019455252918274], [127.0, 25.53676470588235], [128.0, 39.58419243986255], [129.0, 28.41764705882352], [130.0, 36.661728395061736], [131.0, 36.87500000000001], [132.0, 32.06183745583039], [133.0, 33.58409785932724], [134.0, 26.373684210526314], [135.0, 33.0261780104712], [137.0, 70.5], [138.0, 27.465753424657528], [139.0, 25.48888888888889], [140.0, 43.049808429118734], [141.0, 26.955696202531634], [142.0, 31.73913043478259], [143.0, 100.21599999999997], [136.0, 27.701219512195106], [145.0, 32.77196095829636], [146.0, 27.507575757575736], [147.0, 18.115384615384613], [148.0, 28.784222737819036], [149.0, 29.523148148148167], [150.0, 42.595092024539866], [151.0, 23.650000000000002], [144.0, 26.49248120300754], [153.0, 31.531590413943366], [154.0, 27.059259259259253], [155.0, 46.43612334801763], [157.0, 32.789144050104376], [158.0, 40.714843749999986], [159.0, 52.5961538461538], [156.0, 26.823151125401928], [152.0, 28.944444444444443], [160.0, 32.81081081081079], [161.0, 30.821339950372202], [162.0, 36.24590163934429], [163.0, 31.654320987654344], [164.0, 33.80332409972297], [165.0, 33.972577696526464], [166.0, 36.80733944954126], [167.0, 29.109649122807003], [168.0, 26.53344481605351], [170.0, 26.56962025316454], [171.0, 29.96694214876034], [172.0, 38.24758842443727], [173.0, 32.69460227272728], [174.0, 33.17716535433064], [175.0, 34.19658886894076], [169.0, 34.91452991452989], [176.0, 21.25531914893617], [178.0, 34.39808481532143], [179.0, 36.02450980392157], [180.0, 36.12313432835826], [181.0, 58.806818181818166], [182.0, 36.35806451612903], [183.0, 32.8914185639229], [177.0, 37.69565217391306], [185.0, 29.446009389671335], [186.0, 36.126888217522676], [187.0, 35.077922077922075], [188.0, 33.202749140893495], [189.0, 34.079326923076906], [190.0, 32.9933444259567], [191.0, 31.683018867924513], [184.0, 32.431372549019606], [192.0, 27.935483870967744], [193.0, 32.46860643185296], [194.0, 62.1830985915493], [195.0, 36.18362282878408], [196.0, 49.97500000000001], [198.0, 50.362689393939384], [199.0, 27.12195121951221], [197.0, 36.983606557377044], [200.0, 24.8216560509554], [201.0, 34.48787878787876], [203.0, 43.27150084317031], [204.0, 34.44117647058822], [205.0, 32.51612903225807], [206.0, 35.11885245901637], [207.0, 47.632432432432424], [202.0, 54.176470588235304], [208.0, 40.00485908649169], [209.0, 41.300000000000026], [210.0, 40.80524344569292], [212.0, 28.763157894736846], [213.0, 40.91432519576223], [214.0, 33.37671232876713], [215.0, 22.91525423728813], [211.0, 28.65296803652968], [216.0, 39.84745762711863], [217.0, 32.01739130434782], [218.0, 44.69588744588746], [219.0, 34.942307692307715], [220.0, 34.006622516556284], [221.0, 31.547008547008545], [222.0, 39.727589208006975], [223.0, 39.659646166807036], [224.0, 36.74635568513117], [225.0, 33.40969162995593], [226.0, 49.65073529411767], [228.0, 36.36999999999999], [229.0, 39.4217042971595], [230.0, 34.35], [231.0, 39.186528497409334], [227.0, 41.32264150943394], [232.0, 34.94865211810016], [233.0, 43.50606709493223], [234.0, 50.01848049281312], [235.0, 35.009132420091326], [236.0, 44.58157389635323], [237.0, 46.176470588235276], [238.0, 39.27160493827158], [239.0, 41.399141630901255], [240.0, 40.19731800766278], [241.0, 39.49566294919454], [242.0, 39.16000000000001], [243.0, 42.269295302013425], [244.0, 45.24836601307186], [245.0, 42.590664272890514], [246.0, 39.10493827160497], [247.0, 55.14100394811053], [248.0, 43.50342465753425], [249.0, 52.218579234972694], [250.0, 42.925233644859816], [251.0, 32.230650154798745], [252.0, 45.873817034700366], [253.0, 63.69387755102041], [254.0, 49.268188302425045], [255.0, 46.16630400994731], [257.0, 55.10479285134032], [256.0, 44.78552631578959], [258.0, 41.46384222059899], [259.0, 44.023364485981304], [260.0, 42.76257861635222], [261.0, 44.99532273152477], [263.0, 41.052229299363034], [262.0, 50.482142857142854], [264.0, 47.73229461756372], [270.0, 39.816013628620055], [271.0, 36.057823129251716], [268.0, 38.152284263959416], [269.0, 33.23901581722325], [265.0, 43.33694117647054], [266.0, 47.170575692963745], [267.0, 42.60536398467437], [273.0, 42.616858237547895], [272.0, 51.59758551307847], [274.0, 43.74830699774265], [275.0, 44.520143884892114], [276.0, 40.89722222222216], [277.0, 40.39514170040485], [278.0, 40.69050410316533], [279.0, 42.09378531073441], [280.0, 42.736434108527135], [286.0, 45.438016528925594], [287.0, 39.58662762323096], [284.0, 37.767010309278355], [285.0, 39.2391304347826], [281.0, 41.21874999999999], [282.0, 38.877890841813176], [283.0, 37.270588235294134], [289.0, 47.37280701754385], [288.0, 40.90182186234821], [290.0, 37.70774647887322], [291.0, 39.40603852160344], [292.0, 40.67234664070106], [293.0, 42.44197530864195], [294.0, 37.91347342398017], [295.0, 40.42392807745508], [296.0, 45.74236252545819], [302.0, 38.00684931506853], [303.0, 38.191702432045766], [300.0, 55.16825574873804], [301.0, 42.110353130016044], [297.0, 69.97716150081557], [298.0, 35.69616908850726], [299.0, 40.44178794178794], [304.0, 49.407050216162325], [305.0, 38.9590097402597], [306.0, 38.761338289962914], [308.0, 45.466269841269806], [309.0, 47.53125000000001], [310.0, 38.53906249999999], [307.0, 41.548611111111114], [1.0, 12.779069767441863]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[220.5490763888877, 38.571340277778084]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 310.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 77821.48333333334, "minX": 1.68194364E12, "maxY": 431574.2166666667, "series": [{"data": [[1.6819437E12, 122893.08333333333], [1.68194364E12, 431574.2166666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6819437E12, 77821.48333333334], [1.68194364E12, 338660.4166666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6819437E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 30.519955654102084, "minX": 1.68194364E12, "maxY": 48.62831691122625, "series": [{"data": [[1.6819437E12, 30.519955654102084], [1.68194364E12, 37.48369565217403]], "isOverall": false, "label": "GetMatches", "isController": true}, {"data": [[1.68194364E12, 31.078312499999853]], "isOverall": false, "label": "Post", "isController": true}, {"data": [[1.6819437E12, 31.15683380229717], [1.68194364E12, 48.62831691122625]], "isOverall": false, "label": "GetStats", "isController": true}, {"data": [[1.6819437E12, 30.944651262960196], [1.68194364E12, 40.794631245683696]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6819437E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 28.949687500000053, "minX": 1.68194364E12, "maxY": 46.89865551381076, "series": [{"data": [[1.6819437E12, 28.99150036954907], [1.68194364E12, 36.95195200842507]], "isOverall": false, "label": "GetMatches", "isController": true}, {"data": [[1.68194364E12, 28.949687500000053]], "isOverall": false, "label": "Post", "isController": true}, {"data": [[1.6819437E12, 30.211541122745455], [1.68194364E12, 46.89865551381076]], "isOverall": false, "label": "GetStats", "isController": true}, {"data": [[1.6819437E12, 29.805248746269573], [1.68194364E12, 39.57909181412966]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6819437E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.20660547073204608, "minX": 1.68194364E12, "maxY": 1.5001249999999968, "series": [{"data": [[1.6819437E12, 0.464430894308942], [1.68194364E12, 0.9135324206408824]], "isOverall": false, "label": "GetMatches", "isController": true}, {"data": [[1.68194364E12, 1.5001249999999968]], "isOverall": false, "label": "Post", "isController": true}, {"data": [[1.6819437E12, 0.20660547073204608], [1.68194364E12, 0.6821908745067314]], "isOverall": false, "label": "GetStats", "isController": true}, {"data": [[1.6819437E12, 0.29246531089437944], [1.68194364E12, 0.9098989210471917]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6819437E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 9.0, "minX": 1.68194364E12, "maxY": 2145.0, "series": [{"data": [[1.6819437E12, 2130.0], [1.68194364E12, 2145.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6819437E12, 35.0], [1.68194364E12, 57.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6819437E12, 51.0], [1.68194364E12, 111.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6819437E12, 39.0], [1.68194364E12, 62.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6819437E12, 9.0], [1.68194364E12, 9.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6819437E12, 23.0], [1.68194364E12, 39.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6819437E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 10.0, "minX": 7.0, "maxY": 10060.0, "series": [{"data": [[600.0, 12.0], [1273.0, 14.0], [78.0, 12.0], [7.0, 10.0], [2194.0, 14.0], [2738.0, 16.0], [2764.0, 14.0], [172.0, 11.0], [2906.0, 15.0], [3479.0, 18.0], [4022.0, 18.0], [4706.0, 30.0], [4938.0, 33.0], [5083.0, 33.0], [4896.0, 24.0], [5365.0, 42.0], [5237.0, 28.0], [5431.0, 38.0], [5595.0, 40.0], [5586.0, 39.0], [5427.0, 37.0], [5819.0, 25.0], [5679.0, 42.0], [6024.0, 25.0], [6075.0, 34.0], [6275.0, 24.0], [6400.0, 41.0], [7041.0, 33.0], [6944.0, 36.0], [7066.0, 39.0], [7007.0, 38.0], [7173.0, 36.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2194.0, 15.0], [600.0, 10060.0], [2738.0, 15.0], [2906.0, 29.0], [3479.0, 16.0], [1273.0, 21.0], [4896.0, 10059.0], [5365.0, 10000.0], [5431.0, 10030.0], [5595.0, 25.0], [5819.0, 21.0], [5679.0, 15.0], [6024.0, 23.0], [6075.0, 28.0], [6275.0, 20.0], [6400.0, 16.0], [7041.0, 24.0], [6944.0, 30.0], [7066.0, 24.0], [7007.0, 21.0], [7173.0, 26.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 7173.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 7.0, "maxY": 42.0, "series": [{"data": [[600.0, 12.0], [1273.0, 13.0], [78.0, 12.0], [7.0, 10.0], [2194.0, 14.0], [2738.0, 16.0], [2764.0, 14.0], [172.0, 11.0], [2906.0, 15.0], [3479.0, 18.0], [4022.0, 18.0], [4706.0, 30.0], [4938.0, 33.0], [5083.0, 33.0], [4896.0, 24.0], [5365.0, 42.0], [5237.0, 28.0], [5431.0, 38.0], [5595.0, 40.0], [5586.0, 39.0], [5427.0, 37.0], [5819.0, 25.0], [5679.0, 42.0], [6024.0, 25.0], [6075.0, 33.0], [6275.0, 24.0], [6400.0, 41.0], [7041.0, 33.0], [6944.0, 36.0], [7066.0, 38.0], [7007.0, 38.0], [7173.0, 36.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2194.0, 15.0], [600.0, 0.0], [2738.0, 15.0], [2906.0, 18.0], [3479.0, 16.0], [1273.0, 21.0], [4896.0, 0.0], [5365.0, 0.0], [5431.0, 19.0], [5595.0, 16.0], [5819.0, 21.0], [5679.0, 15.0], [6024.0, 23.0], [6075.0, 26.0], [6275.0, 20.0], [6400.0, 16.0], [7041.0, 24.0], [6944.0, 30.0], [7066.0, 24.0], [7007.0, 21.0], [7173.0, 25.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 7173.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 538.0833333333334, "minX": 1.68194364E12, "maxY": 1861.9166666666667, "series": [{"data": [[1.6819437E12, 538.0833333333334], [1.68194364E12, 1861.9166666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6819437E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68194364E12, "maxY": 1591.5666666666666, "series": [{"data": [[1.6819437E12, 541.6833333333333], [1.68194364E12, 1591.5666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68194364E12, 262.1]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.6819437E12, 0.03333333333333333], [1.68194364E12, 0.06666666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}, {"data": [[1.68194364E12, 4.533333333333333]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.68194364E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.MalformedChunkCodingException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6819437E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68194364E12, "maxY": 1853.6666666666667, "series": [{"data": [[1.68194364E12, 262.1]], "isOverall": false, "label": "Post-success", "isController": true}, {"data": [[1.6819437E12, 541.6833333333333], [1.68194364E12, 1853.6666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.6819437E12, 0.03333333333333333], [1.68194364E12, 4.616666666666666]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.68194364E12, 4.566666666666666]], "isOverall": false, "label": "Post-failure", "isController": true}, {"data": [[1.6819437E12, 180.38333333333333], [1.68194364E12, 886.2666666666667]], "isOverall": false, "label": "GetMatches-success", "isController": true}, {"data": [[1.6819437E12, 0.016666666666666666]], "isOverall": false, "label": "GetMatches-failure", "isController": true}, {"data": [[1.6819437E12, 361.3], [1.68194364E12, 705.3]], "isOverall": false, "label": "GetStats-success", "isController": true}, {"data": [[1.6819437E12, 0.016666666666666666], [1.68194364E12, 0.05]], "isOverall": false, "label": "GetStats-failure", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6819437E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.68194364E12, "maxY": 3707.3333333333335, "series": [{"data": [[1.6819437E12, 1083.3666666666666], [1.68194364E12, 3707.3333333333335]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6819437E12, 0.06666666666666667], [1.68194364E12, 9.233333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6819437E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

